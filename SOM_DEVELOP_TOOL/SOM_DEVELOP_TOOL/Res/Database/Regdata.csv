Module,RegName,Address,DefaultValue,BitRange,Direction,Description
ACTIVE,pll_lfvbias_1vh,0x50108000,5,(0:3),R/W,Digital control to choose the Vctrl  value from a voltage divider in VCO calibration mode (from 0.2V to 0.8V with step 0.05V)
ACTIVE,pll_vcoigmboost_1vh,0x50108000,1,(4:4),R/W,Boost the current in constant gm cell when itâ€™s HIGH
ACTIVE,pll_cpbiassel_1vh,0x50108000,1,(5:5),R/W,0: Current Bias from VCO Bias cell 1: Current Bias from HP BGAP cell
ACTIVE,pll_1stpdivword_1vh,0x50108000,4,(6:8),R/W,Digital word to choose the division ratio for the MMD of the First post divider. '0' corresponds to division ratio of 8  7 corresponds to 15
ACTIVE,pll_1stpdivmode_1vh,0x50108000,0,(9:9),R/W,Control word for the first post divider mode. '0' indicates Integer division mode while '1' indicates Fractional mode
ACTIVE,pll_2ndpdiven_1vh,0x50108000,0,(10:10),R/W,Enable for the Second post divider
ACTIVE,pll_1stpdivbin2or3div_1vh,0x50108000,0,(11:11),R/W,Control Word for the first stage of the binary divider inside the First post divider. '0' means divide by 2 while '1' means divide by 3
ACTIVE,pll_1stpdivadcconvclken_1vh,0x50108000,0,(12:12),R/W,Enable for the 1st post divider O/P Clock Buffer going to ADC Conversion Clock with Frequency 16x Fc = 216.96 MHz
ACTIVE,pll_1stpdivdigclk16fcen_1vh,0x50108000,1,(13:13),R/W,Enable for the 1st post divider O/P Clock Buffer going to Digital with Frequency 16x Fc = 216.96 MHz
ACTIVE,pll_2ndpdivadcconvclken_1vh,0x50108000,0,(14:14),R/W,Enable for the 2nd post divider O/P Clock Buffer going to ADC Conversion Clock with Frequency 16x Fc = 216.96 MHz
ACTIVE,pll_2ndpdivdigclk12fcen_1vh,0x50108000,0,(15:15),R/W,Enable for the 2nd post divider O/P Clock Buffer going to Digital with Frequency 12x Fc = 162.72 MHz
ACTIVE,pll_2ndpdivdigclk16fcen_1vh,0x50108000,0,(16:16),R/W,Enable for the 2nd post divider O/P Clock Buffer going to Digital with Frequency 16x Fc = 216.96 MHz
ACTIVE,pll_pdivpbpdclk1fcen_1vh,0x50108000,0,(17:17),R/W,Enable for the 1st post divider O/P Clock Buffer going to Phase-Based Pause Detector (PBPD) Clock with Frequency 1x Fc = 13.56 MHz
ACTIVE,pll_pdivpbpdclk32fcen_1vh,0x50108000,0,(18:18),R/W,Enable for the 1st post divider O/P Clock Buffer going to Phase-Based Pause Detector (PBPD) Clock with Frequency 32x Fc = 433.92 MHz
ACTIVE,pll_pdivpfdclk1fcen_1vh,0x50108000,0,(19:19),R/W,Enable for the 1st post divider O/P Clock Buffer going to PFD Clock with Frequency 1x Fc = 13.56 MHz
ACTIVE,pll_pdivpfdclk32fcen_1vh,0x50108000,0,(20:20),R/W,Enable for the 1st post divider O/P Clock Buffer going to PFD Clock with Frequency 32x Fc = 433.92 MHz
ACTIVE,pll_pdivtdcclk1fcen_1vh,0x50108000,0,(21:21),R/W,Enable for the 1st post divider O/P Clock Buffer going to TDC Clock with Frequency 1x Fc = 13.56 MHz
ACTIVE,pll_pdivtrxclk1fcen_1vh,0x50108000,1,(22:22),R/W,Enable for the 1st post divider O/P Clock Buffer going to TRX Clock with Frequency 1x Fc = 13.56 MHz
ACTIVE,pll_fbdivffen_1vh,0x50108000,0,(23:23),R/W,FB divider enable
ACTIVE,pll_rfcclkgatingpllrfen_1vh,0x50108000,0,(24:24),R/W,Digital control to enable RF carrier clk for PLL
ACTIVE,pll_rfcclkgatingatdcrfen_1vh,0x50108000,0,(25:25),R/W,Digital control to enable RF carrier clk for analog TDC
ACTIVE,pll_rfcclkgatingpbpdrfen_1vh,0x50108000,0,(26:26),R/W,Digital control to enable RF carrier clk for phase based pause detector
ACTIVE,pll_pauseselect_1vh,0x50108000,0,(27:29),R/W,
ACTIVE,pll_bbwsdatasel_1vh,0x50108000,0,(30:31),R/W,
ACTIVE,pll_pfdtimelmtensel_1vh,0x50108004,0,(0:1),R/W,
ACTIVE,pll_pdivdigprcssclk4fcen_1vh,0x50108004,0,(2:2),R/W,
ACTIVE,pll_pfdpausextallessmode_1vh,0x50108004,0,(3:3),R/W,
ACTIVE,pll_atdcrefdiv2_1vh,0x50108004,0,(4:4),R/W,
ACTIVE,pll_atdcrefdiv4_1vh,0x50108004,0,(5:5),R/W,
ACTIVE,pll_atdccntrbaren_1vh,0x50108004,1,(6:6),R/W,
ACTIVE,dynsparespllmode_1vh,0x50108004,0,(7:14),R/W,
ACTIVE,spare_active_romdyn0,0x50108008,65535,(0:31),R/W,Spare
ACTIVE,spare_active_romdyn1,0x5010800C,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108010,12,(0:31),R,
ACTIVE,Reserved,0x50108014,13,(0:31),R,
ACTIVE,trx_rxferefdacmctrl_1vh,0x50108018,8,(0:3),R/W,"refdac 4 bit binary to control vref  for ""attinc"" therhold comparator"
ACTIVE,trx_rxferefdachctrl_1vh,0x50108018,10,(4:7),R/W,"refdac 4 bit binary to control vref  for ""atthi"" therhold comparator"
ACTIVE,trx_rxferefdaclctrl_1vh,0x50108018,6,(8:11),R/W,"refdac 4 bit binary to control vref  for ""attlo"" therhold comparator"
ACTIVE,trx_rxmxrictrl_1vh,0x50108018,1,(12:13),R/W,Control current programmability in Gm stage
ACTIVE,trx_rxmxrlosl_1vh,0x50108018,0,(14:14),R/W,LO select control    0 => PLL     1=> RX-CLKGEN 
ACTIVE,trx_rxbbai1ctrl_1vh,0x50108018,2,(15:16),R/W,BBA power control for OTAs 1 2 3
ACTIVE,trx_rxbbai2ctrl_1vh,0x50108018,2,(17:18),R/W,BBA power control for OTA 4
ACTIVE,trx_rxbbarf2ctrl_1vh,0x50108018,0,(19:19),R/W,BBA second stage Rf control
ACTIVE,trx_rxadcictrl_1vh,0x50108018,3,(20:21),R/W,Comparator current programmability
ACTIVE,trx_rxadccmprstsl_1vh,0x50108018,0,(22:22),R/W,Comparator enable width selection
ACTIVE,trx_rxadcdlytrmrcen_1vh,0x50108018,0,(23:23),R/W,Selection between ce/rw words
ACTIVE,trx_rxdcdacictrl_1vh,0x50108018,0,(24:25),R/W,cdac current range control 
ACTIVE,trx_rxdfdacictrl_1vh,0x50108018,0,(26:27),R/W,fdac current range control 
ACTIVE,pmu_txldocmfilten_1vh,0x50108018,1,(28:28),R/W,
ACTIVE,pmu_txldocmrange_1vh,0x50108018,1,(29:29),R/W,
ACTIVE,trx_rxlosl_1vh,0x50108018,0,(30:30),R/W,
ACTIVE,trx_rxfeclksel_1vh,0x50108018,1,(31:31),R/W,
ACTIVE,dynsparestrxmode_1vh,0x5010801C,0,(0:7),R/W,
ACTIVE,digctrl_trx_txpamode_1vh,0x5010801C,0,(8:15),R/W,control the PA mode between single ended and differential in case of ALM and in case of single-ended it should select between positive and negative terminals
ACTIVE,digctrl_trx_rxfefrccealmen_1vh,0x5010801C,0,(16:16),R/W,
ACTIVE,digctrl_trx_rxfefrccealmenden_1vh,0x5010801C,0,(17:17),R/W,
ACTIVE,digctrl_trx_rxfeclk13p5msel_1vh,0x5010801C,0,(18:19),R/W,
ACTIVE,digctrl_trx_rxfeprtctmntren_1vh,0x5010801C,1,(20:20),R/W,
ACTIVE,digctrl_rfagcgndflt_1v,0x5010801C,1,(21:26),R/W,
ACTIVE,digctrl_trx_txpasyncen_1vh,0x5010801C,0,(27:27),R/W,
ACTIVE,digctrl_trx_rxfefrc1gn_1vh,0x5010801C,1,(28:28),R/W,
ACTIVE,digctrl_rfagcfrcgn_1vh,0x50108020,63,(0:5),R/W,
ACTIVE,spare_active_romdyn3,0x50108024,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108028,0,(0:31),R/W,
ACTIVE,Reserved,0x5010802C,0,(0:31),R/W,
ACTIVE,trx_rxbbabwctrl_1vh,0x50108030,2,(0:1),R/W,BBA bandwidth control
ACTIVE,dynsparesbbabw_1vh,0x50108030,0,(2:5),R/W,
ACTIVE,spare_active_romdyn4,0x50108034,65535,(0:31),R/W,Spare
ACTIVE,spare_active_romdyn5,0x50108038,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x5010803C,0,(0:31),R/W,
ACTIVE,Reserved,0x50108040,0,(0:31),R/W,
ACTIVE,trx_abpdthlpfbypass_1vh,0x50108044,0,(0:0),R/W,Digital control to by-pass threshold filter used on envelope 0 => Use filter (Default) 1 => By-pass filter
ACTIVE,dynsparescerx_1vh,0x50108044,0,(1:4),R/W,
ACTIVE,spare_active_romdyn6,0x50108048,65535,(0:31),R/W,Spare
ACTIVE,spare_active_romdyn7,0x5010804C,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108050,0,(0:31),R/W,
ACTIVE,Reserved,0x50108054,0,(0:31),R/W,
ACTIVE,dynsparescetx_1vh,0x50108058,0,(0:3),R/W,
ACTIVE,spare_active_romdyn8,0x5010805C,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108060,0,(0:31),R/W,
ACTIVE,Reserved,0x50108064,0,(0:31),R/W,
ACTIVE,digctrl_pll_pfdtimelmten_1vh,0x50108068,0,(0:0),R/W,
ACTIVE,digctrl_pll_sml1pausegate_1vh,0x50108068,0,(1:1),R/W,
ACTIVE,digctrl_trx_rxfefrccealmend_1vh,0x50108068,0,(2:2),R/W,
ACTIVE,spare_active_romdyn10,0x5010806C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_romdyn11,0x50108070,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108074,0,(0:31),R/W,
ACTIVE,Reserved,0x50108078,0,(0:31),R/W,
ACTIVE,pll_cpilkdnen_1vh,0x5010807C,0,(0:0),R/W,Enable for DN leakage current
ACTIVE,pll_cpilkupen_1vh,0x5010807C,0,(1:1),R/W,Enable for UP leakage current
ACTIVE,pll_1stpdiviqmuxsel_1vh,0x5010807C,0,(2:2),R/W,Selection Control Bit for the IQ Output MUX '0': Choose the IQ generated from the Post Divider Chain (Default) '1': Choose the IQ generated from the Reference Divider Path
ACTIVE,pll_1stpdivrefdiven_1vh,0x5010807C,0,(3:3),R/W,Enable for the IQ Divider of Reference Clock (27.12MHz)
ACTIVE,pll_pdivrefclken_1vh,0x5010807C,0,(4:4),R/W,Gating Signal for the Reference Clock (27.12MHz) entering the binary divider
ACTIVE,pll_fbdivsden_1vh,0x5010807C,1,(5:5),R/W,SDM Enable
ACTIVE,pll_fbdivditheren_1vh,0x5010807C,0,(6:6),R/W,Enable for the Dithering option inside the SDM
ACTIVE,pll_fbdivbindiv2en_1vh,0x5010807C,0,(7:7),R/W,Enable for the Divide by 2 option for the FB Divider O/P
ACTIVE,pll_fbdivbindiv4en_1vh,0x5010807C,0,(8:8),R/W,Enable for the Divide by 4 option for the FB Divider O/P Hint: To generate Divide by 4  Divide by 2 enable should be = 1
ACTIVE,pll_pfdtdel_1vh,0x5010807C,0,(9:10),R/W,Reset Pulse Delay trim
ACTIVE,spare_active_dhdyn0,0x50108080,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dhdyn1,0x50108084,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dhdyn2,0x50108088,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dhdyn3,0x5010808C,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108090,0,(0:31),R/W,
ACTIVE,Reserved,0x50108094,0,(0:31),R/W,
ACTIVE,Reserved,0x50108098,0,(0:31),R/W,
ACTIVE,Reserved,0x5010809C,0,(0:31),R/W,
ACTIVE,pll_pfdtimelmttrm_1vh,0x501080A0,4,(0:2),R/W,Time limit triming Step equals to 0.5/(32Fc) Or 0.5/(48Fc) dependent on the Postdiv settings. Starting from 0.5/(32Fc) to 4/32Fc)
ACTIVE,pll_pbpdncyclebeforepause_1vh,0x501080A0,2,(3:4),R/W,Digital control to select how many PLL cycles should pass with internal pause flag is set to high before setting the output flag 00==>No cycles 01==>1 cycle 10==>2 cycles 11==>3 cycles Note: Not applied yet
ACTIVE,pll_pbpdncycleafterpause_1vh,0x501080A0,2,(5:6),R/W,Digital control to select how many PLL cycles should pass before resetting the output flag 00==>1 cycle 01==>2 cycles 10==>3 cycles 11==>4 cycles Note: Not applied yet
ACTIVE,pll_pbpdpwctrl_1vh,0x501080A0,2,(7:9),R/W,Digital control to select the required delay between PLL and RF before setting the pause flag to high
ACTIVE,trx_abpdcenvthlpf_1vh,0x501080A0,2,(10:13),R/W,Digital control to select value of capacitor used in envelope LPF 0000 => 250fF Each step adds 250fF 1111 => 4pF
ACTIVE,trx_abpdcenvlpf_1vh,0x501080A0,0,(14:16),R/W,Digital control to select value of capacitor used in envelope LPF 000 => 250fF Each step adds 250fF 111 => 2pF
ACTIVE,trx_abpdcenv_1vh,0x501080A0,11,(17:20),R/W,Digital control to select value of capacitor used for envelope detector 0000 => 3pF Each step adds 0.6pF 1111 => 12pF
ACTIVE,trx_abpdagclowgain_1vh,0x501080A0,0,(21:28),R/W,low gain settings MSB=0 => Envelope detector low gain(1.6) MSB=1 => Envelope detector high gain(5) LSB=0 => Buffer acts as buffer LSB=1 => Buffer provide gain of 3
ACTIVE,trx_abpdagchighgain_1vh,0x501080A4,3,(0:7),R/W,high gain settings MSB=0 => Envelope detector low gain(1.6) MSB=1 => Envelope detector high gain(5) LSB=0 => Buffer acts as buffer LSB=1 => Buffer provide gain of 3
ACTIVE,trx_abpdenvth_1vh,0x501080A4,12,(8:11),R/W,Digital control to select threshold level used for comparison in the slicer 1111 => 100% of envelope Each step decrease from 100% by 7.14% 0000 => 0% of envelope
ACTIVE,spare_active_dhdyn4,0x501080A8,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dhdyn5,0x501080AC,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dhdyn6,0x501080B0,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x501080B4,0,(0:31),R/W,
ACTIVE,Reserved,0x501080B8,0,(0:31),R/W,
ACTIVE,pll_bbwsdatadlysel_1vh,0x501080BC,7,(0:3),R/W,
ACTIVE,spare_active_dhdyn7,0x501080C0,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x501080C4,0,(0:31),R/W,
ACTIVE,Reserved,0x501080C8,0,(0:31),R/W,
ACTIVE,pll_lfhvcompvbias_1vh,0x501080CC,1,(0:1),R/W,Digital control to choose the threshold voltage  value for the high vcm comparator from 0.8V to 0.65V with step 0.05V)
ACTIVE,pll_lflvcompvbias_1vh,0x501080CC,1,(2:3),R/W,Digital control to choose the threshold voltage  value for the low vcm comparator from 0.2V to 0.35V with step 0.05V)
ACTIVE,pll_lfcalibmuxctrl_1vh,0x501080CC,2,(4:5),R/W,Digital control to enable the voltage divider 00 01: enabled when â€œcalibdoneâ€?signal is 0 and vice versa 10: Always enabled  11: Always disabled Note: The enable of voltage divider is also ORed with â€œlockdetenâ€?to provide the threshold voltages for comparators 
ACTIVE,pll_vcobuffibias_1vh,0x501080CC,3,(6:7),R/W,Controls the programmability of VCO buffer current source from 37.5 uA to 150uA with step = 37.5uA
ACTIVE,pll_vcoibias_1vh,0x501080CC,12,(8:13),R/W,Controls the programmability of VCO buffer current source from 93.75 uA to 956.25 uA with step = 37.5uA
ACTIVE,pll_vcotdcvdden_1vh,0x501080CC,1,(14:14),R/W,Digital control to enable power gating switch for VCO buffer VDD going to TDC
ACTIVE,pll_vcocfsfilteren_1vh,0x501080CC,1,(15:15),R/W,When itâ€™s low  It shorts the resistance of RC filter connected to the  vdd of CFS Code  digital buffers (disable the RC filter) 
ACTIVE,pll_2ndpdivword_1vh,0x501080CC,0,(16:18),R/W,Digital word to choose the division ratio for the MMD of the Second post divider. '0' corresponds to division ratio of 8  7 corresponds to 15
ACTIVE,pll_fbdivsdrst_1vh,0x501080CC,1,(19:19),R/W,Synchronized Reset Signal from Digtop
ACTIVE,pll_atdcbufferdelay_1vh,0x501080CC,0,(20:20),R/W,Digital control to select buffers are enable before and after measurement by 1 or 2 cycles minimum 0 ==> 1 cycle 1 ==> 2 cycles
ACTIVE,pll_atdcaddercarryin_1vh,0x501080CC,0,(21:21),R/W,Digital control to add one or zero to TDC reading 0 ==> No Addition 1 ==> Add one count
ACTIVE,pll_atdcrstpulsectrl_1vh,0x501080CC,3,(22:23),R/W,Digital controls to select min vcoclkgate pulse width with typical steps of 52ps 00 ==> Min 01 ==> Add 52ps typically w.r.t to min 10 ==> Add 104ps typically w.r.t to min 11 ==> Add 156ps typically w.r.t to min
ACTIVE,pll_atdccountersvdden_1vh,0x501080CC,1,(24:24),R/W,Digital control to connect supply to counters Note: This control overrides internal signal inside ATDC
ACTIVE,pll_atdcvdden_1vh,0x501080CC,1,(25:25),R/W,"Digital control to connect supply to analog tdc Note: This control overrides ""tdcint_atdcsupplyen_1v"""
ACTIVE,pll_pauseforced_1vh,0x501080CC,0,(26:26),R/W,
ACTIVE,pll_bbwsdataforced_1vh,0x501080CC,0,(27:27),R/W,
ACTIVE,pll_sml1pausegateinvert_1vh,0x501080CC,0,(28:28),R/W,
ACTIVE,pll_pfdtimelmtenforce_1vh,0x501080CC,0,(29:29),R/W,
ACTIVE,aux_adcmasrst_1vh,0x501080CC,1,(30:30),R/W,ADC Asynchronous master reset
ACTIVE,aux_adcrefhpmode_1vh,0x501080D0,7,(0:2),R/W,Control bits for faster VREF generation (High current/Low output impedance)
ACTIVE,aux_adcinmuxch1rst_1vh,0x501080D0,1,(3:3),R/W,Input mux channel 1 reset
ACTIVE,aux_adcinmuxch2rst_1vh,0x501080D0,1,(4:4),R/W,Input mux channel 2 reset
ACTIVE,aux_adcinmuxch3rst_1vh,0x501080D0,1,(5:5),R/W,Input mux channel 3 reset
ACTIVE,aux_adcinmuxclkswdly_1vh,0x501080D0,0,(6:7),R/W,Delay between different channels  00: 1 clk delay 01: 2 clk delay 10: 3 clk delay 11: 4 clk delay
ACTIVE,aux_adccodein_1vh,0x501080D0,7,(8:10),R/W,CTRL for overlap between subrange DACS (Default Val:7 for FS range)
ACTIVE,aux_adcinmuxrst_1vh,0x501080D0,1,(11:11),R/W,Synchronous reset for Input MUX (Controlled by Digital Controller & resets internal states)
ACTIVE,aux_adcinmuxrstb_1vh,0x501080D0,0,(12:12),R/W,Asynchronous reset for Input MUX (Low by default  turns high with POR)
ACTIVE,aux_adcinmuxen_1vh,0x501080D0,0,(13:13),R/W,Input MUX Enable (Holds current state)
ACTIVE,pmu_txldoclen_1vh,0x501080D0,1,(14:14),R/W,TXLDO Current Limiter enable
ACTIVE,pmu_txldocmen_1vh,0x501080D0,1,(15:15),R/W,TXLDO Current monitor enable
ACTIVE,pmu_txldodisswpulseen_1vh,0x501080D0,1,(16:16),R/W,TXLDO Disable Switch Pulse Enable
ACTIVE,trx_rxmxrloenmode_1vh,0x501080D0,1,(17:17),R/W,"1 --> LO is always ON  while ""0"" makes LO disabled at RF-AGC operation"
ACTIVE,trx_rxadccmpvldmod_1vh,0x501080D0,0,(18:18),R/W,Internal comp valid generation
ACTIVE,trx_rxadcdlymnsl_1vh,0x501080D0,1,(19:19),R/W,Selection between manual or auto trimming
ACTIVE,trx_rxadcistrngen_1vh,0x501080D0,1,(20:20),R/W,Comparator steering option
ACTIVE,trx_rxadctsten_1vh,0x501080D0,0,(21:21),R/W,Enable ADC test mode 
ACTIVE,trx_rxicdacmod_1vh,0x501080D0,3,(22:23),R/W,I branch mode selection (diff single disable) of cdac
ACTIVE,trx_rxqcdacmod_1vh,0x501080D0,3,(24:25),R/W,q branch mode selection (diff single disable) of cdac
ACTIVE,trx_rxifdacmod_1vh,0x501080D0,3,(26:27),R/W,I branch mode selection (diff single disable) of fdac
ACTIVE,trx_rxqfdacmod_1vh,0x501080D0,3,(28:29),R/W,q branch mode selection (diff single disable) of fdac
ACTIVE,trx_rxcdacbypfrc_1vh,0x501080D0,1,(30:30),R/W,Forces bypassing the LPF in CDACs
ACTIVE,trx_rxfdacbypfrc_1vh,0x501080D0,1,(31:31),R/W,Forces bypassing the LPF in FDACs
ACTIVE,trx_rxcdactsten_1vh,0x501080D4,0,(0:0),R/W,Enable DCOC DACs test mode
ACTIVE,trx_rxfdactsten_1vh,0x501080D4,0,(1:1),R/W,Enable DCOC DACs test mode
ACTIVE,trx_txpanvrclkbyp_1vh,0x501080D4,1,(2:2),R/W,bypass non-overlapped clock feature
ACTIVE,trx_txpaphadjstp_1vh,0x501080D4,0,(3:7),R/W,control phase of +ve RF carrier of PA
ACTIVE,trx_txpaphadjstn_1vh,0x501080D4,0,(8:12),R/W,control phase of -ve RF carrier of PA
ACTIVE,trx_txpafsten_1vh,0x501080D4,1,(13:13),R/W,Disable PMOS through gating predriver clock at high level
ACTIVE,trx_txpaslwen_1vh,0x501080D4,0,(14:14),R/W,Enable pull up resistor for OFF PMOS 
ACTIVE,pmu_predrvrldobypass_1vh,0x501080D4,0,(15:15),R/W,PA Pre-Drivers LDO bypass
ACTIVE,trx_rxfehystensl_1vh,0x501080D4,0,(16:16),R/W,select between enable therhold comparator either from agc freeze out or  test enable    this only for loflag   hiflag comp
ACTIVE,trx_rxfeattincensl_1vh,0x501080D4,0,(17:17),R/W,select betweenn enable therhold comparator either from agc freeze out or  test enable    this only middle comp   attinc_flag
ACTIVE,trx_rxfeclkdlysl_1vh,0x501080D4,0,(18:19),R/W,2 bit to select track &hold cclock delay and digital agc clock delay
ACTIVE,trx_rxfextrcpcnt_1vh,0x501080D4,0,(20:20),R/W,1 bit contigency to extra capacitance on track and hold circuit 
ACTIVE,trx_rxfecrntprgclkcmp_1vh,0x501080D4,0,(21:22),R/W,2 bit current contigency for clock comparator
ACTIVE,trx_rxfecrntprgthrshcmp_1vh,0x501080D4,0,(23:24),R/W,2 bit current contigency for 3-therhold comparator
ACTIVE,trx_rxfetswpksl_1vh,0x501080D4,0,(25:25),R/W,select either test positive or negative peak
ACTIVE,trx_rxfetswpken_1vh,0x501080D4,0,(26:26),R/W,enable testing peak
ACTIVE,trx_rxfedgtmxen_1vh,0x501080D4,0,(27:27),R/W,digital control for enable testing of digital signals 
ACTIVE,rfagcdvst_1vh,0x501080D4,0,(28:29),R/W,controling clock divide ratio
ACTIVE,rfagcfrcgnen_1vh,0x501080D4,0,(30:30),R/W,"RF AGC Gain (Attenuator setting) force enable  selects the value of ""rfagc_frcgainval_d"" as the attenuator setting"
ACTIVE,rfagcrstn_1vh,0x501080D4,0,(31:31),R/W,"same reset as of agc but used in flip flops which at ""analog delay elements"""
ACTIVE,trx_smplclkrstb_1vh,0x501080D8,0,(0:0),R/W,Reset of sampled clocks out for PI calibration (active low)
ACTIVE,pmu_txldonoloadcurrenten_1vh,0x501080D8,0,(1:1),R/W,TXLDO no load dummy current Enable
ACTIVE,pmu_txldoreftrim_1vh,0x501080D8,0,(2:2),R/W,
ACTIVE,Reserved,0x501080D8,0,(3:31),R/W,
ACTIVE,sml0_pll_clk_grp_en,0x501080DC,0,(0:0),R/W,SML0 PLL CLK Group Enable
ACTIVE,actvclkgen_tdc_interface_clk_en,0x501080DC,0,(1:1),R/W,TDC Interface Clock Enable
ACTIVE,actvclkgen_vco_cal_clk_en,0x501080DC,0,(2:2),R/W,VCO Calibration Clock Enable
ACTIVE,actvclkgen_pll_adjust_clk_en,0x501080DC,0,(3:3),R/W,PLL Adjust Clock Enable
ACTIVE,actvclkgen_pll_pause_monitor_clk_en,0x501080DC,0,(4:4),R/W,PLL Pause Monitor Clock Enable
ACTIVE,sml0_rx_clk_grp_en,0x501080DC,0,(5:5),R/W,SML0 RX CLK Group Enable
ACTIVE,actvclkgen_dcoc_fc_clk_en,0x501080DC,0,(6:6),R/W,DCOC FC Clock Enable
ACTIVE,actvclkgen_dcoc_2fc_clk_en,0x501080DC,0,(7:7),R/W,DCOC 2FC Clock Enable
ACTIVE,actvclkgen_dcoc_fir_clk_en,0x501080DC,0,(8:8),R/W,DCOC FIR Clock Enable
ACTIVE,actvclkgen_bb_agc_deci_clk_en,0x501080DC,0,(9:9),R/W,BB AGC DECI Clock Enable
ACTIVE,actvclkgen_bb_agc_adc_div2_clk_en,0x501080DC,0,(10:10),R/W,BB AGC ADC/2 Clock Enable
ACTIVE,actvclkgen_bb_agc_deci_op_clk_en,0x501080DC,0,(11:11),R/W,BB AGC DECI OP Clock Enable
ACTIVE,actvclkgen_bb_agc_adc_op_clk_en,0x501080DC,0,(12:12),R/W,BB AGC ADC OP Clock Enable
ACTIVE,actvclkgen_bb_agc_sys_clk_en,0x501080DC,0,(13:13),R/W,BB AGC SYS Clock Enable
ACTIVE,actvclkgen_trgtphopt_clk_en,0x501080DC,0,(14:14),R/W,trgtphopt Clock Enable
ACTIVE,actvclkgen_rx_lpf_bw_clk_en,0x501080DC,0,(15:15),R/W,RX LPF BW Clock Enable
ACTIVE,actvclkgen_rfagc_clk_en,0x501080DC,0,(16:16),R/W,RF AGC Clock Enable
ACTIVE,sml0_tx_clk_grp_en,0x501080DC,0,(17:17),R/W,SML0 TX CLK Group Enable
ACTIVE,actvclkgen_pa_ctrl_clk_en,0x501080DC,0,(18:18),R/W,PA Control Clock Enable
ACTIVE,actvclkgen_pa_ctrl_cdc_clk_en,0x501080DC,0,(19:19),R/W,PA Control CDC Clock Enable
ACTIVE,actvclkgen_tx_ldo_ctrl_clk_en,0x501080DC,0,(20:20),R/W,TX LDO Control Clock Enable
ACTIVE,sml1_clk_grp_en,0x501080DC,0,(21:21),R/W,SML1 CLK Group Enable
ACTIVE,actvclkgen_sml1_clk_en,0x501080DC,0,(22:22),R/W,SML1 Clock Enable
ACTIVE,actvclkgen_sml1_rxctrl_rfagc_sync_clk_en,0x501080DC,0,(23:23),R/W,SML1 RX CTRL RF AGC SYNC Clock Enable
ACTIVE,actvclkgen_fssi_clk_en,0x501080DC,0,(24:24),R/W,FSSI Clock Enable
ACTIVE,actvclkgen_gpadc_conv_clk_en,0x501080DC,0,(25:25),R/W,GP ADC Clock Enable
ACTIVE,clitop_adc_root_clk_grp_en,0x501080DC,0,(26:26),R/W,CLI and ADC CLK Group Enable
ACTIVE,actvclkgen_clitop_txser_clk_en,0x501080DC,0,(27:27),R/W,CLI TX SER Clock Enable
ACTIVE,actvclkgen_clitop_cea_0p5fc_clk_en,0x501080DC,0,(28:28),R/W,CLI CEA 0.5*FC Clock Enable
ACTIVE,actvclkgen_clitop_cea_fc_clk_en,0x501080DC,0,(29:29),R/W,CLI CEA FC Clock Enable
ACTIVE,actvclkgen_dfemdmtop_adcsample_clk_en,0x501080DC,0,(30:30),R/W,DFE MDMTOP ADC Sample Clock Enable
ACTIVE,Reserved,0x501080DC,0,(31:31),R/W,
ACTIVE,actvclkgen_dsp_subsys_clk_en,0x501080E0,1,(0:0),R/W,DSP SYS Clock Enable
ACTIVE,actvclkgen_dsp_xtmem_clk_en,0x501080E0,1,(1:1),R/W,DSP XT MEM Clock Enable
ACTIVE,actvclkgen_dsp_clitop_clk_en,0x501080E0,1,(2:2),R/W,DSP CLI TOP Clock Enable
ACTIVE,actvclkgen_actvclkgen_dsp_hclk_en,0x501080E0,1,(3:3),R/W,DSP H Clock Enable
ACTIVE,actvclkgen_actvclkgen_dsp_pclk3_en,0x501080E0,1,(4:4),R/W,DSP PCLK3 Enable
ACTIVE,actvclkgen_dsp_topreg_clk_en,0x501080E0,1,(5:5),R/W,DSP top regfile Clock Enable
ACTIVE,actvclkgen_dsp_clitop_bus_clk_en,0x501080E0,1,(6:6),R/W,DSP CLI TOP BUS Clock Enable
ACTIVE,actvclkgen_dsp_dfemdmtop_bus_clk_en,0x501080E0,1,(7:7),R/W,DSP DFE MDMTOP BUS Clock Enable
ACTIVE,actvclkgen_dsp_pclk2_en,0x501080E0,1,(8:8),R/W,DSP PCLK2 Enable
ACTIVE,actvclkgen_dsp_sml0pll_pclk_en,0x501080E0,1,(9:9),R/W,DSP SML0 PLL PCLK Enable
ACTIVE,actvclkgen_dsp_sml0tx_pclk_en,0x501080E0,1,(10:10),R/W,DSP SML0 TX PCLK Enable
ACTIVE,actvclkgen_dsp_sml0rx_pclk_en,0x501080E0,1,(11:11),R/W,DSP SML0 RX PCLK Enable
ACTIVE,actvclkgen_dsp_sml1_pclk_en,0x501080E0,1,(12:12),R/W,DSP SML1 PCLK Enable
ACTIVE,actvclkgen_dsp_active_pclk_en,0x501080E0,1,(13:13),R/W,DSP Active PCLK Enable
ACTIVE,actvclkgen_dsp_stdby_pclk_en,0x501080E0,1,(14:14),R/W,DSP STDBY PCLK Enable
ACTIVE,actvclkgen_dsp_aon_pclk_en,0x501080E0,1,(15:15),R/W,DSP AON PCLK Enable
ACTIVE,actvclkgen_dsp_iqdma1_clk_en,0x501080E0,1,(16:16),R/W,DSP IQ DMA1 Clock Enable
ACTIVE,actvclkgen_dsp_iqdma2_clk_en,0x501080E0,1,(17:17),R/W,DSP IQ DMA2 Clock Enable
ACTIVE,actvclkgen_dsp_tracectrl_clk_en,0x501080E0,1,(18:18),R/W,DSP Trace Clock Enable
ACTIVE,actvclkgen_dsp_timer_bus_clk_en,0x501080E0,1,(19:19),R/W,DSP Timer Bus Clock Enable 
ACTIVE,actvclkgen_dsp_rfseq_clk_en,0x501080E0,1,(20:20),R/W,DSP RF SEQ Clock Enable
ACTIVE,actvclkgen_dsp_hmb_clk_en,0x501080E0,1,(21:21),R/W,DSP HMB Clock Enable
ACTIVE,actvclkgen_dsp_bbi_clk_en,0x501080E0,1,(22:22),R/W,DSP BBI Clock Enable 
ACTIVE,actvclkgen_uart_tracectrl_clk_en,0x501080E0,1,(23:23),R/W,UART Trace Control Clock Enable
ACTIVE,actvclkgen_dsp_timer_ref_clk_en,0x501080E0,1,(24:24),R/W,DSP Timer Clock Enable
ACTIVE,Reserved,0x501080E0,0,(25:31),R/W,
ACTIVE,actvclkgen_dfemdm_mainmdm_clk_en,0x501080E4,1,(0:0),R/W,DSP DFE MDM Main Clock Enable
ACTIVE,actvclkgen_dfemdm_rx0_clk_en,0x501080E4,1,(1:1),R/W,DSP DFE MDM RX0 Clock Enable     
ACTIVE,actvclkgen_dfemdm_rx1_clk_en,0x501080E4,1,(2:2),R/W,DSP DFE MDM RX1 Clock Enable
ACTIVE,actvclkgen_dfemdm_meanstg_clk_en,0x501080E4,1,(3:3),R/W,DSP DFE MDM MEANSTG Clock Enable
ACTIVE,actvclkgen_dfemdm_corrstg_clk_en,0x501080E4,1,(4:4),R/W,DSP DFE MDM CORRSTG Clock Enable
ACTIVE,actvclkgen_dfemdm_phscrrtstg_clk_en,0x501080E4,1,(5:5),R/W,DSP DFE MDM PHSCRRTSTG Clock Enable
ACTIVE,actvclkgen_dfemdm_dcsnstg_clk_en,0x501080E4,1,(6:6),R/W,DSP DFE MDM DCSNSTG Clock Enable
ACTIVE,actvclkgen_dfemdm_rxloopsctrl_clk_en,0x501080E4,1,(7:7),R/W,DSP DFE MDM RXLOOPSCTRL Clock Enable
ACTIVE,actvclkgen_dfemdm_rssi_clk_en,0x501080E4,1,(8:8),R/W,DSP DFE MDM RSSI Clock Enable
ACTIVE,actvclkgen_dfemdm_dpctrl_clk_en,0x501080E4,1,(9:9),R/W,DSP DFE MDM DPCTRL Clock Enable
ACTIVE,actvclkgen_dfemdm_dmactrl0_clk_en,0x501080E4,1,(10:10),R/W,DSP DFE MDM DMACTRL0 Clock Enable
ACTIVE,actvclkgen_dfemdm_dmactrl1_clk_en,0x501080E4,1,(11:11),R/W,DSP DFE MDM DMACTRL1 Clock Enable
ACTIVE,actvclkgen_dfemdm_hpf_ipath_clk_en,0x501080E4,1,(12:12),R/W,DSP DFE MDM HPF I-PATH Clock Enable
ACTIVE,actvclkgen_dfemdm_hpf_qpath_clk_en,0x501080E4,1,(13:13),R/W,DSP DFE MDM HPF Q-PATH Clock Enable   
ACTIVE,actvclkgen_dfemdm_notch_ipath_clk_en,0x501080E4,1,(14:14),R/W,DSP DFE MDM NOTCH I-PATH Clock Enable
ACTIVE,actvclkgen_dfemdm_notch_qpath_clk_en,0x501080E4,1,(15:15),R/W,DSP DFE MDM NOTCH Q-PATH Clock Enable
ACTIVE,actvclkgen_dfemdm_cic_deci_ipath_clk_en,0x501080E4,1,(16:16),R/W,DSP DFE MDM CIC DECI I-PATH Clock Enable
ACTIVE,actvclkgen_dfemdm_cic_deci_qpath_clk_en,0x501080E4,1,(17:17),R/W,DSP DFE MDM CIC DECI Q-PATH Clock Enable
ACTIVE,actvclkgen_dfemdm_polyphase_ipath_clk_en,0x501080E4,1,(18:18),R/W,DSP DFE MDM POLYPHASE I-PATH Clock Enable
ACTIVE,actvclkgen_dfemdm_polyphase_qpath_clk_en,0x501080E4,1,(19:19),R/W,DSP DFE MDM POLYPHASE Q-PATH Clock Enable
ACTIVE,Reserved,0x501080E4,0,(20:31),R/W,
ACTIVE,actvclkgen_cm0p_clk_en,0x501080E8,1,(0:0),R/W,M0 Clock Enable
ACTIVE,actvclkgen_bus1_hclk_en,0x501080E8,1,(1:1),R/W,M0 Bus HCLK Clock Enable
ACTIVE,actvclkgen_cm0p_dclk_en,0x501080E8,1,(2:2),R/W,M0 Core DCLK Clock Enable
ACTIVE,actvclkgen_cm0p_sclk_en,0x501080E8,1,(3:3),R/W,M0 Core SCLK Clock Enable
ACTIVE,actvclkgen_cm0p_hclk_en,0x501080E8,1,(4:4),R/W,M0 Core HCLK Clock Enable
ACTIVE,actvclkgen_dwdma_hclk_en,0x501080E8,1,(5:5),R/W,M0 DMA HCLK Clock Enable
ACTIVE,actvclkgen_ahb2ahbsyncup1_hclk_en,0x501080E8,1,(6:6),R/W,AHB to AHB Syncup 1 HCLK Clock Enable
ACTIVE,actvclkgen_ahb2ahbsyncup2_hclk_en,0x501080E8,1,(7:7),R/W,AHB to AHB Syncup 2 HCLK Clock Enable
ACTIVE,actvclkgen_ahb2ahbsyncdown_hclk_en,0x501080E8,1,(8:8),R/W,AHB to AHB Syncdown HCLK Clock Enable
ACTIVE,actvclkgen_shram_hclk_en,0x501080E8,1,(9:9),R/W,Share 32K RAM HCLK Clock Enable
ACTIVE,actvclkgen_cm0pram_hclk_en,0x501080E8,1,(10:10),R/W,RAM/ROM 128K HCLK Clock Enable
ACTIVE,actvclkgen_mtb_hclk_en,0x501080E8,1,(11:11),R/W,MTB/MTBRAM HCLK Clock Enable
ACTIVE,actvclkgen_cm0prom_hclk_en,0x501080E8,1,(12:12),R/W,OTP HCLK Clock Enable
ACTIVE,actvclkgen_i2c_hclk_en,0x501080E8,1,(13:13),R/W,I2C/I3C HCLK Clock Enable
ACTIVE,actvclkgen_gpio0_hclk_en,0x501080E8,1,(14:14),R/W,GPIO HCLK Clock Enable
ACTIVE,actvclkgen_ahb2apb0_hclk_en,0x501080E8,1,(15:15),R/W,AHB/APB0 HCLK Clock Enable
ACTIVE,actvclkgen_ahb2apb1_hclk_en,0x501080E8,1,(16:16),R/W,AHB/APB1 HCLK Clock Enable
ACTIVE,actvclkgen_mcu_apb_clk_en,0x501080E8,1,(17:17),R/W,M0 APB Clock Enable
ACTIVE,actvclkgen_mcu_pclk0_en,0x501080E8,1,(18:18),R/W,M0 PCLK0 Clock Enable
ACTIVE,actvclkgen_m0_timer0_pclk_en,0x501080E8,1,(19:19),R/W,M0 Timer 0 PCLK Clock Enable
ACTIVE,actvclkgen_m0_timer1_pclk_en,0x501080E8,1,(20:20),R/W,M0 Timer 1 PCLK Clock Enable
ACTIVE,actvclkgen_m0_timer2_pclk_en,0x501080E8,1,(21:21),R/W,M0 Timer 2 PCLK Clock Enable
ACTIVE,actvclkgen_i2c_i3c_pclk_en,0x501080E8,1,(22:22),R/W,I2C/I3C Slave PCLK Clock Enable
ACTIVE,actvclkgen_uart_pclk_en,0x501080E8,1,(23:23),R/W,UART PCLK Clock Enable
ACTIVE,actvclkgen_mcu_pclk1_en,0x501080E8,1,(24:24),R/W,PCLK1 PCLK Clock Enable
ACTIVE,actvclkgen_swp_pclk_en,0x501080E8,1,(25:25),R/W,SWP PCLK Clock Enable
ACTIVE,actvclkgen_otp_pclk_en,0x501080E8,1,(26:26),R/W,OTP PCLK Clock Enable
ACTIVE,actvclkgen_spi_pclk_en,0x501080E8,1,(27:27),R/W,SPI PCLK Clock Enable
ACTIVE,actvclkgen_aes_pclk_en,0x501080E8,1,(28:28),R/W,AES PCLK Clock Enable
ACTIVE,actvclkgen_crc_pclk_en,0x501080E8,1,(29:29),R/W,CRC PCLK Clock Enable
ACTIVE,Reserved,0x501080E8,0,(30:31),R/W,
ACTIVE,actvclkgen_i2c_fclk_en,0x501080EC,1,(0:0),R/W,I2C Clock Enable
ACTIVE,actvclkgen_spi_sclk_en,0x501080EC,1,(1:1),R/W,SPI SCLK Clock Enable
ACTIVE,actvclkgen_spi_mclk_en,0x501080EC,1,(2:2),R/W,SPI MCLK Clock Enable
ACTIVE,Reserved,0x501080EC,0,(3:31),R/W,
ACTIVE,actvclkgen_tdc_interface_clk_div,0x501080F0,1,(0:3),R/W,TDC Interface Clock Division
ACTIVE,actvclkgen_vco_cal_clk_div,0x501080F0,1,(4:7),R/W,VCO Calibration Clock Division
ACTIVE,actvclkgen_pll_adjust_clk_div,0x501080F0,1,(8:11),R/W,PLL Adjust Clock Division
ACTIVE,actvclkgen_pll_pause_monitor_clk_div,0x501080F0,0,(12:15),R/W,PLL Pause Monitor Clock Division
ACTIVE,actvclkgen_dcoc_fc_clk_div,0x501080F0,7,(16:21),R/W,DCOC FC Clock Division
ACTIVE,actvclkgen_dcoc_2fc_clk_div,0x501080F0,3,(22:27),R/W,DCOC 2FC Clock Division
ACTIVE,actvclkgen_dcoc_fir_clk_div,0x501080F4,125,(0:7),R/W,DCOC FIR Clock Division
ACTIVE,actvclkgen_bb_agc_deci_clk_div,0x501080F4,15,(8:13),R/W,BB AGC DECI Clock Division
ACTIVE,actvclkgen_bb_agc_deci_op_clk_div,0x501080F4,3,(14:17),R/W,BB AGC DECI OPClock Division
ACTIVE,actvclkgen_bb_agc_adc_op_clk_div,0x501080F4,1,(18:21),R/W,BB AGC ADC OP Clock Division
ACTIVE,actvclkgen_trgtphopt_clk_div,0x501080F4,7,(22:27),R/W,trgtphopt Clock Division
ACTIVE,actvclkgen_rx_lpf_bw_clk_div,0x501080F8,3,(0:5),R/W,RX LPF BW Clock Division
ACTIVE,actvclkgen_rfagc_clk_div,0x501080F8,7,(6:11),R/W,RF AGC Clock Division
ACTIVE,actvclkgen_pa_ctrl_cdc_clk_div,0x501080F8,0,(12:15),R/W,PA Control CDC Clock Division
ACTIVE,actvclkgen_tx_ldo_ctrl_clk_div,0x501080F8,7,(16:19),R/W,TX LDO Control Clock Division
ACTIVE,actvclkgen_sml1_clk_div,0x501080F8,7,(20:23),R/W,SML1 Clock Division
ACTIVE,actvclkgen_sml1_rxctrl_rfagc_sync_clk_div,0x501080F8,1,(24:27),R/W,SML1 RX CTRL RF AGC SYNC Clock Division
ACTIVE,actvclkgen_fssi_clk_div,0x501080F8,7,(28:31),R/W,FSSI Clock Division
ACTIVE,actvclkgen_gpadc_conv_clk_div,0x501080FC,71,(0:7),R/W,GP ADC Clock Division
ACTIVE,actvclkgen_adc_root_clk_dc,0x501080FC,2,(8:19),R/W,ADC ROOT Clock Duty Cycle
ACTIVE,Reserved,0x501080FC,0,(20:31),R/W,
ACTIVE,actvclkgen_bb_agc_adc_div2_clk_div,0x50108100,11,(0:5),R/W,BB AGC ADC/2 Clock Division
ACTIVE,actvclkgen_pa_ctrl_clk_div,0x50108100,3,(6:9),R/W,PA Control Clock Division
ACTIVE,actvclkgen_cli_root_clk_div,0x50108100,7,(10:13),R/W,CLI ROOT Clock Division
ACTIVE,actvclkgen_clitop_txser_clk_div,0x50108100,0,(14:20),R/W,CLITOP TXSER Clock Division
ACTIVE,actvclkgen_clitop_0p5fc_clk_div,0x50108100,1,(21:22),R/W,CLITOP 0p5 FC Clock Division
ACTIVE,actvclkgen_adc_root_clk_div,0x50108100,5,(23:28),R/W,ADC ROOT Clock Division
ACTIVE,Reserved,0x50108100,0,(29:31),R/W,
ACTIVE,actvclkgen_dsp_subsys_clk_div,0x50108104,0,(0:2),R/W,DSP SUBSYS Clock Division
ACTIVE,actvclkgen_dsp_root_clk_div,0x50108104,0,(3:4),R/W,DSP ROOT Clock Division
ACTIVE,actvclkgen_dsp_m0_hclk_div_ratio,0x50108104,0,(5:6),R/W,DSP M0 HCLK Division Ratio
ACTIVE,actvclkgen_dsp_apb3_clk_div,0x50108104,0,(7:8),R/W,DSP APB3 Clock Division
ACTIVE,actvclkgen_dsp_apb2_clk_div,0x50108104,0,(9:10),R/W,DSP APB2 Clock Division
ACTIVE,actvclkgen_uart_root_clk_div,0x50108104,0,(11:13),R/W,UART ROOT Clock Division
ACTIVE,actvclkgen_dsp_timer_ref_clk_div,0x50108104,0,(14:16),R/W,DSP TIMER REF Clock Division
ACTIVE,actvclkgen_mcu_clk_div,0x50108104,0,(17:19),R/W,MCU Clock Division
ACTIVE,actvclkgen_mcu_apb0_clk_div,0x50108104,0,(20:22),R/W,MCU APB0 Clock Division
ACTIVE,actvclkgen_mcu_apb1_clk_div,0x50108104,0,(23:25),R/W,MCU APB1 Clock Division
ACTIVE,actvclkgen_mcu_spi_clk_div,0x50108104,0,(26:27),R/W,MCU SPI Clock Division
ACTIVE,actvclkgen_mcu_i2c_fclk_div,0x50108104,0,(28:29),R/W,MCU I2C Clock Division
ACTIVE,Reserved,0x50108104,0,(30:31),R/W,
ACTIVE,gpadc_adc_reading_inv,0x50108108,0,(0:0),R/W,Determines whether to invert ADC Reading
ACTIVE,Reserved,0x50108108,0,(1:31),R/W,
ACTIVE,spare_active_rom9,0x5010810C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_rom10,0x50108110,65535,(0:31),R/W,Spare
ACTIVE,spare_active_rom11,0x50108114,65535,(0:31),R/W,Spare
ACTIVE,spare_active_rom12,0x50108118,65535,(0:31),R/W,Spare
ACTIVE,spare_active_rom13,0x5010811C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_rom14,0x50108120,65535,(0:31),R/W,Spare
ACTIVE,spare_active_rom15,0x50108124,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108128,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x5010812C,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108130,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108134,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108138,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x5010813C,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108140,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108144,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108148,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x5010814C,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108150,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,pll_cpilkdn_1vh,0x50108154,0,(0:4),R/W,DN leakage current trim(0.25u->8u step 0.25u)
ACTIVE,pll_cpilkup_1vh,0x50108154,0,(5:9),R/W,UP leakage current trim(0.25u->8u step 0.25u)
ACTIVE,pll_pdivsdmfrac_1vh,0x50108154,1,(10:12),R/W,Digital Word used by SDM to define the fraction numerator. The value should be in range from 1 to 6 based on fraction denomenator
ACTIVE,pll_pdivsdmlimit_1vh,0x50108154,7,(13:15),R/W,Digital Word used by SDM to define the fraction denomenator. The value should be in range from 3 to 7
ACTIVE,trx_abpdsemode_1vh,0x50108154,0,(16:16),R/W,Digital control to select mode of operation is differential or Single-Ended 0 => Differential (Default) 1 => Single-Ended
ACTIVE,trx_rxferxnshrten_1vh,0x50108154,0,(17:17),R/W,Short RXn to VCM as option in single ended operation
ACTIVE,spare_active_dh0,0x50108158,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dh1,0x5010815C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dh2,0x50108160,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dh3,0x50108164,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dh4,0x50108168,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dh5,0x5010816C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dh6,0x50108170,65535,(0:31),R/W,Spare
ACTIVE,spare_active_dh7,0x50108174,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108178,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x5010817C,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108180,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108184,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,aux_tmpsnsr100_1vh,0x50108188,2,(0:3),R/W,Trimming bits of the resistor in TMPSNS
ACTIVE,aux_tmpsnsbg_1vh,0x50108188,10,(4:8),R/W,Control bits for current of ctat coming from bandgap
ACTIVE,aux_tmpsnsptat_1vh,0x50108188,18,(9:13),R/W,Control bits for Ptat current value in TMPSNS
ACTIVE,aux_adcbiasresctrl_1vh,0x50108188,4,(14:16),R/W,Trimming bits for VREF from 1.05V to 1.4V in 50mV steps (Default Val: 4)
ACTIVE,pmu_predrvrldotrm_1vh,0x50108188,2,(17:19),R/W,PA Pre-Drivers LDO output voltage trim (1.9V till 2.2V in 100mV steps)
ACTIVE,trx_abpdioffset_1vh,0x50108188,0,(20:26),R/W,Digital control to select value of current sinked from feedback point of envelope or replica buffer MSB=0 => Current sinked from replica buffer feedback point MSB=1 => Current sinked from envelope buffer feedback point Each step sinks more current with step 12.5nA(tt)
ACTIVE,pmu_txldocltrim_1vh,0x50108188,1,(27:28),R/W,TXLDO Current Limiter trim
ACTIVE,pmu_txldocmtrim_1vh,0x50108188,1,(29:30),R/W,TXLDO Current monitor trim
ACTIVE,pmu_txldocomptrim_1vh,0x50108188,1,(31:31),R/W,
ACTIVE,sparesdef1lsb_1vh,0x5010818C,65535,(0:15),R/W,LSB of High Power domain spares. Default is all 1â€™s
ACTIVE,sparesdef1msb_1vh,0x5010818C,65535,(16:31),R/W,MSB of High Power domain spares. Default is all 1â€™s
ACTIVE,sparesdef0_1vh,0x50108190,0,(0:31),R/W,High Power domain spares. Default is all 0â€™s
ACTIVE,trx_rxcmbftrm_1vh,0x50108194,1,(0:1),R/W,RX CM Buffer trimming (0.8  0.9 1  1.1V)
ACTIVE,trx_adcrefbftrm_1vh,0x50108194,1,(2:3),R/W,Reference Trim [0.8 0.9 1 1.1] V
ACTIVE,trx_rxiadcdlytrmrw_1vh,0x50108194,0,(4:8),R/W,I_read/write trimming word
ACTIVE,trx_rxqadcdlytrmrw_1vh,0x50108194,0,(9:13),R/W,Q_read/write trimming word
ACTIVE,trx_rxiadcdlytrmce_1vh,0x50108194,0,(14:18),R/W,I_card emulator trimming word
ACTIVE,trx_rxqadcdlytrmce_1vh,0x50108194,0,(19:23),R/W,Q_card emulator trimming word
ACTIVE,trx_rxbbabwtun_1vh,0x50108194,16,(24:28),R/W,BBA bandwidth tuning control
ACTIVE,Reserved,0x50108194,0,(29:31),R/W,
ACTIVE,gpadc_ch1_adc_gain,0x50108198,0,(0:2),R/W,Gain of ADC Reading for Ch1
ACTIVE,gpadc_ch1_adc_offset,0x50108198,0,(3:15),R/W,Offset of ADC Reading for Ch1
ACTIVE,gpadc_ch2_adc_gain,0x50108198,0,(16:18),R/W,Gain of ADC Reading for Ch2
ACTIVE,gpadc_ch2_adc_offset,0x50108198,0,(19:31),R/W,Offset of ADC Reading for Ch2
ACTIVE,gpadc_ch3_adc_gain,0x5010819C,0,(0:2),R/W,Gain of ADC Reading for Ch3
ACTIVE,gpadc_ch3_adc_offset,0x5010819C,0,(3:15),R/W,Offset of ADC Reading for Ch3
ACTIVE,gpadc_adc_sign,0x5010819C,0,(16:16),R/W,Determines whether to add or subtract the offset
ACTIVE,Reserved,0x5010819C,0,(17:31),R/W,
ACTIVE,digctrl_trx_rxfeprtctmntrhyst_1vh,0x501081A0,2,(0:1),R/W,
ACTIVE,digctrl_trx_rxfeprtctmntrrftrm_1vh,0x501081A0,2,(2:4),R/W,
ACTIVE,spare_active_otp3,0x501081A4,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp4,0x501081A8,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp5,0x501081AC,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp6,0x501081B0,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp7,0x501081B4,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp8,0x501081B8,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp9,0x501081BC,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp10,0x501081C0,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp11,0x501081C4,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp12,0x501081C8,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp13,0x501081CC,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp14,0x501081D0,65535,(0:31),R/W,Spare
ACTIVE,spare_active_otp15,0x501081D4,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x501081D8,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x501081DC,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x501081E0,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x501081E4,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x501081E8,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x501081EC,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,pll_lflockdetentmux_1vh,0x501081F0,0,(0:0),R/W,Digital control to gate the outputs of the two comparators and lock detect signals going to TMUX
ACTIVE,pll_1stpdiv32xmuxsel_1vh,0x501081F0,0,(1:1),R/W,"Select the input clock for the Binary divider 0 : Select the MMD output 1 : Select the external clock ""Used only for testing to bypass the PLL"""
ACTIVE,pll_1stpdivadccal32fcen_1vh,0x501081F0,0,(2:2),R/W,Enable for the 1st post divider O/P Clock Buffer going to ADC Calibration Clock with Frequency 32x Fc = 433.92 MHz
ACTIVE,pll_2ndpdivadccal24fcen_1vh,0x501081F0,0,(3:3),R/W,Enable for the 2nd post divider O/P Clock Buffer going to ADC Calibration Clock with Frequency 24x Fc = 325.44 MHz
ACTIVE,pll_2ndpdivadccal32fcen_1vh,0x501081F0,0,(4:4),R/W,Enable for the 2nd post divider O/P Clock Buffer going to ADC Calibration Clock with Frequency 32x Fc = 433.92 MHz
ACTIVE,pll_pdivclk1fcqentmux_1vh,0x501081F0,0,(5:5),R/W,Enable for the 1st post divider O/P Clock Buffer going to TMUX Clock with Frequency 1x Fc = 13.56 MHz (I-Component)
ACTIVE,pll_pdivclk1fcientmux_1vh,0x501081F0,0,(6:6),R/W,Enable for the 1st post divider O/P Clock Buffer going to TMUX Clock with Frequency 1x Fc = 13.56 MHz (Q-Component)
ACTIVE,pll_pdivclk4fcentmux_1vh,0x501081F0,0,(7:7),R/W,Enable for the 1st post divider O/P Clock Buffer going to TMUX Clock with Frequency 4x Fc = 54.24 MHz
ACTIVE,pll_fbdivsdtsten_1vh,0x501081F0,0,(8:8),R/W,Enable for the testing mode of the SDM
ACTIVE,pll_fbdivclk76p8mentmux_1vh,0x501081F0,0,(9:9),R/W,Enable for the FB divider O/P Clock Buffer going to TMUX Clock with Frequency 76.8 MHz
ACTIVE,pll_atdccal_1vh,0x501081F0,0,(10:10),R/W,Digital control to enter the TDC into TDC clibration mode 0 ==> Normal Measurement Modes 1 ==> Calibration Mode
ACTIVE,pll_atdctsten_1vh,0x501081F0,0,(11:11),R/W,"Enable testing outputs to TMUX ""TDC EN and TDC Rdy"""
ACTIVE,pll_rfcclkgatingrfentmux_1vh,0x501081F0,0,(12:12),R/W,Digital control to enable RF carrier clk for testing through TMUX
ACTIVE,pll_vcocalsettingsselsel_1vh,0x501081F0,0,(13:13),R/W,
ACTIVE,pll_vcocalsettingsselforce_1vh,0x501081F0,0,(14:14),R/W,
ACTIVE,pll_digprcsststen_1vh,0x501081F0,0,(15:15),R/W,
ACTIVE,aux_tmpsnststen_1vh,0x501081F0,0,(16:16),R/W,Enable Tswitch for testing
ACTIVE,aux_adctstmuxen_1vh,0x501081F0,0,(17:17),R/W,Enable for Test MUX
ACTIVE,aux_adctstmuxsel_1vh,0x501081F0,0,(18:20),R/W,TST MUX selection lines
ACTIVE,aux_tmuxana1en_1vh,0x501081F0,0,(21:21),R/W,TMUX 1st Analog Buffer enable
ACTIVE,aux_tmuxana2en_1vh,0x501081F0,0,(22:22),R/W,TMUX 2nd Analog Buffer enable
ACTIVE,aux_tmuxdig1en_1vh,0x501081F0,0,(23:23),R/W,TMUX 1st Digital Buffer enable
ACTIVE,aux_tmuxdig2en_1vh,0x501081F0,0,(24:24),R/W,TMUX 2nd Digital Buffer enable
ACTIVE,aux_tmuxmode_1vh,0x501081F0,0,(25:30),R/W,TMUX Mode
ACTIVE,pmu_txldohighz_1vh,0x501081F0,0,(31:31),R/W,TXLDO High Impedance mode
ACTIVE,pmu_txldobypass_1vh,0x501081F4,0,(0:0),R/W,TXLDO bypass
ACTIVE,pmu_predrvrldohighz_1vh,0x501081F4,0,(1:1),R/W,PA Pre-Drivers LDO high impedence mode
ACTIVE,pmu_tmuxmode_1vh,0x501081F4,0,(2:6),R/W,PMU TMUX mode
ACTIVE,trx_rxcmbfhiz_1vh,0x501081F4,0,(7:7),R/W,Enable RX CM Buffer for external voltage enforcement
ACTIVE,trx_rxbwtunren_1vh,0x501081F4,0,(8:8),R/W,RLXO osc enable control
ACTIVE,trx_adcrefbfhiz_1vh,0x501081F4,0,(9:9),R/W,Enable external reference
ACTIVE,trx_abpdcalmode_1vh,0x501081F4,0,(10:10),R/W,Digital control to enter the calibration mode to cancel offset between envelope and replica 0 => Normal Mode 1 => Calibration Mode
ACTIVE,digtop_dig2tmux1_1vh,0x501081F4,0,(11:11),R/W,Output signal from DIGTOP to Analog TMUX
ACTIVE,digtop_dig2tmux2_1vh,0x501081F4,0,(12:12),R/W,Output signal from DIGTOP to Analog TMUX
ACTIVE,digtop_dig2tmux3_1vh,0x501081F4,0,(13:13),R/W,Output signal from DIGTOP to Analog TMUX
ACTIVE,aux_tmuxdig3en_1vh,0x501081F4,0,(14:14),R/W,
ACTIVE,aux_tmuxdig4en_1vh,0x501081F4,0,(15:15),R/W,
ACTIVE,pll_digtmux1outsel_1vh,0x501081F4,0,(16:18),R/W,
ACTIVE,pll_digtmux2outsel_1vh,0x501081F4,0,(19:21),R/W,
ACTIVE,pll_digtmux3outsel_1vh,0x501081F4,0,(22:24),R/W,
ACTIVE,trx_abpdtmuxanaen_1vh,0x501081F4,0,(25:25),R/W,
ACTIVE,trx_abpdtmuxdigen_1vh,0x501081F4,0,(26:26),R/W,
ACTIVE,trx_afecntngncyen_1vh,0x501081F4,0,(27:27),R/W,
ACTIVE,trx_rxclkgntsten_1vh,0x501081F4,0,(28:28),R/W,
ACTIVE,trx_rxbbatsten_1vh,0x501081F4,0,(29:29),R/W,
ACTIVE,trx_txpitsten_1vh,0x501081F4,0,(30:30),R/W,
ACTIVE,Reserved,0x501081F4,0,(31:31),R/W,
ACTIVE,gpadc_adc_dmuxsel,0x501081F8,0,(0:2),R/W,Input selection for DMUX
ACTIVE,gpadc_adc_reading_test_sel,0x501081F8,0,(3:3),R/W,Selects between normal reading and test reading
ACTIVE,gpadc_adc_reading_test,0x501081F8,0,(4:16),R/W,Test ADC Reading
ACTIVE,gpadc_mux_tim_sel_test_sel,0x501081F8,0,(17:17),R/W,Selects between normal digital word and test digital word
ACTIVE,gpadc_mux_tim_sel_test,0x501081F8,0,(18:19),R/W,Test Digital Word
ACTIVE,gpadc_mux_tim_rdy_test_sel,0x501081F8,0,(20:20),R/W,Selects between normal ready signal and test ready signal
ACTIVE,gpadc_mux_tim_rdy_test,0x501081F8,0,(21:21),R/W,Test Ready Signal
ACTIVE,gpadc_ack_test_sel,0x501081F8,0,(22:22),R/W,Selects between normal ack signal and test ack signal
ACTIVE,gpadc_ack_test,0x501081F8,0,(23:23),R/W,Test ACK Signal
ACTIVE,gpadc_adc_en,0x501081F8,0,(24:24),R/W,GPADC Enable
ACTIVE,gpadc_adc_reset,0x501081F8,0,(25:25),R/W,GPADC Reset
ACTIVE,Reserved,0x501081F8,0,(26:31),R/W,
ACTIVE,actvclkgen_dsp_subsys_clk_div_sel,0x501081FC,0,(0:0),R/W,DSP SUBSYS Clock Division MUX Selector
ACTIVE,actvclkgen_mcu_clk_div_sel,0x501081FC,0,(1:1),R/W,MCU Clock Division MUX selector
ACTIVE,actvclkgen_dsp_subsys_clk_en_sel,0x501081FC,0,(2:2),R/W,DSP SYS Clock Enable MUX Selector
ACTIVE,actvclkgen_cm0p_clk_en_sel,0x501081FC,0,(3:3),R/W,M0 Clock Enable MUX Selector
ACTIVE,actvclkgen_dsp_m0_hclk_div_ratio_sel,0x501081FC,0,(4:4),R/W,DSP M0 HCLK Division Ratio MUX Selector
ACTIVE,Reserved,0x501081FC,0,(5:31),R/W,
ACTIVE,hold_marker_period,0x50108200,0,(0:0),R/W,Division Sampling Hold
ACTIVE,actvclkgen_tdc_interface_clk_div_samp_hold,0x50108200,0,(1:1),R/W,Division Sampling Hold
ACTIVE,actvclkgen_vco_cal_clk_div_samp_hold,0x50108200,0,(2:2),R/W,Division Sampling Hold
ACTIVE,actvclkgen_pll_adjust_clk_div_samp_hold,0x50108200,0,(3:3),R/W,Division Sampling Hold
ACTIVE,actvclkgen_pll_pause_monitor_clk_div_samp_hold,0x50108200,0,(4:4),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dcoc_fc_clk_div_samp_hold,0x50108200,0,(5:5),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dcoc_2fc_clk_div_samp_hold,0x50108200,0,(6:6),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dcoc_fir_clk_div_samp_hold,0x50108200,0,(7:7),R/W,Division Sampling Hold
ACTIVE,actvclkgen_bb_agc_deci_clk_div_samp_hold,0x50108200,0,(8:8),R/W,Division Sampling Hold
ACTIVE,actvclkgen_bb_agc_adc_div2_clk_div_samp_hold,0x50108200,0,(9:9),R/W,Division Sampling Hold
ACTIVE,actvclkgen_bb_agc_deci_op_clk_div_samp_hold,0x50108200,0,(10:10),R/W,Division Sampling Hold
ACTIVE,actvclkgen_bb_agc_adc_op_clk_div_samp_hold,0x50108200,0,(11:11),R/W,Division Sampling Hold
ACTIVE,actvclkgen_trgtphopt_clk_div_samp_hold,0x50108200,0,(12:12),R/W,Division Sampling Hold
ACTIVE,actvclkgen_rx_lpf_bw_clk_div_samp_hold,0x50108200,0,(13:13),R/W,Division Sampling Hold
ACTIVE,actvclkgen_rfagc_clk_div_samp_hold,0x50108200,0,(14:14),R/W,Division Sampling Hold
ACTIVE,actvclkgen_pa_ctrl_clk_div_samp_hold,0x50108200,0,(15:15),R/W,Division Sampling Hold
ACTIVE,actvclkgen_pa_ctrl_cdc_clk_div_samp_hold,0x50108200,0,(16:16),R/W,Division Sampling Hold
ACTIVE,actvclkgen_tx_ldo_ctrl_clk_div_samp_hold,0x50108200,0,(17:17),R/W,Division Sampling Hold
ACTIVE,actvclkgen_sml1_clk_div_samp_hold,0x50108200,0,(18:18),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dsp_subsys_clk_div_samp_hold,0x50108200,0,(19:19),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dsp_root_clk_div_samp_hold,0x50108200,0,(20:20),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dsp_apb3_clk_div_samp_hold,0x50108200,0,(21:21),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dsp_apb2_clk_div_samp_hold,0x50108200,0,(22:22),R/W,Division Sampling Hold
ACTIVE,actvclkgen_uart_root_clk_div_samp_hold,0x50108200,0,(23:23),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dsp_timer_ref_clk_div_samp_hold,0x50108200,0,(24:24),R/W,Division Sampling Hold
ACTIVE,actvclkgen_cli_root_clk_div_samp_hold,0x50108200,0,(25:25),R/W,Division Sampling Hold
ACTIVE,actvclkgen_adc_root_clk_div_samp_hold,0x50108200,0,(26:26),R/W,Division Sampling Hold
ACTIVE,actvclkgen_mcu_clk_div_samp_hold,0x50108200,0,(27:27),R/W,Division Sampling Hold
ACTIVE,actvclkgen_mcu_apb0_clk_div_samp_hold,0x50108200,0,(28:28),R/W,Division Sampling Hold
ACTIVE,actvclkgen_mcu_apb1_clk_div_samp_hold,0x50108200,0,(29:29),R/W,Division Sampling Hold
ACTIVE,actvclkgen_mcu_spi_clk_div_samp_hold,0x50108200,0,(30:30),R/W,Division Sampling Hold
ACTIVE,actvclkgen_mcu_i2c_fclk_div_samp_hold,0x50108200,0,(31:31),R/W,Division Sampling Hold
ACTIVE,marker_cnt_reset,0x50108204,0,(0:0),R/W,Marker Reset
ACTIVE,actvclkgen_tdc_interface_clk_div_reset,0x50108204,0,(1:1),R/W,Dividor Resets
ACTIVE,actvclkgen_vco_cal_clk_div_reset,0x50108204,0,(2:2),R/W,Dividor Resets
ACTIVE,actvclkgen_pll_adjust_clk_div_reset,0x50108204,0,(3:3),R/W,Dividor Resets
ACTIVE,actvclkgen_pll_pause_monitor_clk_div_reset,0x50108204,0,(4:4),R/W,Dividor Resets
ACTIVE,actvclkgen_dcoc_fc_clk_div_reset,0x50108204,0,(5:5),R/W,Dividor Resets
ACTIVE,actvclkgen_dcoc_2fc_clk_div_reset,0x50108204,0,(6:6),R/W,Dividor Resets
ACTIVE,actvclkgen_dcoc_fir_clk_div_reset,0x50108204,0,(7:7),R/W,Dividor Resets
ACTIVE,actvclkgen_bb_agc_deci_clk_div_reset,0x50108204,0,(8:8),R/W,Dividor Resets
ACTIVE,actvclkgen_bb_agc_adc_div2_clk_div_reset,0x50108204,0,(9:9),R/W,Dividor Resets
ACTIVE,actvclkgen_bb_agc_deci_op_clk_div_reset,0x50108204,0,(10:10),R/W,Dividor Resets
ACTIVE,actvclkgen_bb_agc_adc_op_clk_div_reset,0x50108204,0,(11:11),R/W,Dividor Resets
ACTIVE,actvclkgen_trgtphopt_clk_div_reset,0x50108204,0,(12:12),R/W,Dividor Resets
ACTIVE,actvclkgen_rx_lpf_bw_clk_div_reset,0x50108204,0,(13:13),R/W,Dividor Resets
ACTIVE,actvclkgen_rfagc_clk_div_reset,0x50108204,0,(14:14),R/W,Dividor Resets
ACTIVE,actvclkgen_pa_ctrl_clk_div_reset,0x50108204,0,(15:15),R/W,Dividor Resets
ACTIVE,actvclkgen_pa_ctrl_cdc_clk_div_reset,0x50108204,0,(16:16),R/W,Dividor Resets
ACTIVE,actvclkgen_tx_ldo_ctrl_clk_div_reset,0x50108204,0,(17:17),R/W,Dividor Resets
ACTIVE,actvclkgen_sml1_clk_div_reset,0x50108204,0,(18:18),R/W,Dividor Resets
ACTIVE,actvclkgen_sml1_rxctrl_rfagc_sync_clk_div_reset,0x50108204,0,(19:19),R/W,Dividor Resets
ACTIVE,actvclkgen_fssi_clk_div_reset,0x50108204,0,(20:20),R/W,Dividor Resets
ACTIVE,actvclkgen_gpadc_conv_clk_div_reset,0x50108204,0,(21:21),R/W,Dividor Resets
ACTIVE,actvclkgen_gpadc_conv_clk_div_samp_hold,0x50108204,0,(22:22),R/W,Division Sampling Hold
ACTIVE,actvclkgen_dsp_subsys_clk_div_reset,0x50108204,0,(23:23),R/W,Dividor Resets
ACTIVE,actvclkgen_dsp_root_clk_div_reset,0x50108204,0,(24:24),R/W,Dividor Resets
ACTIVE,actvclkgen_dsp_apb3_clk_div_reset,0x50108204,0,(25:25),R/W,Dividor Resets
ACTIVE,actvclkgen_dsp_apb2_clk_div_reset,0x50108204,0,(26:26),R/W,Dividor Resets
ACTIVE,actvclkgen_uart_root_clk_div_reset,0x50108204,0,(27:27),R/W,Dividor Resets
ACTIVE,actvclkgen_dsp_timer_ref_clk_div_reset,0x50108204,0,(28:28),R/W,Dividor Resets
ACTIVE,actvclkgen_cli_root_clk_div_reset,0x50108204,0,(29:29),R/W,Dividor Resets
ACTIVE,actvclkgen_clitop_txser_clk_div_reset,0x50108204,0,(30:30),R/W,Dividor Resets
ACTIVE,actvclkgen_clitop_0p5fc_clk_div_reset,0x50108204,0,(31:31),R/W,Dividor Resets
ACTIVE,actvclkgen_adc_root_clk_div_reset,0x50108208,0,(0:0),R/W,Dividor Resets
ACTIVE,actvclkgen_mcu_clk_div_reset,0x50108208,0,(1:1),R/W,Dividor Resets
ACTIVE,actvclkgen_mcu_apb0_clk_div_reset,0x50108208,0,(2:2),R/W,Dividor Resets
ACTIVE,actvclkgen_mcu_apb1_clk_div_reset,0x50108208,0,(3:3),R/W,Dividor Resets
ACTIVE,actvclkgen_mcu_spi_clk_div_reset,0x50108208,0,(4:4),R/W,Dividor Resets
ACTIVE,actvclkgen_mcu_i2c_fclk_div_reset,0x50108208,0,(5:5),R/W,Dividor Resets
ACTIVE,Reserved,0x50108208,0,(6:31),R/W,
ACTIVE,rg_wdog_dbg_stop_en,0x5010820C,1,(0:0),R/W,Active high debug enable signal
ACTIVE,rg_timer0_dbg_stop_en,0x5010820C,1,(1:1),R/W,Active high debug enable signal
ACTIVE,rg_timer1_dbg_stop_en,0x5010820C,1,(2:2),R/W,Active high debug enable signal
ACTIVE,rg_dualtimer_dbg_stop_en,0x5010820C,1,(3:3),R/W,Active high debug enable signal
ACTIVE,sft_rstn_m0,0x5010820C,1,(4:4),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_por,0x5010820C,1,(5:5),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_dbg,0x5010820C,1,(6:6),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_otp,0x5010820C,1,(7:7),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_aes,0x5010820C,1,(8:8),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_dmac,0x5010820C,1,(9:9),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_i2c_i3c,0x5010820C,1,(10:10),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_crc,0x5010820C,1,(11:11),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_spi,0x5010820C,1,(12:12),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_nml_ram,0x5010820C,1,(13:13),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_rom,0x5010820C,1,(14:14),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_shrd_ram,0x5010820C,1,(15:15),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_uart,0x5010820C,1,(16:16),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_timer0,0x5010820C,1,(17:17),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_timer1,0x5010820C,1,(18:18),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_dualtimer,0x5010820C,1,(19:19),R/W,Active synchronous soft reset signal
ACTIVE,sft_rstn_wdog,0x5010820C,1,(20:20),R/W,Active synchronous soft reset signal
ACTIVE,presetn_0,0x5010820C,1,(21:21),R/W,Active synchronous soft reset signal
ACTIVE,presetn_1,0x5010820C,1,(22:22),R/W,Active synchronous soft reset signal
ACTIVE,hresetn_m0,0x5010820C,1,(23:23),R/W,Active synchronous soft reset signal
ACTIVE,stclken,0x5010820C,0,(24:24),R/W,System clock enable signal.
ACTIVE,stcalib,0x50108210,1048576,(0:25),R/W,M0+ systick calibration register
ACTIVE,mtb_srambaseaddr,0x50108214,1073942528,(0:31),R/W,MTB SRAM base address in the processor memory map
ACTIVE,mtb_tstart,0x50108218,0,(0:0),R/W,Trace start. This is the external trace start input
ACTIVE,mtb_tstop,0x50108218,0,(1:1),R/W,Trace stop. This is the external trace stop input
ACTIVE,gdx_reg_wait_state,0x50108218,0,(2:3),R/W,wait counter value  when access ROM
ACTIVE,dma_hs_sel,0x50108218,0,(4:5),R/W,DMAC HS interface select  =0 select SPI HS  =1 select AES HS
ACTIVE,m0_to_dsp_interrupt_in,0x50108218,0,(6:6),R/W,Interrupt from M0+ to DSP subsystem
ACTIVE,xtmem_dreset,0x50108218,0,(7:7),R/W,Active synchronous soft reset signal
ACTIVE,xtmem_breset,0x50108218,0,(8:8),R/W,Active synchronous soft reset signal
ACTIVE,dsptop_rstb,0x50108218,1,(9:9),R/W,Active synchronous soft reset signal
ACTIVE,clitop_rstb,0x50108218,1,(10:10),R/W,Active synchronous soft reset signal
ACTIVE,clitop_cea_rstb,0x50108218,1,(11:11),R/W,Active synchronous soft reset signal
ACTIVE,tracectrl_rstb,0x50108218,1,(12:12),R/W,Active synchronous soft reset signal
ACTIVE,tracectrl_uart_rstb,0x50108218,1,(13:13),R/W,Active synchronous soft reset signal
ACTIVE,dsptimer_rstb,0x50108218,1,(14:14),R/W,Active synchronous soft reset signal
ACTIVE,hmb_rstb,0x50108218,1,(15:15),R/W,Active synchronous soft reset signal
ACTIVE,rfseq_rstb,0x50108218,1,(16:16),R/W,Active synchronous soft reset signal
ACTIVE,bbi_rstb,0x50108218,1,(17:17),R/W,Active synchronous soft reset signal
ACTIVE,iqdma1_rstb,0x50108218,1,(18:18),R/W,Active synchronous soft reset signal
ACTIVE,iqdma2_rstb,0x50108218,1,(19:19),R/W,Active synchronous soft reset signal
ACTIVE,dfemdmtop_rstb,0x50108218,1,(20:20),R/W,Active synchronous soft reset signal
ACTIVE,presetn_2,0x50108218,1,(21:21),R/W,Active synchronous soft reset signal
ACTIVE,presetn_3,0x50108218,1,(22:22),R/W,Active synchronous soft reset signal
ACTIVE,presetn_4,0x50108218,1,(23:23),R/W,Active synchronous soft reset signal
ACTIVE,hresetn_dsp,0x50108218,1,(24:24),R/W,Active synchronous soft reset signal
ACTIVE,shrdactvdmux_out1_sel,0x5010821C,0,(0:7),R/W,
ACTIVE,shrdactvdmux_out2_sel,0x5010821C,0,(8:15),R/W,
ACTIVE,shrdactvdmux_out3_sel,0x5010821C,0,(16:23),R/W,
ACTIVE,shrdactvdmux_out4_sel,0x5010821C,0,(24:31),R/W,
ACTIVE,actvdmux_out1_sel,0x50108220,0,(0:7),R/W,
ACTIVE,actvdmux_out2_sel,0x50108220,0,(8:15),R/W,
ACTIVE,actvdmux_out3_sel,0x50108220,0,(16:23),R/W,
ACTIVE,actvdmux_out4_sel,0x50108220,0,(24:31),R/W,
ACTIVE,spare_active_reg9,0x50108224,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg10,0x50108228,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg11,0x5010822C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg12,0x50108230,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg13,0x50108234,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg14,0x50108238,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg15,0x5010823C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg16,0x50108240,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg17,0x50108244,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg18,0x50108248,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg19,0x5010824C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg20,0x50108250,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg21,0x50108254,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg22,0x50108258,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg23,0x5010825C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg24,0x50108260,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg25,0x50108264,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg26,0x50108268,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg27,0x5010826C,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg28,0x50108270,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg29,0x50108274,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg30,0x50108278,65535,(0:31),R/W,Spare
ACTIVE,spare_active_reg31,0x5010827C,65535,(0:31),R/W,Spare
ACTIVE,Reserved,0x50108280,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108284,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108288,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x5010828C,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108290,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,Reserved,0x50108294,0,(0:31),R/W,Reserveeee Reserved
ACTIVE,gpadc_ch1_reading,0x50108298,0,(0:12),R,Channel 1 Reading
ACTIVE,gpadc_ch2_reading,0x50108298,0,(13:25),R,Channel 2 Reading
ACTIVE,Reserved,0x50108298,0,(26:31),R/W,
ACTIVE,gpadc_ch3_reading,0x5010829C,0,(0:12),R,Channel 3 Reading
ACTIVE,gpadc_adcint_dmuxout,0x5010829C,0,(13:31),R,GPADC DMUX output
ACTIVE,actvclkgen_dsp_subsys_clk_div_mux,0x501082A0,0,(0:2),R,
ACTIVE,actvclkgen_mcu_clk_div_mux,0x501082A0,0,(3:5),R,
ACTIVE,ahb2ahb_brdg_dn_hmaster_o,0x501082A0,0,(6:8),R,
ACTIVE,spare_active_rdreg2,0x501082A4,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg3,0x501082A8,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg4,0x501082AC,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg5,0x501082B0,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg6,0x501082B4,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg7,0x501082B8,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg8,0x501082BC,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg9,0x501082C0,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg10,0x501082C4,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg11,0x501082C8,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg12,0x501082CC,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg13,0x501082D0,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg14,0x501082D4,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg15,0x501082D8,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg16,0x501082DC,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg17,0x501082E0,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg18,0x501082E4,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg19,0x501082E8,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg20,0x501082EC,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg21,0x501082F0,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg22,0x501082F4,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg23,0x501082F8,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg24,0x501082FC,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg25,0x50108300,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg26,0x50108304,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg27,0x50108308,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg28,0x5010830C,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg29,0x50108310,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg30,0x50108314,0,(0:31),R,Spare
ACTIVE,spare_active_rdreg31,0x50108318,0,(0:31),R,Spare
ACTIVE,Reserved,0x5010831C,0,(0:31),R,Reserveeee Reserved
ACTIVE,Reserved,0x50108320,0,(0:31),R,Reserveeee Reserved
ACTIVE,Reserved,0x50108324,0,(0:31),R,Reserveeee Reserved
ACTIVE,Reserved,0x50108328,0,(0:31),R,Reserveeee Reserved
ACTIVE,Reserved,0x5010832C,0,(0:31),R,Reserveeee Reserved
ACTIVE,Reserved,0x50108330,0,(0:31),R,Reserveeee Reserved
AON,clk_lposcfrqsel_1vao,0x5010C000,1,(0:0),R/W,LP MHz Oscillator Frequency (0:54/1:108MHz)
AON,pmu_txldohven_1vao,0x5010C000,0,(1:1),R/W,TXLDO High Voltage input mode contingency
AON,pmu_bodmon1p7en_1vao,0x5010C000,1,(2:2),R/W,0
AON,pmu_hvaomonen_1vao,0x5010C000,0,(3:3),R/W,BOD Monitor enable
AON,pmu_bodmuxsel_1vao,0x5010C000,0,(4:6),R/W,BOD Mux select
AON,pmu_rxldoextrabias_1vao,0x5010C000,0,(7:7),R/W,RX LDO Extra Bias bit (1: consumes 250nA no load current)
AON,pmu_hvaoldoouttrim_1vao,0x5010C000,2,(8:9),R/W,HVAO LDO output voltage trim (2.2V till 2.5V in 100mV steps)
AON,pmu_hvaoldobiastrim_1vao,0x5010C000,4,(10:13),R/W,HVAO OTA bias current trimming (in 0.5uA step)
AON,clk_ulposcdvdby4_1vao,0x5010C000,0,(14:14),R/W,ULP Contingency for digital STDBY current reduction
AON,clk_lposc217mclken_1vao,0x5010C000,0,(15:15),R/W,LP OSC 217 MCLK Enable
AON,Reserved,0x5010C000,0,(16:31),R/W,
AON,sml3_aoclkdivstdby,0x5010C004,0,(0:9),R/W,Clock Division for AO Clock in Standby
AON,sml3_aoclkdivactiveidle,0x5010C004,1,(10:19),R/W,Clock Division for AO Clock in Active Idle
AON,sml3_aoclkdivactive,0x5010C004,1,(20:29),R/W,Clock Division for AO Clock in Active
AON,Reserved,0x5010C004,0,(30:31),R/W,
AON,sml3_pollcntclkdivstdby_reg,0x5010C008,0,(0:9),R/W,Clock Division for Polling Timer Clock in Standby
AON,sml3_pollcntclkdivactvidle_reg,0x5010C008,269,(10:19),R/W,Clock Division for Polling Timer Clock in Active Idle
AON,sml3_pollcntclkdivactive_reg,0x5010C008,269,(20:29),R/W,Clock Division for Polling Timer Clock in Active
AON,Reserved,0x5010C008,0,(30:31),R/W,
AON,sml3_wkprxclkdivstdby_reg,0x5010C00C,0,(0:9),R/W,Clock Division for Wakeup-TX Clock in Standby
AON,sml3_wkprxclkdivactvidle_reg,0x5010C00C,7,(10:19),R/W,Clock Division for Wakeup-TX Clock in Active Idle
AON,sml3_wkprxclkdivactive_reg,0x5010C00C,7,(20:29),R/W,Clock Division for Wakeup-TX Clock in Active
AON,Reserved,0x5010C00C,0,(30:31),R/W,
AON,aoclk_div_switch_order_stdby_to_actvidle,0x5010C010,0,(0:0),R/W,
AON,aoclk_div_switch_order_stdby_to_actv,0x5010C010,0,(1:1),R/W,
AON,aoclk_div_switch_order_actvidle_to_stdby,0x5010C010,1,(2:2),R/W,
AON,aoclk_div_switch_order_actvidle_to_actv,0x5010C010,0,(3:3),R/W,
AON,aoclk_div_switch_order_actv_to_actvidle,0x5010C010,0,(4:4),R/W,
AON,pollcntclk_div_switch_order_stdby_to_actvidle,0x5010C010,1,(5:5),R/W,
AON,pollcntclk_div_switch_order_stdby_to_actv,0x5010C010,1,(6:6),R/W,
AON,pollcntclk_div_switch_order_actvidle_to_stdby,0x5010C010,0,(7:7),R/W,
AON,pollcntclk_div_switch_order_actvidle_to_actv,0x5010C010,1,(8:8),R/W,
AON,pollcntclk_div_switch_order_actv_to_actvidle,0x5010C010,1,(9:9),R/W,
AON,wkprxclk_div_switch_order_stdby_to_actvidle,0x5010C010,0,(10:10),R/W,
AON,wkprxclk_div_switch_order_stdby_to_actv,0x5010C010,0,(11:11),R/W,
AON,wkprxclk_div_switch_order_actvidle_to_stdby,0x5010C010,1,(12:12),R/W,
AON,wkprxclk_div_switch_order_actvidle_to_actv,0x5010C010,0,(13:13),R/W,
AON,wkprxclk_div_switch_order_actv_to_actvidle,0x5010C010,0,(14:14),R/W,
AON,Reserved,0x5010C010,0,(15:31),R/W,
AON,sml3_tstdbyrlsrst,0x5010C014,10,(0:4),R/W,STDBY Release Reset Delay
AON,sml3_tstdbyrlsiso,0x5010C014,10,(5:9),R/W,STDBY Release Isolation Delay
AON,sml3_tvddcrlsrst,0x5010C014,10,(10:14),R/W,VDDC Release Reset Delay
AON,sml3_tvddcrlsiso,0x5010C014,10,(15:19),R/W,VDDC Release Isolation Delay
AON,Reserved,0x5010C014,0,(20:31),R/W,
AON,sml3_tvddcldo,0x5010C018,9000,(0:14),R/W,VDDC LDO Settling time
AON,Reserved,0x5010C018,0,(15:31),R/W,
AON,sml3_tloadpwrctrl2_stdby,0x5010C01C,5405,(0:14),R/W,Loading Power Control 2 Image Delay
AON,sml3_tloadpwrctrl3_stdby,0x5010C01C,5405,(15:29),R/W,Loading Power Control 3 Image Delay
AON,Reserved,0x5010C01C,0,(30:31),R/W,
AON,sml3_tloadpwrctrl2_actvidle,0x5010C020,40,(0:14),R/W,Loading Power Control 2 Image Delay
AON,sml3_tloadpwrctrl3_actvidle,0x5010C020,40,(15:29),R/W,Loading Power Control 3 Image Delay
AON,Reserved,0x5010C020,0,(30:31),R/W,
AON,sml3_tloadpwrctrl2_actvpoll,0x5010C024,40,(0:14),R/W,Loading Power Control 2 Image Delay
AON,sml3_tloadpwrctrl3_actvpoll,0x5010C024,40,(15:29),R/W,Loading Power Control 3 Image Delay
AON,Reserved,0x5010C024,0,(30:31),R/W,
AON,sml3_tloadpwrctrl2_actvlisten,0x5010C028,40,(0:14),R/W,Loading Power Control 2 Image Delay
AON,sml3_tloadpwrctrl3_actvlisten,0x5010C028,40,(15:29),R/W,Loading Power Control 3 Image Delay
AON,Reserved,0x5010C028,0,(30:31),R/W,
AON,sml3_thpbias,0x5010C02C,5000,(0:14),R/W,HP Bias Settling time
AON,Reserved,0x5010C02C,0,(15:31),R/W,
AON,sml3_tlposc,0x5010C030,2,(0:14),R/W,LP OSC. Startup time
AON,sml3_tulposc,0x5010C030,5405,(15:29),R/W,ULP OSC. Startup time
AON,Reserved,0x5010C030,0,(30:31),R/W,
AON,sml3_tpllosc,0x5010C034,10,(0:14),R/W,PLL OSC. Startup time
AON,sml3_tpllrlsiso,0x5010C034,2,(15:18),R/W,PLL Isolation Release Delay
AON,sml3_tswitch,0x5010C034,4,(19:22),R/W,Clock Switching Delay
AON,sml3_tclkdiv,0x5010C034,4,(23:26),R/W,Clk Division Delay
AON,sml3_tclocksen,0x5010C034,6,(27:30),R/W,Enabling Clock Gates Delay
AON,Reserved,0x5010C034,0,(31:31),R/W,
AON,i2c_mntr_byte1,0x5010C038,0,(0:7),R/W,I2C Monitor Byte 1
AON,i2c_mntr_byte2,0x5010C038,0,(8:15),R/W,I2C Monitor Byte 2
AON,i2c_mntr_slvaddr,0x5010C038,0,(16:22),R/W,I2C Monitor Slave Address
AON,pmu_gpioldooutsel_1vao,0x5010C038,0,(23:23),R/W,GPIO LDO Out Select
AON,pmu_hvaoldobypass_1vao,0x5010C038,0,(24:24),R/W,HVAO LDO Bypass
AON,pmu_uiccselbit_1vao,0x5010C038,0,(25:25),R/W,UICC Select Bit
AON,Reserved,0x5010C038,0,(26:31),R/W,
AON,int_swp1en_1vao_stdby_img,0x5010C03C,0,(0:0),R/W,Standby Images
AON,int_swp1highz_1vao_stdby_img,0x5010C03C,0,(1:1),R/W,Standby Images
AON,int_swp2en_1vao_stdby_img,0x5010C03C,0,(2:2),R/W,Standby Images
AON,int_swp2highz_1vao_stdby_img,0x5010C03C,0,(3:3),R/W,Standby Images
AON,clk_lposcen_1vao_stdby_img,0x5010C03C,0,(4:4),R/W,Standby Images
AON,clk_ulposcen_1vao_stdby_img,0x5010C03C,1,(5:5),R/W,Standby Images
AON,pll_sml3_en_stdby_img,0x5010C03C,0,(6:6),R/W,Standby Images
AON,pmu_thrmprten_1vao_stdby_img,0x5010C03C,0,(7:7),R/W,Standby Images
AON,pmu_gpioldoen_1vao_stdby_img,0x5010C03C,1,(8:8),R/W,Standby Images
AON,pmu_vddtxinmonen_1vao_stdby_img,0x5010C03C,1,(9:9),R/W,Standby Images
AON,pmu_vbattmonen_1vao_stdby_img,0x5010C03C,1,(10:10),R/W,Standby Images
AON,pmu_vbattmontrimlow_1vao_stdby_img,0x5010C03C,1,(11:13),R/W,Standby Images
AON,pmu_vbattmontrimhigh_1vao_stdby_img,0x5010C03C,6,(14:16),R/W,Standby Images
AON,pmu_vddhiomonen_1vao_stdby_img,0x5010C03C,1,(17:17),R/W,Standby Images
AON,pmu_pllaldoen_1vao_stdby_img,0x5010C03C,0,(18:18),R/W,Standby Images
AON,pmu_rfldoen_1vao_stdby_img,0x5010C03C,0,(19:19),R/W,Standby Images
AON,pmu_rxldoen_1vao_stdby_img,0x5010C03C,1,(20:20),R/W,Standby Images
AON,trx_hpdpden_1vao_stdby_img,0x5010C03C,0,(21:21),R/W,Standby Images
AON,aux_tmpsnsen_1vao_stdby_img,0x5010C03C,0,(22:22),R/W,Standby Images
AON,aux_adcen_1vao_stdby_img,0x5010C03C,0,(23:23),R/W,Standby Images
AON,aux_tmuxen_1vao_stdby_img,0x5010C03C,0,(24:24),R/W,Standby Images
AON,pmu_tmuxen_1vao_stdby_img,0x5010C03C,0,(25:25),R/W,Standby Images
AON,int_swp1en_1vao_actvidle_img,0x5010C03C,0,(26:26),R/W,Active Idle Images
AON,int_swp1highz_1vao_actvidle_img,0x5010C03C,0,(27:27),R/W,Active Idle Images
AON,int_swp2en_1vao_actvidle_img,0x5010C03C,0,(28:28),R/W,Active Idle Images
AON,int_swp2highz_1vao_actvidle_img,0x5010C03C,0,(29:29),R/W,Active Idle Images
AON,clk_lposcen_1vao_actvidle_img,0x5010C03C,1,(30:30),R/W,Active Idle Images
AON,clk_ulposcen_1vao_actvidle_img,0x5010C03C,0,(31:31),R/W,Active Idle Images
AON,pll_sml3_en_actvidle_img,0x5010C040,0,(0:0),R/W,Active Idle Images
AON,pmu_thrmprten_1vao_actvidle_img,0x5010C040,1,(1:1),R/W,Active Idle Images
AON,pmu_gpioldoen_1vao_actvidle_img,0x5010C040,1,(2:2),R/W,Active Idle Images
AON,pmu_vddtxinmonen_1vao_actvidle_img,0x5010C040,1,(3:3),R/W,Active Idle Images
AON,pmu_vbattmonen_1vao_actvidle_img,0x5010C040,1,(4:4),R/W,Active Idle Images
AON,pmu_vbattmontrimlow_1vao_actvidle_img,0x5010C040,1,(5:7),R/W,Active Idle Images
AON,pmu_vbattmontrimhigh_1vao_actvidle_img,0x5010C040,6,(8:10),R/W,Active Idle Images
AON,pmu_vddhiomonen_1vao_actvidle_img,0x5010C040,1,(11:11),R/W,Active Idle Images
AON,pmu_pllaldoen_1vao_actvidle_img,0x5010C040,0,(12:12),R/W,Active Idle Images
AON,pmu_rfldoen_1vao_actvidle_img,0x5010C040,0,(13:13),R/W,Active Idle Images
AON,pmu_rxldoen_1vao_actvidle_img,0x5010C040,1,(14:14),R/W,Active Idle Images
AON,trx_hpdpden_1vao_actvidle_img,0x5010C040,0,(15:15),R/W,Active Idle Images
AON,aux_tmpsnsen_1vao_actvidle_img,0x5010C040,0,(16:16),R/W,Active Idle Images
AON,aux_adcen_1vao_actvidle_img,0x5010C040,0,(17:17),R/W,Active Idle Images
AON,aux_tmuxen_1vao_actvidle_img,0x5010C040,0,(18:18),R/W,Active Idle Images
AON,pmu_tmuxen_1vao_actvidle_img,0x5010C040,0,(19:19),R/W,Active Idle Images
AON,int_swp1en_1vao_actvpoll_img,0x5010C040,0,(20:20),R/W,Active Poll Images
AON,int_swp1highz_1vao_actvpoll_img,0x5010C040,0,(21:21),R/W,Active Poll Images
AON,int_swp2en_1vao_actvpoll_img,0x5010C040,0,(22:22),R/W,Active Poll Images
AON,int_swp2highz_1vao_actvpoll_img,0x5010C040,0,(23:23),R/W,Active Poll Images
AON,clk_lposcen_1vao_actvpoll_img,0x5010C040,1,(24:24),R/W,Active Poll Images
AON,clk_ulposcen_1vao_actvpoll_img,0x5010C040,0,(25:25),R/W,Active Poll Images
AON,pll_sml3_en_actvpoll_img,0x5010C040,0,(26:26),R/W,Active Poll Images
AON,pmu_thrmprten_1vao_actvpoll_img,0x5010C040,1,(27:27),R/W,Active Poll Images
AON,pmu_gpioldoen_1vao_actvpoll_img,0x5010C040,1,(28:28),R/W,Active Poll Images
AON,pmu_vddtxinmonen_1vao_actvpoll_img,0x5010C040,1,(29:29),R/W,Active Poll Images
AON,pmu_vbattmonen_1vao_actvpoll_img,0x5010C040,1,(30:30),R/W,Active Poll Images
AON,pmu_vbattmontrimlow_1vao_actvpoll_img,0x5010C044,1,(0:2),R/W,Active Poll Images
AON,pmu_vbattmontrimhigh_1vao_actvpoll_img,0x5010C044,6,(3:5),R/W,Active Poll Images
AON,pmu_vddhiomonen_1vao_actvpoll_img,0x5010C044,1,(6:6),R/W,Active Poll Images
AON,pmu_pllaldoen_1vao_actvpoll_img,0x5010C044,1,(7:7),R/W,Active Poll Images
AON,pmu_rfldoen_1vao_actvpoll_img,0x5010C044,1,(8:8),R/W,Active Poll Images
AON,pmu_rxldoen_1vao_actvpoll_img,0x5010C044,1,(9:9),R/W,Active Poll Images
AON,trx_hpdpden_1vao_actvpoll_img,0x5010C044,0,(10:10),R/W,Active Poll Images
AON,aux_tmpsnsen_1vao_actvpoll_img,0x5010C044,1,(11:11),R/W,Active Poll Images
AON,aux_adcen_1vao_actvpoll_img,0x5010C044,1,(12:12),R/W,Active Poll Images
AON,aux_tmuxen_1vao_actvpoll_img,0x5010C044,0,(13:13),R/W,Active Poll Images
AON,pmu_tmuxen_1vao_actvpoll_img,0x5010C044,0,(14:14),R/W,Active Poll Images
AON,int_swp1en_1vao_actvlisten_img,0x5010C044,0,(15:15),R/W,Active Listen Images
AON,int_swp1highz_1vao_actvlisten_img,0x5010C044,0,(16:16),R/W,Active Listen Images
AON,int_swp2en_1vao_actvlisten_img,0x5010C044,0,(17:17),R/W,Active Listen Images
AON,int_swp2highz_1vao_actvlisten_img,0x5010C044,0,(18:18),R/W,Active Listen Images
AON,clk_lposcen_1vao_actvlisten_img,0x5010C044,1,(19:19),R/W,Active Listen Images
AON,clk_ulposcen_1vao_actvlisten_img,0x5010C044,0,(20:20),R/W,Active Listen Images
AON,pll_sml3_en_actvlisten_img,0x5010C044,0,(21:21),R/W,Active Listen Images
AON,pmu_thrmprten_1vao_actvlisten_img,0x5010C044,1,(22:22),R/W,Active Listen Images
AON,pmu_gpioldoen_1vao_actvlisten_img,0x5010C044,1,(23:23),R/W,Active Listen Images
AON,pmu_vddtxinmonen_1vao_actvlisten_img,0x5010C044,1,(24:24),R/W,Active Listen Images
AON,pmu_vbattmonen_1vao_actvlisten_img,0x5010C044,1,(25:25),R/W,Active Listen Images
AON,pmu_vbattmontrimlow_1vao_actvlisten_img,0x5010C044,1,(26:28),R/W,Active Listen Images
AON,pmu_vbattmontrimhigh_1vao_actvlisten_img,0x5010C044,6,(29:31),R/W,Active Listen Images
AON,pmu_vddhiomonen_1vao_actvlisten_img,0x5010C048,1,(0:0),R/W,Active Listen Images
AON,pmu_pllaldoen_1vao_actvlisten_img,0x5010C048,1,(1:1),R/W,Active Listen Images
AON,pmu_rfldoen_1vao_actvlisten_img,0x5010C048,1,(2:2),R/W,Active Listen Images
AON,pmu_rxldoen_1vao_actvlisten_img,0x5010C048,1,(3:3),R/W,Active Listen Images
AON,trx_hpdpden_1vao_actvlisten_img,0x5010C048,0,(4:4),R/W,Active Listen Images
AON,aux_tmpsnsen_1vao_actvlisten_img,0x5010C048,1,(5:5),R/W,Active Listen Images
AON,aux_adcen_1vao_actvlisten_img,0x5010C048,1,(6:6),R/W,Active Listen Images
AON,aux_tmuxen_1vao_actvlisten_img,0x5010C048,0,(7:7),R/W,Active Listen Images
AON,pmu_tmuxen_1vao_actvlisten_img,0x5010C048,0,(8:8),R/W,Active Listen Images
AON,Reserved,0x5010C048,0,(9:31),R/W,
AON,spare_aon_rom10,0x5010C04C,65535,(0:31),R/W,Spare
AON,spare_aon_rom11,0x5010C050,65535,(0:31),R/W,Spare
AON,spare_aon_rom12,0x5010C054,65535,(0:31),R/W,Spare
AON,spare_aon_rom13,0x5010C058,65535,(0:31),R/W,Spare
AON,spare_aon_rom14,0x5010C05C,65535,(0:31),R/W,Spare
AON,spare_aon_rom15,0x5010C060,65535,(0:31),R/W,Spare
AON,spare_aon_rom16,0x5010C064,65535,(0:31),R/W,Spare
AON,spare_aon_rom17,0x5010C068,65535,(0:31),R/W,Spare
AON,spare_aon_rom18,0x5010C06C,65535,(0:31),R/W,Spare
AON,spare_aon_rom19,0x5010C070,65535,(0:31),R/W,Spare
AON,spare_aon_rom20,0x5010C074,65535,(0:31),R/W,Spare
AON,spare_aon_rom21,0x5010C078,65535,(0:31),R/W,Spare
AON,spare_aon_rom22,0x5010C07C,65535,(0:31),R/W,Spare
AON,spare_aon_rom23,0x5010C080,65535,(0:31),R/W,Spare
AON,spare_aon_rom24,0x5010C084,65535,(0:31),R/W,Spare
AON,spare_aon_rom25,0x5010C088,65535,(0:31),R/W,Spare
AON,spare_aon_rom26,0x5010C08C,65535,(0:31),R/W,Spare
AON,spare_aon_rom27,0x5010C090,65535,(0:31),R/W,Spare
AON,spare_aon_rom28,0x5010C094,65535,(0:31),R/W,Spare
AON,spare_aon_rom29,0x5010C098,65535,(0:31),R/W,Spare
AON,spare_aon_rom30,0x5010C09C,4198603,(0:31),R/W,Spare
AON,spare_aon_rom31,0x5010C0A0,9,(0:31),R/W,Spare
AON,Reserved,0x5010C0A4,64,(0:31),R/W,
AON,Reserved,0x5010C0A8,64,(0:31),R/W,
AON,Reserved,0x5010C0AC,64,(0:31),R/W,
AON,Reserved,0x5010C0B0,64,(0:31),R/W,
AON,clk_lposcfreqctrl_1vao,0x5010C0B4,16,(0:6),R/W,LP MHz Oscillator trimming
AON,clk_ulposcfreqctrl_1vao,0x5010C0B4,64,(7:13),R/W,ULP KHz Oscillator trimming
AON,pmu_thrmprtvreftrim_1vao,0x5010C0B4,5,(14:17),R/W,TXLDO Thermal Protection Reference voltage trimming
AON,pmu_seuiccldotrm_1vao,0x5010C0B4,3,(18:20),R/W,SE LDO output voltage trim (1.6V till 1.95V in 50mV steps)
AON,sparesdef1_1vao,0x5010C0B8,65535,(0:15),R/W,Low Power domain spares. Default is all 1â€™s
AON,sparesdef0_1vao,0x5010C0B8,0,(16:31),R/W,Low Power domain spares. Default is all 0â€™s
AON,pmu_thrmprtiptattrim_1vao,0x5010C0BC,1,(0:1),R/W,TXLDO Thermal Protection PTAT current trimming
AON,pmu_thrmprticontrim_1vao,0x5010C0BC,4,(2:4),R/W,TXLDO Thermal Protection Constant current trimming
AON,pmu_hpbiasrptatctrl_1vao,0x5010C0BC,12,(5:8),R/W,High Power BG PTAT Control
AON,pmu_hpbiasrctatctrl_1vao,0x5010C0BC,7,(9:12),R/W,High Power BG CTAT Control
AON,pmu_lpbiasptat_1vao,0x5010C0BC,5,(13:15),R/W,Low Power BG PTAT Control
AON,pmu_lpbiasctat_1vao,0x5010C0BC,2,(16:18),R/W,Low Power BG CTAT Control
AON,pmu_lpbiasbgbump_1vao,0x5010C0BC,1,(19:19),R/W,Low Power BG voltage pump control
AON,pmu_lvaoreftrim_1vao,0x5010C0BC,2,(20:21),R/W,LVAO LDO Output trim
AON,pmu_gpioldooutbost0p1_1vao,0x5010C0BC,0,(22:22),R/W,AOGPIO LDO trim bit (1: adds 100mV to LDO output)
AON,pmu_gpioldooutbost0p3_1vao,0x5010C0BC,0,(23:23),R/W,AOGPIO LDO trim bit (1: adds 300mV to LDO output)
AON,pmu_vddtxinmontrim_1vao,0x5010C0BC,0,(24:25),R/W,VDDTXIN Monitor Threshold (3.9V to 4.2V in 100mV steps)
AON,pmu_vddhiomoncont_1vao,0x5010C0BC,0,(26:26),R/W,VDDHIO Contingency activation
AON,pmu_pllaldotrim_1vao,0x5010C0BC,1,(27:28),R/W,PLL Analog LDO output voltage trim (0.9V till 1.2V in 0.1V steps)
AON,pmu_rfldotrim_1vao,0x5010C0BC,1,(29:30),R/W,RF LDO output voltage trim (0.9V till 1.2V in 0.1V steps)
AON,pmu_digldotrim_1vao,0x5010C0C0,2,(0:1),R/W,Digital LDO output voltage trim (0.9V till 1.2V in 0.1V steps)
AON,pmu_rxldotrm_1vao,0x5010C0C0,1,(2:3),R/W,RX LDO output voltage trim (1.7V till 2V in 100mV steps)
AON,dram_btrim,0x5010C0C0,0,(4:7),R/W,
AON,dram_rm,0x5010C0C0,0,(8:8),R/W,
AON,dram_rwm,0x5010C0C0,3,(9:10),R/W,
AON,dram_wm,0x5010C0C0,0,(11:11),R/W,
AON,iram_btrim,0x5010C0C0,0,(12:15),R/W,
AON,iram_rm,0x5010C0C0,0,(16:16),R/W,
AON,iram_rwm,0x5010C0C0,3,(17:18),R/W,
AON,iram_wm,0x5010C0C0,0,(19:19),R/W,
AON,tram_btrim,0x5010C0C0,0,(20:23),R/W,
AON,tram_rm,0x5010C0C0,0,(24:24),R/W,
AON,tram_rwm,0x5010C0C0,3,(25:26),R/W,
AON,tram_wm,0x5010C0C0,0,(27:27),R/W,
AON,Reserved,0x5010C0C0,0,(28:31),R/W,
AON,mcu_nml_mem_btrim,0x5010C0C4,0,(0:3),R/W,
AON,mcu_nml_mem_rm,0x5010C0C4,0,(4:4),R/W,
AON,mcu_nml_mem_rwm,0x5010C0C4,3,(5:6),R/W,
AON,mcu_nml_mem_wm,0x5010C0C4,0,(7:7),R/W,
AON,mcu_mtb_mem_btrim,0x5010C0C4,0,(8:11),R/W,
AON,mcu_mtb_mem_rm,0x5010C0C4,0,(12:12),R/W,
AON,mcu_mtb_mem_rwm,0x5010C0C4,3,(13:14),R/W,
AON,mcu_mtb_mem_wm,0x5010C0C4,0,(15:15),R/W,
AON,Reserved,0x5010C0C4,0,(16:31),R/W,
AON,shrd_mem_16inst_btrim,0x5010C0C8,0,(0:3),R/W,
AON,shrd_mem_16inst_rm,0x5010C0C8,0,(4:4),R/W,
AON,shrd_mem_16inst_rwm,0x5010C0C8,3,(5:6),R/W,
AON,shrd_mem_16inst_wm,0x5010C0C8,0,(7:7),R/W,
AON,shrd_mem_8inst0_btrim,0x5010C0C8,0,(8:11),R/W,
AON,shrd_mem_8inst0_rm,0x5010C0C8,0,(12:12),R/W,
AON,shrd_mem_8inst0_rwm,0x5010C0C8,3,(13:14),R/W,
AON,shrd_mem_8inst0_wm,0x5010C0C8,0,(15:15),R/W,
AON,shrd_mem_8inst1_btrim,0x5010C0C8,0,(16:19),R/W,
AON,shrd_mem_8inst1_rm,0x5010C0C8,0,(20:20),R/W,
AON,shrd_mem_8inst1_rwm,0x5010C0C8,3,(21:22),R/W,
AON,shrd_mem_8inst1_wm,0x5010C0C8,0,(23:23),R/W,
AON,Reserved,0x5010C0C8,0,(24:31),R/W,
AON,drom_rm,0x5010C0CC,0,(0:3),R/W,
AON,drom_rme,0x5010C0CC,0,(4:4),R/W,
AON,irom_rm,0x5010C0CC,0,(5:8),R/W,
AON,irom_rme,0x5010C0CC,0,(9:9),R/W,
AON,mtb_dbgen,0x5010C0CC,1,(10:10),R/W,
AON,mtb_niden,0x5010C0CC,1,(11:11),R/W,
AON,shrd_mem_16inst_sel ,0x5010C0CC,0,(12:13),R/W,
AON,shrd_mem_8inst0_sel ,0x5010C0CC,0,(14:15),R/W,
AON,shrd_mem_8inst1_sel ,0x5010C0CC,0,(16:17),R/W,
AON,Reserved,0x5010C0CC,0,(18:31),R/W,
AON,rg_i2c_i3c_change_en,0x5010C0D0,0,(0:0),R/W,
AON,Reserved,0x5010C0D0,0,(1:31),R/W,
AON,i2c_i3c_sel,0x5010C0D4,0,(0:0),R/W,
AON,Reserved,0x5010C0D4,0,(1:31),R/W,
AON,i2c_i3c_ctrl_bit,0x5010C0D8,1,(0:0),R/W,
AON,Reserved,0x5010C0D8,0,(1:31),R/W,
AON,xtmem_statvectorsel,0x5010C0DC,1,(0:0),R/W,
AON,spare_aon_otp7,0x5010C0E0,65535,(0:31),R/W,Spare
AON,spare_aon_otp8,0x5010C0E4,65535,(0:31),R/W,Spare
AON,spare_aon_otp9,0x5010C0E8,65535,(0:31),R/W,Spare
AON,spare_aon_otp10,0x5010C0EC,65535,(0:31),R/W,Spare
AON,spare_aon_otp11,0x5010C0F0,65535,(0:31),R/W,Spare
AON,spare_aon_otp12,0x5010C0F4,65535,(0:31),R/W,Spare
AON,spare_aon_otp13,0x5010C0F8,65535,(0:31),R/W,Spare
AON,spare_aon_otp14,0x5010C0FC,65535,(0:31),R/W,Spare
AON,spare_aon_otp15,0x5010C100,65535,(0:31),R/W,Spare
AON,Reserved,0x5010C104,0,(0:31),R/W,
AON,Reserved,0x5010C108,0,(0:31),R/W,
AON,Reserved,0x5010C10C,0,(0:31),R/W,
AON,Reserved,0x5010C110,0,(0:31),R/W,
AON,pmu_gpioldohighz_1vao,0x5010C114,0,(0:0),R/W,AOGPIO LDO high impedence mode
AON,pmu_pllaldohighz_1vao,0x5010C114,0,(1:1),R/W,PLL Analog LDO high impedence mode
AON,pmu_rfldohighz_1vao,0x5010C114,0,(2:2),R/W,RF LDO high impedence mode
AON,pmu_digldohighz_1vao,0x5010C114,0,(3:3),R/W,Digital LDO high impedence mode
AON,pmu_seuiccldohighz_1vao,0x5010C114,0,(4:4),R/W,SE LDO high impedence mode
AON,pmu_rxldohighz_1vao,0x5010C114,0,(5:5),R/W,RX LDO high impedence mode
AON,pmu_uiccsel1en_1vao,0x5010C114,1,(6:6),R/W,UICC Supply Selector 1 enable bit
AON,pmu_uiccsel2en_1vao,0x5010C114,1,(7:7),R/W,UICC Supply Selector 2 enable bit
AON,clk_ulposctsten_1vao,0x5010C114,0,(8:8),R/W,ULP Osc Testing Enable
AON,clk_lposctsten_1vao,0x5010C114,0,(9:9),R/W,LP Osc Testing Enable
AON,Reserved,0x5010C114,0,(10:31),R/W,
AON,vpdb_ie_n,0x5010C118,0,(0:0),R/W,VPDB Pad IEN
AON,vpdb_oe_n,0x5010C118,1,(1:1),R/W,VPDB Pad OEN
AON,vpdb_re_n,0x5010C118,1,(2:2),R/W,VPDB Pad REN
AON,vpdb_rtype,0x5010C118,0,(3:3),R/W,VPDB Pad RTYPE
AON,vpdb_le,0x5010C118,1,(4:4),R/W,VPDB Pad LE
AON,padmuxsel_vpdb,0x5010C118,0,(5:7),R/W,PADMUX SEL VPDB
AON,fwdwlreq_ie_n,0x5010C118,0,(8:8),R/W,FWDWLREQ Pad IEN
AON,fwdwlreq_oe_n,0x5010C118,1,(9:9),R/W,FWDWLREQ Pad OEN
AON,fwdwlreq_re_n,0x5010C118,1,(10:10),R/W,FWDWLREQ Pad REN
AON,fwdwlreq_rtype,0x5010C118,0,(11:11),R/W,FWDWLREQ Pad RTYPE
AON,fwdwlreq_le,0x5010C118,1,(12:12),R/W,FWDWLREQ Pad LE
AON,padmuxsel_fwdwlreq,0x5010C118,0,(13:15),R/W,PADMUX SEL FWDWLREQ
AON,extclkreq_ie_n,0x5010C118,0,(16:16),R/W,EXTCLKREQ Pad IEN
AON,extclkreq_oe_n,0x5010C118,1,(17:17),R/W,EXTCLKREQ Pad OEN
AON,extclkreq_re_n,0x5010C118,1,(18:18),R/W,EXTCLKREQ Pad REN
AON,extclkreq_rtype,0x5010C118,0,(19:19),R/W,EXTCLKREQ Pad RTYPE
AON,extclkreq_le,0x5010C118,1,(20:20),R/W,EXTCLKREQ Pad LE
AON,padmuxsel_extclkreq,0x5010C118,0,(21:23),R/W,PADMUX SEL EXTCLKREQ
AON,dtst1_ie_n,0x5010C118,0,(24:24),R/W,DTST1 Pad IEN
AON,dtst1_oe_n,0x5010C118,1,(25:25),R/W,DTST1 Pad OEN
AON,dtst1_re_n,0x5010C118,1,(26:26),R/W,DTST1 Pad REN
AON,dtst1_rtype,0x5010C118,0,(27:27),R/W,DTST1 Pad RTYPE
AON,dtst1_le,0x5010C118,1,(28:28),R/W,DTST1 Pad LE
AON,padmuxsel_dtst1,0x5010C118,0,(29:31),R/W,PADMUX SEL DTST1
AON,dtst2_ie_n,0x5010C11C,0,(0:0),R/W,DTST2 Pad IEN
AON,dtst2_oe_n,0x5010C11C,1,(1:1),R/W,DTST2 Pad OEN
AON,dtst2_re_n,0x5010C11C,1,(2:2),R/W,DTST2 Pad REN
AON,dtst2_rtype,0x5010C11C,0,(3:3),R/W,DTST2 Pad RTYPE
AON,dtst2_le,0x5010C11C,1,(4:4),R/W,DTST2 Pad LE
AON,padmuxsel_dtst2,0x5010C11C,0,(5:7),R/W,PADMUX SEL DTST2
AON,dtst3_ie_n,0x5010C11C,0,(8:8),R/W,DTST3 Pad IEN
AON,dtst3_oe_n,0x5010C11C,1,(9:9),R/W,DTST3 Pad OEN
AON,dtst3_re_n,0x5010C11C,1,(10:10),R/W,DTST3 Pad REN
AON,dtst3_rtype,0x5010C11C,0,(11:11),R/W,DTST3 Pad RTYPE
AON,dtst3_le,0x5010C11C,1,(12:12),R/W,DTST3 Pad LE
AON,padmuxsel_dtst3,0x5010C11C,0,(13:15),R/W,PADMUX SEL DTST3
AON,dtst4_ie_n,0x5010C11C,0,(16:16),R/W,DTST4 Pad IEN
AON,dtst4_oe_n,0x5010C11C,1,(17:17),R/W,DTST4 Pad OEN
AON,dtst4_re_n,0x5010C11C,0,(18:18),R/W,DTST4 Pad REN
AON,dtst4_rtype,0x5010C11C,0,(19:19),R/W,DTST4 Pad RTYPE
AON,dtst4_le,0x5010C11C,1,(20:20),R/W,DTST4 Pad LE
AON,padmuxsel_dtst4,0x5010C11C,0,(21:23),R/W,PADMUX SEL DTST4
AON,dtstenb_ie_n,0x5010C11C,0,(24:24),R/W,DTSTENB Pad IEN
AON,dtstenb_oe_n,0x5010C11C,1,(25:25),R/W,DTSTENB Pad OEN
AON,dtstenb_re_n,0x5010C11C,0,(26:26),R/W,DTSTENB Pad REN
AON,dtstenb_rtype,0x5010C11C,0,(27:27),R/W,DTSTENB Pad RTYPE
AON,dtstenb_le,0x5010C11C,1,(28:28),R/W,DTSTENB Pad LE
AON,padmuxsel_dtstenb,0x5010C11C,0,(29:31),R/W,PADMUX SEL DTSTENB
AON,aogpio1_ie_n,0x5010C120,0,(0:0),R/W,AOGPIO1 Pad IEN
AON,aogpio1_oe_n,0x5010C120,1,(1:1),R/W,AOGPIO1 Pad OEN
AON,aogpio1_re_n,0x5010C120,1,(2:2),R/W,AOGPIO1 Pad REN
AON,aogpio1_rtype,0x5010C120,0,(3:3),R/W,AOGPIO1 Pad RTYPE
AON,aogpio1_le,0x5010C120,1,(4:4),R/W,AOGPIO1 Pad LE
AON,padmuxsel_aogpio1,0x5010C120,0,(5:7),R/W,PADMUX SEL AOGPIO1
AON,aogpio2_ie_n,0x5010C120,0,(8:8),R/W,AOGPIO2 Pad IEN
AON,aogpio2_oe_n,0x5010C120,1,(9:9),R/W,AOGPIO2 Pad OEN
AON,aogpio2_re_n,0x5010C120,1,(10:10),R/W,AOGPIO2 Pad REN
AON,aogpio2_rtype,0x5010C120,0,(11:11),R/W,AOGPIO2 Pad RTYPE
AON,aogpio2_le,0x5010C120,1,(12:12),R/W,AOGPIO2 Pad LE
AON,padmuxsel_aogpio2,0x5010C120,0,(13:15),R/W,PADMUX SEL AOGPIO2
AON,gpio1_ie_n,0x5010C120,0,(16:16),R/W,GPIO1 Pad IEN
AON,gpio1_oe_n,0x5010C120,1,(17:17),R/W,GPIO1 Pad OEN
AON,gpio1_re_n,0x5010C120,1,(18:18),R/W,GPIO1 Pad REN
AON,gpio1_rtype,0x5010C120,0,(19:19),R/W,GPIO1 Pad RTYPE
AON,gpio1_le,0x5010C120,1,(20:20),R/W,GPIO1 Pad LE
AON,padmuxsel_gpio1,0x5010C120,0,(21:23),R/W,PADMUX SEL GPIO1
AON,gpio2_ie_n,0x5010C120,0,(24:24),R/W,GPIO2 Pad IEN
AON,gpio2_oe_n,0x5010C120,1,(25:25),R/W,GPIO2 Pad OEN
AON,gpio2_re_n,0x5010C120,1,(26:26),R/W,GPIO2 Pad REN
AON,gpio2_rtype,0x5010C120,0,(27:27),R/W,GPIO2 Pad RTYPE
AON,gpio2_le,0x5010C120,1,(28:28),R/W,GPIO2 Pad LE
AON,padmuxsel_gpio2,0x5010C120,0,(29:31),R/W,PADMUX SEL GPIO2
AON,gpio3_ie_n,0x5010C124,0,(0:0),R/W,GPIO3 Pad IEN
AON,gpio3_oe_n,0x5010C124,1,(1:1),R/W,GPIO3 Pad OEN
AON,gpio3_re_n,0x5010C124,1,(2:2),R/W,GPIO3 Pad REN
AON,gpio3_rtype,0x5010C124,0,(3:3),R/W,GPIO3 Pad RTYPE
AON,gpio3_le,0x5010C124,1,(4:4),R/W,GPIO3 Pad LE
AON,padmuxsel_gpio3,0x5010C124,0,(5:7),R/W,PADMUX SEL GPIO3
AON,sespi_cs_ie_n,0x5010C124,0,(8:8),R/W,SESPI CS Pad IEN
AON,sespi_cs_oe_n,0x5010C124,1,(9:9),R/W,SESPI CS Pad OEN
AON,sespi_cs_re_n,0x5010C124,0,(10:10),R/W,SESPI CS Pad REN
AON,sespi_cs_rtype,0x5010C124,1,(11:11),R/W,SESPI CS Pad RTYPE
AON,sespi_cs_le,0x5010C124,1,(12:12),R/W,SESPI CS Pad LE
AON,padmuxsel_sespi_cs,0x5010C124,0,(13:15),R/W,PADMUX SEL SESPI CS
AON,sespi_clk_ie_n,0x5010C124,0,(16:16),R/W,SESPI CLK Pad IEN
AON,sespi_clk_oe_n,0x5010C124,1,(17:17),R/W,SESPI CLK Pad OEN
AON,sespi_clk_re_n,0x5010C124,1,(18:18),R/W,SESPI CLK Pad REN
AON,sespi_clk_rtype,0x5010C124,0,(19:19),R/W,SESPI CLK Pad RTYPE
AON,sespi_clk_le,0x5010C124,1,(20:20),R/W,SESPI CLK Pad LE
AON,padmuxsel_sespi_clk,0x5010C124,0,(21:23),R/W,PADMUX SEL SESPI CLK
AON,sespi_mosi_ie_n,0x5010C124,0,(24:24),R/W,SESPI MOSI Pad IEN
AON,sespi_mosi_oe_n,0x5010C124,1,(25:25),R/W,SESPI MOSI Pad OEN
AON,sespi_mosi_re_n,0x5010C124,1,(26:26),R/W,SESPI MOSI Pad REN
AON,sespi_mosi_rtype,0x5010C124,0,(27:27),R/W,SESPI MOSI Pad RTYPE
AON,sespi_mosi_le,0x5010C124,1,(28:28),R/W,SESPI MOSI Pad LE
AON,padmuxsel_sespi_mosi,0x5010C124,0,(29:31),R/W,PADMUX SEL SESPI MOSI
AON,sespi_miso_ie_n,0x5010C128,0,(0:0),R/W,SESPI MISO Pad IEN
AON,sespi_miso_oe_n,0x5010C128,1,(1:1),R/W,SESPI MISO Pad OEN
AON,sespi_miso_re_n,0x5010C128,1,(2:2),R/W,SESPI MISO Pad REN
AON,sespi_miso_rtype,0x5010C128,0,(3:3),R/W,SESPI MISO Pad RTYPE
AON,sespi_miso_le,0x5010C128,1,(4:4),R/W,SESPI MISO Pad LE
AON,padmuxsel_sespi_miso,0x5010C128,0,(5:7),R/W,PADMUX SEL SESPI MISO
AON,irq_ie_n,0x5010C128,0,(8:8),R/W,IRQ Pad IEN
AON,irq_oe_n,0x5010C128,1,(9:9),R/W,IRQ Pad OEN
AON,irq_re_n,0x5010C128,1,(10:10),R/W,IRQ Pad REN
AON,irq_rtype,0x5010C128,0,(11:11),R/W,IRQ Pad RTYPE
AON,irq_le,0x5010C128,1,(12:12),R/W,IRQ Pad LE
AON,padmuxsel_irq,0x5010C128,0,(13:15),R/W,PADMUX SEL IRQ
AON,hif1_ie_n,0x5010C128,0,(16:16),R/W,HIF1 Pad IEN
AON,hif1_oe_n,0x5010C128,1,(17:17),R/W,HIF1 Pad OEN
AON,hif1_re_n,0x5010C128,1,(18:18),R/W,HIF1 Pad REN
AON,hif1_rtype,0x5010C128,0,(19:19),R/W,HIF1 Pad RTYPE
AON,hif1_le,0x5010C128,1,(20:20),R/W,HIF1 Pad LE
AON,padmuxsel_hif1,0x5010C128,0,(21:23),R/W,PADMUX SEL HIF1
AON,hif2_ie_n,0x5010C128,0,(24:24),R/W,HIF2 Pad IEN
AON,hif2_oe_n,0x5010C128,1,(25:25),R/W,HIF2 Pad OEN
AON,hif2_re_n,0x5010C128,0,(26:26),R/W,HIF2 Pad REN
AON,hif2_rtype,0x5010C128,1,(27:27),R/W,HIF2 Pad RTYPE
AON,hif2_le,0x5010C128,1,(28:28),R/W,HIF2 Pad LE
AON,padmuxsel_hif2,0x5010C128,0,(29:31),R/W,PADMUX SEL HIF2
AON,hif3_ie_n,0x5010C12C,0,(0:0),R/W,HIF3 Pad IEN
AON,hif3_oe_n,0x5010C12C,1,(1:1),R/W,HIF3 Pad OEN
AON,hif3_re_n,0x5010C12C,1,(2:2),R/W,HIF3 Pad REN
AON,hif3_rtype,0x5010C12C,0,(3:3),R/W,HIF3 Pad RTYPE
AON,hif3_le,0x5010C12C,1,(4:4),R/W,HIF3 Pad LE
AON,padmuxsel_hif3,0x5010C12C,0,(5:7),R/W,PADMUX SEL HIF3
AON,hif4_ie_n,0x5010C12C,0,(8:8),R/W,HIF4 Pad IEN
AON,hif4_oe_n,0x5010C12C,1,(9:9),R/W,HIF4 Pad OEN
AON,hif4_re_n,0x5010C12C,1,(10:10),R/W,HIF4 Pad REN
AON,hif4_rtype,0x5010C12C,0,(11:11),R/W,HIF4 Pad RTYPE
AON,hif4_le,0x5010C12C,1,(12:12),R/W,HIF4 Pad LE
AON,padmuxsel_hif4,0x5010C12C,0,(13:15),R/W,PADMUX SEL HIF4
AON,padmux_swdoff,0x5010C12C,0,(16:16),R/W,
AON,testmodeoff,0x5010C12C,0,(17:17),R/W,
AON,Reserved,0x5010C130,0,(0:15),R/W,
AON,sml3_rf_start_poll,0x5010C130,0,(16:16),R/W,Triggers the Active Poll operation
AON,sml3_rf_start_listen,0x5010C130,0,(17:17),R/W,Triggers the Active Listen operation
AON,sml3_rf_end,0x5010C130,0,(18:18),R/W,Terminates the Active operation
AON,sml3_sleep,0x5010C130,0,(19:19),R/W,Instructs SML3 to go to sleep
AON,sml3_sleep_mode,0x5010C130,0,(20:20),R/W,0: deep sleep stdby 1: low power sleep
AON,sml3_wkupack,0x5010C130,0,(21:21),R/W,ACK signal from M0 after wakup
AON,sml3_active_poll_timer_bypass,0x5010C130,0,(22:22),R/W,Bypass of standby wakeup straight to active poll feature when poll timer is wakeup source
AON,sml3_active_wkrx_bypass,0x5010C130,0,(23:23),R/W,Bypass of standby wakeup straight to active poll feature when wkrx is wakeup source
AON,m0_active_osc_bypass,0x5010C130,1,(24:24),R/W,Indicates whether SML3 or M0(default) will be in control of oscillator enables in the Active states (0: SML3   1: M0)
AON,sml3_debugging_mode,0x5010C130,0,(25:25),R/W,Debugging 
AON,sml3_osc_fsm_start_bkp,0x5010C130,0,(26:26),R/W,Debugging 
AON,sml3_osc_fsm_ulp_en_bkp,0x5010C130,0,(27:27),R/W,Debugging 
AON,sml3_osc_fsm_lp_en_bkp,0x5010C130,0,(28:28),R/W,Debugging 
AON,sml3_osc_fsm_pll_en_bkp,0x5010C130,0,(29:29),R/W,Debugging 
AON,sml3_osc_fsm_ao_div_reg_bkp,0x5010C134,0,(0:9),R/W,Debugging 
AON,sml3_osc_fsm_pollcnt_div_reg_bkp,0x5010C134,0,(10:19),R/W,Debugging 
AON,sml3_osc_fsm_wkprx_div_reg_bkp,0x5010C134,0,(20:29),R/W,Debugging 
AON,sml3_osc_fsm_ao_div_switch_order_bkp,0x5010C134,0,(30:30),R/W,Debugging 
AON,sml3_osc_fsm_pollcnt_div_switch_order_bkp,0x5010C134,0,(31:31),R/W,Debugging 
AON,sml3_osc_fsm_wkprx_div_switch_order_bkp,0x5010C138,0,(0:0),R/W,Debugging 
AON,sml3_tstartup,0x5010C138,270,(1:15),R/W,Startup wait time
AON,sml3_tps,0x5010C138,540,(16:30),R/W,STDBY power switch settling time
AON,sml3_tseldo,0x5010C13C,15000,(0:14),R/W,SE LDO Settling time
AON,wakeup_flag_bkp,0x5010C13C,0,(15:15),R/W,Wakeup signal asserted by wakeup circuit indicates a wakeup source is detected 
AON,wakeup_flag_bkp_sel,0x5010C13C,0,(16:16),R/W,MUX Selector
AON,wkup_cct_1st_wkup_src_bkp,0x5010C13C,0,(17:28),R/W,First wakeup source detected by the wakeup circuit
AON,wkup_cct_1st_wkup_src_bkp_sel,0x5010C13C,0,(29:29),R/W,MUX Selector
AON,ram_stdby_n_bkp,0x5010C13C,0,(30:30),R/W,RAM Standby Signal
AON,ram_stdby_n_bkp_sel,0x5010C13C,0,(31:31),R/W,MUX Selector
AON,stdby_ps_en_bkp,0x5010C140,0,(0:0),R/W,Standby Power Switch Enable
AON,stdby_ps_en_bkp_sel,0x5010C140,0,(1:1),R/W,MUX Selector
AON,se_ldo_en_bkp,0x5010C140,0,(2:2),R/W,SE LDO Enable
AON,se_ldo_en_bkp_sel,0x5010C140,0,(3:3),R/W,MUX Selector
AON,lp_osc_en_bkp,0x5010C140,0,(4:4),R/W,LP Osc Enable
AON,lp_osc_en_bkp_sel,0x5010C140,0,(5:5),R/W,MUX Selector
AON,ulp_osc_en_bkp,0x5010C140,0,(6:6),R/W,ULP Osc Enable
AON,ulp_osc_en_bkp_sel,0x5010C140,0,(7:7),R/W,MUX Selector
AON,pll_osc_en_bkp,0x5010C140,0,(8:8),R/W,PLL Osc Enable
AON,pll_osc_en_bkp_sel,0x5010C140,0,(9:9),R/W,MUX Selector
AON,cpu_clk_en_bkp,0x5010C140,0,(10:10),R/W,CPU Clock Enable
AON,cpu_clk_en_bkp_sel,0x5010C140,0,(11:11),R/W,MUX Selector
AON,dsp_clk_en_bkp,0x5010C140,0,(12:12),R/W,DSP Clock Enable
AON,dsp_clk_en_bkp_sel,0x5010C140,0,(13:13),R/W,MUX Selector
AON,stdby_iso_en_b_bkp,0x5010C140,0,(14:14),R/W,Standby PS Domain Isolation Cells Enable
AON,stdby_iso_en_b_bkp_sel,0x5010C140,0,(15:15),R/W,0
AON,vddc_iso_en_b_bkp,0x5010C140,0,(16:16),R/W,VDDC LDO Domain Isolation Cells Enable
AON,vddc_iso_en_b_bkp_sel,0x5010C140,0,(17:17),R/W,MUX Selector
AON,plla_iso_en_b_bkp,0x5010C140,0,(18:18),R/W,PLLA LDO Domain Isolation Cells Enable
AON,plla_iso_en_b_bkp_sel,0x5010C140,0,(19:19),R/W,MUX Selector
AON,rf_iso_en_b_bkp,0x5010C140,0,(20:20),R/W,RF LDO Domain Isolation Cells Enable
AON,rf_iso_en_b_bkp_sel,0x5010C140,0,(21:21),R/W,MUX Selector
AON,vddc_ldo_en_bkp,0x5010C140,0,(22:22),R/W,VDDC LDO Enable 
AON,vddc_ldo_en_bkp_sel,0x5010C140,0,(23:23),R/W,MUX Selector
AON,hp_bias_en_bkp,0x5010C140,0,(24:24),R/W,High Power Bias Enable
AON,hp_bias_en_bkp_sel,0x5010C140,0,(25:25),R/W,MUX Selector
AON,stdby_rst_b_bkp,0x5010C140,0,(26:26),R/W,STDBY Reset
AON,stdby_rst_b_bkp_sel,0x5010C140,0,(27:27),R/W,0
AON,vddc_rst_b_bkp,0x5010C140,0,(28:28),R/W,VDD Reset
AON,vddc_rst_b_bkp_sel,0x5010C140,0,(29:29),R/W,MUX Selector
AON,se_rst_b_bkp,0x5010C140,0,(30:30),R/W,SE Reset
AON,se_rst_b_bkp_sel,0x5010C140,0,(31:31),R/W,MUX Selector
AON,se_iso_en_b_bkp,0x5010C144,0,(0:0),R/W,SE Isolation
AON,se_iso_en_b_bkp_sel,0x5010C144,0,(1:1),R/W,MUX Selector
AON,Reserved,0x5010C144,0,(2:16),R/W,
AON,aonclkgen_ao_clk_en,0x5010C144,1,(17:17),R/W,AO/SML3 Clock Enable
AON,aonclkgen_actv_clk_en,0x5010C144,0,(18:18),R/W,Active Clock Enable
AON,aonclkgen_actv_clk_en_sel,0x5010C144,0,(19:19),R/W,Active Clock Enable Selector
AON,aonclkgen_stdby_hs_clk_en,0x5010C144,0,(20:20),R/W,Standby HS Clock Enable
AON,aonclkgen_stdby_hs_clk_en_sel,0x5010C144,0,(21:21),R/W,Standby HS Clock Enable Selector
AON,aonclkgen_stdby_hls_clk_en,0x5010C144,0,(22:22),R/W,Standby HS/LS Clock Enable
AON,aonclkgen_stdby_hls_clk_en_sel,0x5010C144,0,(23:23),R/W,Standby HS/LS Clock Enable Selector
AON,aonclkgen_stdby_wkup_cct_clk_en,0x5010C144,0,(24:24),R/W,Standby Wakeup Circuit Clock Enable
AON,aonclkgen_stdby_wkup_cct_clk_en_sel,0x5010C144,0,(25:25),R/W,Standby Wakeup Circuit Clock Enable Selector
AON,aonclkgen_ao_clk_div_sel,0x5010C144,0,(26:26),R/W,AO/SML3 Clock Division Selector
AON,aonclkgen_lp_b_pll_clk_sel,0x5010C144,0,(27:27),R/W,LP/PLL Clock MUX
AON,aonclkgen_lp_b_pll_clk_sel_sel,0x5010C144,0,(28:28),R/W,LP/PLL Clock MUX Selector
AON,aonclkgen_ulp_b_lppll_clk_sel,0x5010C144,1,(29:29),R/W,ULP/FastCLK Clock MUX
AON,aonclkgen_ulp_b_lppll_clk_sel_sel,0x5010C144,0,(30:30),R/W,ULP/FastCLK Clock MUX Selector
AON,aonclkgen_ao_clk_div,0x5010C148,1,(0:9),R/W,AO/SML3 Clock Division
AON,aonclkgen_ao_clk_div_reset,0x5010C148,0,(10:10),R/W,Reset
AON,aonclkgen_ao_clk_div_bypass_align,0x5010C148,1,(11:11),R/W,Bypass Alignment
AON,aonclkgen_ao_clk_div_samp_hold,0x5010C148,0,(12:12),R/W,Hold Sampling
AON,Reserved,0x5010C148,0,(13:17),R/W,
AON,pwr_ctrl_img_src_sel,0x5010C148,0,(18:18),R/W,Image MUX Selectors
AON,m0_img_sel,0x5010C148,0,(19:20),R/W,Image MUX Selectors
AON,pwr_ctrl_load_sel,0x5010C148,0,(21:21),R/W,Image MUX Selectors
AON,m0_load_pwrctrl2,0x5010C148,0,(22:22),R/W,Image MUX Selectors
AON,m0_load_pwrctrl3,0x5010C148,0,(23:23),R/W,Image MUX Selectors
AON,pllctrl_sml1_sml3_sel,0x5010C148,1,(24:24),R/W,MUX Selectors
AON,pmu_hvaoldobypass_1vao_sel,0x5010C148,0,(25:25),R/W,MUX Selectors
AON,pmu_uiccselbit_1vao_sel,0x5010C148,0,(26:26),R/W,MUX Selectors
AON,pll_osc_en_sml1,0x5010C148,0,(27:27),R/W,MUX Selectors
AON,irq0_en,0x5010C148,0,(28:28),R/W,Interrupt Enables
AON,irq1_en,0x5010C148,0,(29:29),R/W,Interrupt Enables
AON,irq2_en,0x5010C148,0,(30:30),R/W,Interrupt Enables
AON,irq3_en,0x5010C148,0,(31:31),R/W,Interrupt Enables
AON,irq4_en,0x5010C14C,0,(0:0),R/W,Interrupt Enables
AON,irq5_en,0x5010C14C,0,(1:1),R/W,Interrupt Enables
AON,irq6_en,0x5010C14C,0,(2:2),R/W,Interrupt Enables
AON,irq7_en,0x5010C14C,0,(3:3),R/W,Interrupt Enables
AON,irq0_clear,0x5010C14C,0,(4:4),R/W,Interrupt Clears
AON,irq1_clear,0x5010C14C,0,(5:5),R/W,Interrupt Clears
AON,irq2_clear,0x5010C14C,0,(6:6),R/W,Interrupt Clears
AON,irq3_clear,0x5010C14C,0,(7:7),R/W,Interrupt Clears
AON,irq4_clear,0x5010C14C,0,(8:8),R/W,Interrupt Clears
AON,irq5_clear,0x5010C14C,0,(9:9),R/W,Interrupt Clears
AON,irq6_clear,0x5010C14C,0,(10:10),R/W,Interrupt Clears
AON,irq7_clear,0x5010C14C,0,(11:11),R/W,Interrupt Clears
AON,Reserved,0x5010C14C,0,(12:17),R/W,
AON,dram_stdby_n,0x5010C14C,1,(18:18),R/W,
AON,dram_iso_vdm_n,0x5010C14C,1,(19:19),R/W,
AON,dram_iso_vdd_n,0x5010C14C,1,(20:20),R/W,
AON,dram_ctrl_sel,0x5010C14C,0,(21:21),R/W,
AON,iram_stdby_n,0x5010C14C,1,(22:22),R/W,
AON,iram_iso_vdm_n,0x5010C14C,1,(23:23),R/W,
AON,iram_iso_vdd_n,0x5010C14C,1,(24:24),R/W,
AON,iram_ctrl_sel,0x5010C14C,0,(25:25),R/W,
AON,tram_stdby_n,0x5010C14C,1,(26:26),R/W,
AON,tram_iso_vdm_n,0x5010C14C,1,(27:27),R/W,
AON,tram_iso_vdd_n,0x5010C14C,1,(28:28),R/W,
AON,tram_ctrl_sel,0x5010C14C,0,(29:29),R/W,
AON,mcu_nml_mem_stdby_n,0x5010C14C,1,(30:30),R/W,
AON,mcu_nml_mem_iso_vdm_n,0x5010C14C,1,(31:31),R/W,
AON,mcu_nml_mem_iso_vdd_n,0x5010C150,1,(0:0),R/W,
AON,mcu_nml_mem_ctrl_sel,0x5010C150,0,(1:1),R/W,
AON,mcu_mtb_mem_stdby_n,0x5010C150,1,(2:2),R/W,
AON,mcu_mtb_mem_iso_vdm_n,0x5010C150,1,(3:3),R/W,
AON,mcu_mtb_mem_iso_vdd_n,0x5010C150,1,(4:4),R/W,
AON,mcu_mtb_mem_ctrl_sel,0x5010C150,0,(5:5),R/W,
AON,shrd_mem_stdby_n,0x5010C150,1,(6:6),R/W,
AON,shrd_mem_iso_vdm_n,0x5010C150,1,(7:7),R/W,
AON,shrd_mem_iso_vdd_n,0x5010C150,1,(8:8),R/W,
AON,shrd_mem_ctrl_sel,0x5010C150,0,(9:9),R/W,
AON,mcu_aon_rdata,0x5010C154,0,(0:31),R/W,
AON,shrdaondmux_out1_sel,0x5010C158,1,(0:7),R/W,
AON,shrdaondmux_out2_sel,0x5010C158,1,(8:15),R/W,
AON,shrdaondmux_out3_sel,0x5010C158,0,(16:23),R/W,
AON,shrdaondmux_out4_sel,0x5010C158,1,(24:31),R/W,
AON,aondmux_out1_sel,0x5010C15C,1,(0:7),R/W,
AON,aondmux_out2_sel,0x5010C15C,1,(8:15),R/W,
AON,aondmux_out3_sel,0x5010C15C,0,(16:23),R/W,
AON,aondmux_out4_sel,0x5010C15C,0,(24:31),R/W,
AON,padmuxcontsel_vpdb,0x5010C160,0,(0:0),R/W,
AON,padmuxcontsel_fwdwlreq,0x5010C160,0,(1:1),R/W,
AON,padmuxcontsel_extclkreq,0x5010C160,0,(2:2),R/W,
AON,padmuxcontsel_dtst1,0x5010C160,0,(3:3),R/W,
AON,padmuxcontsel_dtst2,0x5010C160,0,(4:4),R/W,
AON,padmuxcontsel_dtst3,0x5010C160,0,(5:5),R/W,
AON,padmuxcontsel_dtst4,0x5010C160,0,(6:6),R/W,
AON,padmuxcontsel_dtstenb,0x5010C160,0,(7:7),R/W,
AON,padmuxcontsel_aogpio1,0x5010C160,0,(8:8),R/W,
AON,padmuxcontsel_aogpio2,0x5010C160,0,(9:9),R/W,
AON,padmuxcontsel_gpio1,0x5010C160,0,(10:10),R/W,
AON,padmuxcontsel_gpio2,0x5010C160,0,(11:11),R/W,
AON,padmuxcontsel_gpio3,0x5010C160,0,(12:12),R/W,
AON,padmuxcontsel_sespi_cs,0x5010C160,0,(13:13),R/W,
AON,padmuxcontsel_sespi_clk,0x5010C160,0,(14:14),R/W,
AON,padmuxcontsel_sespi_mosi,0x5010C160,0,(15:15),R/W,
AON,padmuxcontsel_sespi_miso,0x5010C160,0,(16:16),R/W,
AON,padmuxcontsel_irq,0x5010C160,0,(17:17),R/W,
AON,padmuxcontsel_hif1,0x5010C160,0,(18:18),R/W,
AON,padmuxcontsel_hif2,0x5010C160,0,(19:19),R/W,
AON,padmuxcontsel_hif3,0x5010C160,0,(20:20),R/W,
AON,padmuxcontsel_hif4,0x5010C160,0,(21:21),R/W,
AON,vpdb_reg_sel,0x5010C160,0,(22:22),R/W,
AON,vpdb_regfile,0x5010C160,0,(23:23),R/W,
AON,sml3_cs_cntrl,0x5010C160,0,(24:24),R/W,
AON,sml3_cs_en,0x5010C160,0,(25:25),R/W,
AON,Reserved,0x5010C160,0,(26:31),R/W,
AON,tmuxsel_ana1,0x5010C164,0,(0:0),R/W,
AON,tmuxsel_ana2,0x5010C164,0,(1:1),R/W,
AON,tmuxsel_ana3,0x5010C164,0,(2:2),R/W,
AON,digctrl_hif1_filten_1v,0x5010C164,1,(3:3),R/W,
AON,digctrl_hif2_filten_1v,0x5010C164,1,(4:4),R/W,
AON,digctrl_hif1_filtmode_1v,0x5010C164,1,(5:5),R/W,
AON,digctrl_hif2_filtmode_1v,0x5010C164,1,(6:6),R/W,
AON,spare_aon_reg11,0x5010C168,65535,(0:31),R/W,Spare
AON,spare_aon_reg12,0x5010C16C,65535,(0:31),R/W,Spare
AON,spare_aon_reg13,0x5010C170,65535,(0:31),R/W,Spare
AON,spare_aon_reg14,0x5010C174,65535,(0:31),R/W,Spare
AON,spare_aon_reg15,0x5010C178,65535,(0:31),R/W,Spare
AON,spare_aon_reg16,0x5010C17C,65535,(0:31),R/W,Spare
AON,spare_aon_reg17,0x5010C180,65535,(0:31),R/W,Spare
AON,spare_aon_reg18,0x5010C184,65535,(0:31),R/W,Spare
AON,spare_aon_reg19,0x5010C188,65535,(0:31),R/W,Spare
AON,spare_aon_reg20,0x5010C18C,65535,(0:31),R/W,Spare
AON,spare_aon_reg21,0x5010C190,65535,(0:31),R/W,Spare
AON,spare_aon_reg22,0x5010C194,65535,(0:31),R/W,Spare
AON,spare_aon_reg23,0x5010C198,65535,(0:31),R/W,Spare
AON,spare_aon_reg24,0x5010C19C,65535,(0:31),R/W,Spare
AON,spare_aon_reg25,0x5010C1A0,65535,(0:31),R/W,Spare
AON,spare_aon_reg26,0x5010C1A4,65535,(0:31),R/W,Spare
AON,spare_aon_reg27,0x5010C1A8,65535,(0:31),R/W,Spare
AON,spare_aon_reg28,0x5010C1AC,65535,(0:31),R/W,Spare
AON,spare_aon_reg29,0x5010C1B0,65535,(0:31),R/W,Spare
AON,spare_aon_reg30,0x5010C1B4,0,(0:31),R/W,Spare
AON,Reserved,0x5010C1B8,0,(0:31),R/W,
AON,Reserved,0x5010C1BC,0,(0:31),R/W,
AON,Reserved,0x5010C1C0,0,(0:31),R/W,
AON,Reserved,0x5010C1C4,0,(0:31),R/W,
AON,sml3_rf_config_done,0x5010C1C8,0,(0:0),R,Indicates that SML3 configuration for the Active states is complete
AON,sml3_wkup_irq,0x5010C1C8,0,(1:1),R,Wakeup interrupt from SML3 to CPU to wakeup from low power standby
AON,sml3_img_sel,0x5010C1C8,0,(2:3),R,
AON,sml3_load_pwrctrl2,0x5010C1C8,0,(4:4),R,
AON,sml3_load_pwrctrl3,0x5010C1C8,0,(5:5),R,
AON,sml3_state_out,0x5010C1C8,0,(6:12),R,
AON,sml3_osc_fsm_done,0x5010C1C8,0,(13:13),R,
AON,irq_status,0x5010C1C8,0,(14:21),R,Interrupts Status
AON,int_swp1en_1vao,0x5010C1C8,0,(22:22),R,
AON,int_swp1highz_1vao,0x5010C1C8,0,(23:23),R,
AON,int_swp2en_1vao,0x5010C1C8,0,(24:24),R,
AON,int_swp2highz_1vao,0x5010C1C8,0,(25:25),R,
AON,pmu_thrmprten_1vao,0x5010C1C8,0,(26:26),R,
AON,pmu_gpioldoen_1vao,0x5010C1C8,0,(27:27),R,
AON,pmu_vddtxinmonen_1vao,0x5010C1C8,0,(28:28),R,
AON,pmu_vbattmonen_1vao,0x5010C1C8,0,(29:29),R,
AON,pmu_vbattmontrimlow_1vao,0x5010C1CC,0,(0:2),R,
AON,pmu_vbattmontrimhigh_1vao,0x5010C1CC,0,(3:5),R,
AON,pmu_vddhiomonen_1vao,0x5010C1CC,0,(6:6),R,
AON,pmu_pllaldoen_1vao,0x5010C1CC,0,(7:7),R,
AON,pmu_rfldoen_1vao,0x5010C1CC,0,(8:8),R,
AON,pmu_rxldoen_1vao,0x5010C1CC,0,(9:9),R,
AON,trx_hpdpden_1vao,0x5010C1CC,0,(10:10),R,
AON,aux_tmpsnsen_1vao,0x5010C1CC,0,(11:11),R,
AON,aux_adcen_1vao,0x5010C1CC,0,(12:12),R,
AON,aux_tmuxen_1vao,0x5010C1CC,0,(13:13),R,
AON,pmu_tmuxen_1vao,0x5010C1CC,0,(14:14),R,
AON,lp_osc_en,0x5010C1CC,0,(15:15),R,
AON,pmu_hvaoldobypass_1vao_mux,0x5010C1CC,0,(16:16),R,
AON,pmu_uiccselbit_1vao_mux,0x5010C1CC,0,(17:17),R,
AON,ao_clk_div_mux,0x5010C1CC,0,(18:27),R,
AON,wkup_cct_1st_wkup_src_mux,0x5010C1D0,0,(0:11),R,
AON,se_ldo_en,0x5010C1D0,0,(12:12),R,
AON,ulp_osc_en,0x5010C1D0,0,(13:13),R,
AON,pll_osc_en,0x5010C1D0,0,(14:14),R,
AON,i2cmon_rcv_byte,0x5010C1D0,0,(15:23),R,
AON,i2cmon_cmp_byte,0x5010C1D0,0,(24:31),R,
AON,i2cmon_i3c_i2c_mode,0x5010C1D4,0,(0:0),R,
AON,i2cmon_vpdb_mntr,0x5010C1D4,0,(1:1),R,
AON,i2cmon_vpdb_reg,0x5010C1D4,0,(2:2),R,
AON,i2cmon_start_reg,0x5010C1D4,0,(3:3),R,
AON,i2cmon_stop_reg,0x5010C1D4,0,(4:4),R,
AON,i2cmon_packet_in,0x5010C1D4,0,(5:5),R,
AON,i2cmon_packet_in_2,0x5010C1D4,0,(6:6),R,
AON,i2cmon_enable,0x5010C1D4,0,(7:7),R,
AON,iooff_vdhio_domain,0x5010C1D4,0,(8:8),R,
AON,iooff_gpio_domain,0x5010C1D4,0,(9:9),R,
AON,poc_vdhio_domain,0x5010C1D4,0,(10:10),R,
AON,poc_gpio_domain,0x5010C1D4,0,(11:11),R,
AON,pmu_hvaomon_1v,0x5010C1D4,0,(12:12),R,
AON,vddhiomonhigh_1v,0x5010C1D4,0,(13:13),R,
AON,vbattmonlow_1v,0x5010C1D4,0,(14:14),R,
AON,poc_se_domain,0x5010C1D4,0,(15:15),R,
AON,vddhiomonlow_1v,0x5010C1D4,0,(16:16),R,
AON,vbattmonhigh_1v,0x5010C1D4,0,(17:17),R,
AON,Reserved,0x5010C1D8,0,(0:22),R,
AON,spare_aon_rdreg1,0x5010C1DC,65535,(0:31),R,Spare
AON,spare_aon_rdreg2,0x5010C1E0,65535,(0:31),R,Spare
AON,spare_aon_rdreg3,0x5010C1E4,65535,(0:31),R,Spare
AON,spare_aon_rdreg4,0x5010C1E8,65535,(0:31),R,Spare
AON,spare_aon_rdreg5,0x5010C1EC,65535,(0:31),R,Spare
AON,spare_aon_rdreg6,0x5010C1F0,65535,(0:31),R,Spare
AON,spare_aon_rdreg7,0x5010C1F4,65535,(0:31),R,Spare
AON,Reserved,0x5010C1F8,0,(0:31),R,
AON,Reserved,0x5010C1FC,0,(0:31),R,
AON,Reserved,0x5010C200,0,(0:31),R,
AON,Reserved,0x5010C204,0,(0:31),R,
CLITOP,TXSER_DATA_LEN,0x5010D800,0,(0:4),R/W,
CLITOP,TXSER_DATA_DEF_VAL,0x5010D800,1,(5:5),R/W,
CLITOP,TXPROGDELAY_DATA_DEF_VAL,0x5010D800,1,(6:6),R/W,
CLITOP,Reserved,0x5010D800,0,(7:7),R/W,
CLITOP,spare_clitop_dyn0,0x5010D800,4095,(8:31),R/W,
CLITOP,TXSER_RATE,0x5010D804,0,(0:3),R/W,
CLITOP,Reserved,0x5010D808,0,(0:31),R/W,
CLITOP,DSPINFIFO1_FILLING_intrpt,0x5010D80C,0,(0:8),R/W,
CLITOP,Reserved,0x5010D80C,0,(9:15),R/W,
CLITOP,spare_clitop_dyn1,0x5010D80C,255,(16:31),R/W,
CLITOP,Reserved,0x5010D810,0,(0:31),R/W,
CLITOP,Reserved,0x5010D814,0,(0:31),R/W,
CLITOP,DSPINFIFO2_FILLING_intrpt,0x5010D818,0,(0:4),R/W,
CLITOP,Reserved,0x5010D818,0,(5:7),R/W,
CLITOP,spare_clitop_dyn2,0x5010D818,4095,(8:31),R/W,
CLITOP,Reserved,0x5010D81C,0,(0:31),R/W,
CLITOP,Reserved,0x5010D820,0,(0:31),R/W,
CLITOP,DSPOUTFIFO_FILLING_intrpt,0x5010D824,0,(0:5),R/W,
CLITOP,Reserved,0x5010D824,0,(6:7),R/W,
CLITOP,spare_clitop_dyn3,0x5010D824,4095,(8:31),R/W,
CLITOP,Reserved,0x5010D828,0,(0:31),R/W,
CLITOP,Reserved,0x5010D82C,0,(0:31),R/W,
CLITOP,TXSER_CMD1,0x5010D830,1,(0:9),R/W,
CLITOP,TXSER_CMD2,0x5010D830,2,(10:19),R/W,
CLITOP,TXSER_CMD3,0x5010D830,4,(20:29),R/W,
CLITOP,TXSER_CMD4,0x5010D834,8,(0:9),R/W,
CLITOP,TXSER_CMD5,0x5010D834,16,(10:19),R/W,
CLITOP,TXSER_CMD6,0x5010D834,32,(20:29),R/W,
CLITOP,TXSER_CMD7,0x5010D838,64,(0:9),R/W,
CLITOP,TXSER_CMD8,0x5010D838,128,(10:19),R/W,
CLITOP,TXSER_CMD9,0x5010D838,256,(20:29),R/W,
CLITOP,TXSER_CMD10,0x5010D83C,512,(0:9),R/W,
CLITOP,TXSER_CMD11,0x5010D83C,0,(10:19),R/W,
CLITOP,TXSER_CMD12,0x5010D83C,0,(20:29),R/W,
CLITOP,TXSER_CMD13,0x5010D840,0,(0:9),R/W,
CLITOP,TXSER_CMD14,0x5010D840,0,(10:19),R/W,
CLITOP,TXSER_STRT_SRC,0x5010D840,0,(20:20),R/W,
CLITOP,Reserved,0x5010D840,0,(21:21),R/W,
CLITOP,CEA_INPUT_SRC,0x5010D840,0,(22:22),R/W,
CLITOP,Reserved,0x5010D840,0,(23:26),R/W,
CLITOP,Reserved,0x5010D840,0,(27:30),R/W,
CLITOP,TXSER_TXSTRT_EVTSEL,0x5010D844,0,(0:3),R/W,
CLITOP,MDM_FDTLSTNMIN_EVTSEL,0x5010D844,0,(4:7),R/W,
CLITOP,MDM_FDTLSTNMAX1_EVTSEL,0x5010D844,0,(8:11),R/W,
CLITOP,MDM_FDTLSTNMAX2_EVTSEL,0x5010D844,0,(12:15),R/W,
CLITOP,MDM_FDTPOLLMIN_EVTSEL,0x5010D844,0,(16:19),R/W,
CLITOP,MDM_RXTIMEOUT_EVTSEL,0x5010D844,0,(20:23),R/W,
CLITOP,Reserved,0x5010D844,0,(24:27),R/W,
CLITOP,MDM_SLOTTIMEOUT_EVTSEL,0x5010D844,0,(28:31),R/W,
CLITOP,MDM_SLOTEND_EVTSEL,0x5010D848,0,(0:3),R/W,
CLITOP,Reserved,0x5010D848,0,(4:7),R/W,
CLITOP,TXSER_FLG_TIMCAPTR_SEL,0x5010D848,0,(8:11),R/W,
CLITOP,spare_clitop_rom0,0x5010D84C,65535,(0:31),R/W,Spare
CLITOP,spare_clitop_rom1,0x5010D850,65535,(0:31),R/W,Spare
CLITOP,spare_clitop_rom2,0x5010D854,65535,(0:31),R/W,Spare
CLITOP,spare_clitop_rom3,0x5010D858,0,(0:31),R/W,Spare
CLITOP,spare_clitop_rom4,0x5010D85C,0,(0:31),R/W,Spare
CLITOP,spare_clitop_rom5,0x5010D860,0,(0:31),R/W,Spare
CLITOP,Reserved,0x5010D864,0,(0:31),R/W,
CLITOP,Reserved,0x5010D868,0,(0:31),R/W,
CLITOP,Reserved,0x5010D86C,0,(0:0),R/W,
CLITOP,Reserved,0x5010D86C,0,(1:1),R/W,
CLITOP,TXSER_EN,0x5010D86C,0,(2:2),R/W,
CLITOP,TXSER_RST,0x5010D86C,0,(3:3),R/W,
CLITOP,TXSER_STRT,0x5010D86C,0,(4:4),R/W,
CLITOP,DSPINFIFO1_EN,0x5010D86C,0,(5:5),R/W,
CLITOP,DSPINFIFO1_RST,0x5010D86C,0,(6:6),R/W,
CLITOP,DSPINFIFO2_EN,0x5010D86C,0,(7:7),R/W,
CLITOP,DSPINFIFO2_RST,0x5010D86C,0,(8:8),R/W,
CLITOP,DSPOUTFIFO_EN,0x5010D86C,0,(9:9),R/W,
CLITOP,DSPOUTFIFO_RST,0x5010D86C,0,(10:10),R/W,
CLITOP,CLITOP_INT_CLR,0x5010D870,0,(0:31),R/W,
CLITOP,CLITOP_INT1_CLR,0x5010D874,0,(0:31),R/W,
CLITOP,CLITOP_INT_EN,0x5010D878,0,(0:31),R/W,
CLITOP,CLITOP_INT1_EN,0x5010D87C,0,(0:31),R/W,
CLITOP,Reserved,0x5010D880,0,(0:3),R/W,
CLITOP,Reserved,0x5010D880,0,(4:4),R/W,
CLITOP,MDM_RXEND_SEL,0x5010D880,0,(5:5),R/W,
CLITOP,CEA_DATAVALID_FLG_RISE_SEL,0x5010D880,0,(6:7),R/W,
CLITOP,CEA_DATAVALID_FLG_FALL_SEL,0x5010D880,1,(8:8),R/W,
CLITOP,CEA_DATAVALID_FLG_RISE_CNTVAL,0x5010D880,400,(9:19),R/W,
CLITOP,CEA_DATAVALID_FLG_FRCVAL,0x5010D880,0,(20:20),R/W,
CLITOP,CEA_EOFVALID_FLG_RISE_SEL,0x5010D880,0,(21:22),R/W,
CLITOP,CEA_EOFVALID_FLG_FALL_SEL,0x5010D880,0,(23:23),R/W,
CLITOP,CEA_MDM_RX_SEL,0x5010D880,0,(24:24),R/W,
CLITOP,CEA_INVLD_PTTRN_MAP_SEL,0x5010D880,0,(25:26),R/W,
CLITOP,TXPROGDELAY_DATA_BYP,0x5010D880,1,(27:27),R/W,
CLITOP,Reserved,0x5010D880,2,(28:29),R/W,
CLITOP,TXPROGDELAY_EN,0x5010D880,0,(30:30),R/W,
CLITOP,TXPROGDELAY_RST,0x5010D880,0,(31:31),R/W,
CLITOP,Reserved,0x5010D884,0,(0:7),R/W,
CLITOP,Reserved,0x5010D884,0,(8:15),R/W,
CLITOP,Reserved,0x5010D884,0,(16:23),R/W,
CLITOP,Reserved,0x5010D884,0,(24:31),R/W,
CLITOP,Reserved,0x5010D888,0,(0:7),R/W,
CLITOP,Reserved,0x5010D888,0,(8:15),R/W,
CLITOP,Reserved,0x5010D888,0,(16:23),R/W,
CLITOP,Reserved,0x5010D888,0,(24:31),R/W,
CLITOP,Reserved,0x5010D88C,0,(0:7),R/W,
CLITOP,Reserved,0x5010D88C,0,(8:15),R/W,
CLITOP,Reserved,0x5010D88C,0,(16:23),R/W,
CLITOP,Reserved,0x5010D88C,0,(24:31),R/W,
CLITOP,Reserved,0x5010D890,0,(0:7),R/W,
CLITOP,Reserved,0x5010D890,0,(8:15),R/W,
CLITOP,Reserved,0x5010D890,0,(16:23),R/W,
CLITOP,Reserved,0x5010D890,0,(24:31),R/W,
CLITOP,Reserved,0x5010D894,0,(0:7),R/W,
CLITOP,Reserved,0x5010D894,0,(8:15),R/W,
CLITOP,Reserved,0x5010D894,0,(16:23),R/W,
CLITOP,Reserved,0x5010D894,0,(24:31),R/W,
CLITOP,Reserved,0x5010D898,0,(0:7),R/W,
CLITOP,Reserved,0x5010D898,0,(8:15),R/W,
CLITOP,TXPROGDELAY_FLGS_BYP,0x5010D898,1023,(16:25),R/W,
CLITOP,spare_clitop_reg0,0x5010D89C,65535,(0:31),R/W,Spare
CLITOP,spare_clitop_reg1,0x5010D8A0,65535,(0:31),R/W,Spare
CLITOP,spare_clitop_reg2,0x5010D8A4,65535,(0:31),R/W,Spare
CLITOP,spare_clitop_reg3,0x5010D8A8,65535,(0:31),R/W,Spare
CLITOP,Reserved,0x5010D8AC,0,(0:5),R/W,
CLITOP,TXSER_UNDRFLW,0x5010D8AC,0,(6:6),R,
CLITOP,TXSER_STATE,0x5010D8AC,0,(7:9),R,
CLITOP,TXSER_FLAG_VECT,0x5010D8AC,0,(10:19),R,
CLITOP,DSPINFIFO1_FILLING,0x5010D8AC,0,(20:28),R,
CLITOP,DSPINFIFO1_FULL,0x5010D8AC,0,(29:29),R,
CLITOP,MDM_MSG,0x5010D8B0,0,(0:4),R,
CLITOP,DSPINFIFO2_FILLING,0x5010D8B0,0,(5:9),R,
CLITOP,DSPINFIFO2_FULL,0x5010D8B0,0,(10:10),R,
CLITOP,DSPOUTFIFO_FILLING,0x5010D8B0,0,(11:16),R,
CLITOP,DSPOUTFIFO_EMPTY,0x5010D8B0,0,(17:17),R,
CLITOP,TXSER_TXEND_TIMCAPTR,0x5010D8B4,0,(0:31),R,
CLITOP,CEA_TXEND_TIMCAPTR,0x5010D8B8,0,(0:31),R,
CLITOP,Reserved,0x5010D8BC,0,(0:31),R,
CLITOP,MDM_RXEND_TIMCAPTR,0x5010D8C0,0,(0:31),R,
CLITOP,MDM_RX1_RXEND_TIMCAPTR,0x5010D8C4,0,(0:31),R,
CLITOP,TXSER_FLG_TIMCAPTR,0x5010D8C8,0,(0:31),R,
CLITOP,CEA_INT_STAT,0x5010D8CC,0,(0:31),R,
CLITOP,CLITOP_INT_STAT,0x5010D8D0,0,(0:31),R,
CLITOP,CLITOP_INT1_STAT,0x5010D8D4,0,(0:31),R,
CLITOP,CLITOP_INT_STAT_STK,0x5010D8D8,0,(0:31),R,
CLITOP,CLITOP_INT1_STAT_STK,0x5010D8DC,0,(0:31),R,
CLITOP,spare_clitop_rdreg0,0x5010D8E0,0,(0:31),R,Spare
CLITOP,spare_clitop_rdreg1,0x5010D8E4,0,(0:31),R,Spare
CLITOP,spare_clitop_rdreg2,0x5010D8E8,0,(0:31),R,Spare
CLITOP,spare_clitop_rdreg3,0x5010D8EC,0,(0:31),R,Spare
CLITOP,Reserved,0x5010D8F0,0,(0:31),R/W,
CLITOP,Reserved,0x5010D8F4,0,(0:31),R/W,
CLITOP,MDM_RX1_RXEND_SEL,0x5010D8F8,0,(0:0),R/W,
CLITOP,DSPINFIFO1_TST_PUSH_EN,0x5010D8F8,0,(1:1),R/W,
CLITOP,DSPINFIFO1_TST_PUSH_CTRL,0x5010D8F8,0,(2:2),R/W,
CLITOP,DSPINFIFO1_TST_PUSH_DATA,0x5010D8F8,0,(3:7),R/W,
CLITOP,DSPINFIFO2_TST_PUSH_EN,0x5010D8F8,0,(8:8),R/W,
CLITOP,DSPINFIFO2_TST_PUSH_CTRL,0x5010D8F8,0,(9:9),R/W,
CLITOP,DSPINFIFO2_TST_PUSH_DATA,0x5010D8FC,0,(0:31),R/W,
CLITOP,DSPOUTFIFO_TST_PULL_EN,0x5010D900,0,(0:0),R/W,
CLITOP,DSPOUTFIFO_TST_PULL_CTRL,0x5010D900,0,(1:1),R/W,
CLITOP,DSPOUTFIFO_PULL_DATA,0x5010D904,0,(0:31),R,
CLITOP,MDM_RXCTRLDZREQ_SMPLCAPTR1,0x5010D908,0,(0:13),R,
CLITOP,MDM_RXCTRLDZREQ_SMPLCAPTR2,0x5010D908,0,(14:27),R,
CLITOP,Reserved,0x5010D908,0,(28:31),R,
CLITOP,MDM_RXCTRLDZFRC_SMPLCAPTR1,0x5010D90C,0,(0:13),R,
CLITOP,MDM_RXCTRLDZFRC_SMPLCAPTR2,0x5010D90C,0,(14:27),R,
CLITOP,Reserved,0x5010D90C,0,(28:31),R,
CLITOP,MDM_RXCTRLDZAPPRV_AL_SEL,0x5010D910,0,(0:3),R/W,
CLITOP,MDM_RXCTRLDZAPPRV_CLR,0x5010D910,0,(4:4),R/W,
CLITOP,MDM_RXCTRLDZAPPRV_DMA_SEL,0x5010D910,0,(5:5),R/W,
CLITOP,MDM_RXCTRLDZAPPRV_SMPL,0x5010D910,0,(6:19),R/W,
CLITOP,MDM_RXCTRLDZAPPRV_SRC,0x5010D910,0,(20:20),R/W,
CLITOP,Reserved,0x5010D910,0,(21:31),R/W,
CLITOP,MDM_RXCTRLDZFRCACK_AL_SEL,0x5010D914,0,(0:3),R/W,
CLITOP,MDM_RXCTRLDZFRCACK_CLR,0x5010D914,0,(4:4),R/W,
CLITOP,MDM_RXCTRLDZFRCACK_DMA_SEL,0x5010D914,0,(5:5),R/W,
CLITOP,MDM_RXCTRLDZFRCACK_SMPL,0x5010D914,0,(6:19),R/W,
CLITOP,MDM_RXCTRLDZFRCACK_SRC,0x5010D914,0,(20:20),R/W,
CLITOP,Reserved,0x5010D914,0,(21:31),R/W,
CLITOP,MDM_RXCTRLDZSIG_AL_SEL,0x5010D918,0,(0:3),R/W,
CLITOP,MDM_RXCTRLDZSIG_CLR,0x5010D918,0,(4:4),R/W,
CLITOP,MDM_RXCTRLDZSIG_DMA_SEL,0x5010D918,0,(5:5),R/W,
CLITOP,MDM_RXCTRLDZSIG_SMPL,0x5010D918,0,(6:19),R/W,
CLITOP,MDM_RXCTRLDZSIG_SRC,0x5010D918,0,(20:20),R/W,
CLITOP,Reserved,0x5010D918,0,(21:31),R/W,
CLITOP,TX_OUT_TST_EN,0x5010D91C,0,(0:0),R/W,
CLITOP,TX_OUT_TST_VAL,0x5010D91C,1,(1:1),R/W,
CLITOP,TX_FLG0_DATAVALID_TST_EN,0x5010D91C,0,(2:2),R/W,
CLITOP,TX_FLG0_DATAVALID_TST_VAL,0x5010D91C,0,(3:3),R/W,
CLITOP,TX_FLG1_EOFVALID_TST_EN,0x5010D91C,0,(4:4),R/W,
CLITOP,TX_FLG1_EOFVALID_TST_VAL,0x5010D91C,0,(5:5),R/W,
CLITOP,TX_FLG2_TST_EN,0x5010D91C,0,(6:6),R/W,
CLITOP,TX_FLG2_TST_VAL,0x5010D91C,0,(7:7),R/W,
CLITOP,TX_FLG3_TST_EN,0x5010D91C,0,(8:8),R/W,
CLITOP,TX_FLG3_TST_VAL,0x5010D91C,0,(9:9),R/W,
CLITOP,TX_FLG4_TST_EN,0x5010D91C,0,(10:10),R/W,
CLITOP,TX_FLG4_TST_VAL,0x5010D91C,0,(11:11),R/W,
CLITOP,TX_FLG5_TST_EN,0x5010D91C,0,(12:12),R/W,
CLITOP,TX_FLG5_TST_VAL,0x5010D91C,0,(13:13),R/W,
CLITOP,TX_FLG6_TST_EN,0x5010D91C,0,(14:14),R/W,
CLITOP,TX_FLG6_TST_VAL,0x5010D91C,0,(15:15),R/W,
CLITOP,TX_FLG7_TST_EN,0x5010D91C,0,(16:16),R/W,
CLITOP,TX_FLG7_TST_VAL,0x5010D91C,0,(17:17),R/W,
CLITOP,TX_FLG8_TST_EN,0x5010D91C,0,(18:18),R/W,
CLITOP,TX_FLG8_TST_VAL,0x5010D91C,0,(19:19),R/W,
CLITOP,TX_FLG9_TST_EN,0x5010D91C,0,(20:20),R/W,
CLITOP,TX_FLG9_TST_VAL,0x5010D91C,0,(21:21),R/W,
CLITOP,FDTLSTNMIN_E_TST_EN,0x5010D91C,0,(22:22),R/W,
CLITOP,FDTLSTNMIN_E_TST_VAL,0x5010D91C,0,(23:23),R/W,
CLITOP,FDTLSTNMAX1_E_TST_EN,0x5010D91C,0,(24:24),R/W,
CLITOP,FDTLSTNMAX1_E_TST_VAL,0x5010D91C,0,(25:25),R/W,
CLITOP,FDTLSTNMAX2_E_TST_EN,0x5010D91C,0,(26:26),R/W,
CLITOP,FDTLSTNMAX2_E_TST_VAL,0x5010D91C,0,(27:27),R/W,
CLITOP,FDTPOLLMIN_E_TST_EN,0x5010D91C,0,(28:28),R/W,
CLITOP,FDTPOLLMIN_E_TST_VAL,0x5010D91C,0,(29:29),R/W,
CLITOP,RXTIMEOUT_E_TST_EN,0x5010D91C,0,(30:30),R/W,
CLITOP,RXTIMEOUT_E_TST_VAL,0x5010D91C,0,(31:31),R/W,
CLITOP,SLOT_TIMEOUT_E_TST_EN,0x5010D920,0,(0:0),R/W,
CLITOP,SLOT_TIMEOUT_E_TST_VAL,0x5010D920,0,(1:1),R/W,
CLITOP,SLOT_END_E_TST_EN,0x5010D920,0,(2:2),R/W,
CLITOP,SLOT_END_E_TST_VAL,0x5010D920,0,(3:3),R/W,
CLITOP,Reserved,0x5010D920,0,(4:31),R/W,
CLITOP,CEA_STATE1_INTRPT,0x5010D924,1,(0:4),R/W,
CLITOP,CEA_STATE2_INTRPT,0x5010D924,2,(5:9),R/W,
CLITOP,CEA_STATE3_INTRPT,0x5010D924,3,(10:14),R/W,
CLITOP,CEA_STATE4_INTRPT,0x5010D924,4,(15:19),R/W,
CLITOP,CEA_STATE5_INTRPT,0x5010D924,5,(20:24),R/W,
CLITOP,CEA_STATE6_INTRPT,0x5010D924,7,(25:29),R/W,
CLITOP,CEA_STATE7_INTRPT,0x5010D928,9,(0:4),R/W,
CLITOP,CLITOP_ODMUX_OUT1_SEL,0x5010D928,0,(5:14),R/W,
CLITOP,Reserved,0x5010D928,0,(15:20),R/W,
CLITOP,CLITOP_ODMUX_OUT2_SEL,0x5010D928,0,(21:30),R/W,
CLITOP,Reserved,0x5010D92C,0,(0:5),R/W,
CLITOP,CLITOP_ODMUX_OUT3_SEL,0x5010D92C,0,(6:15),R/W,
CLITOP,Reserved,0x5010D92C,0,(16:21),R/W,
CLITOP,CLITOP_ODMUX_OUT4_SEL,0x5010D92C,0,(22:31),R/W,
CLITOP,Reserved,0x5010D930,0,(0:5),R/W,
CLITOP,CLITOP_IDMUX_SEL0,0x5010D930,0,(6:7),R/W,
CLITOP,CLITOP_IDMUX_SEL1,0x5010D930,0,(8:9),R/W,
CLITOP,CLITOP_IDMUX_SEL2,0x5010D930,0,(10:11),R/W,
CLITOP,CLITOP_IDMUX_SEL3,0x5010D930,0,(12:13),R/W,
CLITOP,CLITOP_IDMUX_SEL4,0x5010D930,0,(14:15),R/W,
CLITOP,CLITOP_IDMUX_SEL5,0x5010D930,0,(16:17),R/W,
CLITOP,CLITOP_IDMUX_SEL6,0x5010D930,0,(18:19),R/W,
CLITOP,CLITOP_IDMUX_SEL7,0x5010D930,0,(20:21),R/W,
CLITOP,CLITOP_IDMUX_SEL8,0x5010D930,0,(22:23),R/W,
CLITOP,CLITOP_IDMUX_SEL9,0x5010D930,0,(24:25),R/W,
CLITOP,CLITOP_IDMUX_SEL10,0x5010D930,0,(26:27),R/W,
CLITOP,CLITOP_IDMUX_SEL11,0x5010D930,0,(28:29),R/W,
CLITOP,CLITOP_IDMUX_SEL12,0x5010D930,0,(30:31),R/W,
CLITOP,CLITOP_IDMUX_SEL13,0x5010D934,0,(0:1),R/W,
CLITOP,CLITOP_IDMUX_SEL14,0x5010D934,0,(2:3),R/W,
CLITOP,CLITOP_IDMUX_SEL15,0x5010D934,0,(4:5),R/W,
CLITOP,CLITOP_IDMUX_SEL16,0x5010D934,0,(6:7),R/W,
CLITOP,CLITOP_IDMUX_SEL17,0x5010D934,0,(8:9),R/W,
CLITOP,CLITOP_IDMUX_SEL18,0x5010D934,0,(10:11),R/W,
CLITOP,CLITOP_IDMUX_SEL19,0x5010D934,0,(12:13),R/W,
CLITOP,CLITOP_IDMUX_SEL20,0x5010D934,0,(14:15),R/W,
CLITOP,CLITOP_IDMUX_SEL21,0x5010D934,0,(16:17),R/W,
CLITOP,CLITOP_IDMUX_SEL22,0x5010D934,0,(18:19),R/W,
CLITOP,CLITOP_IDMUX_SEL23,0x5010D934,0,(20:21),R/W,
CLITOP,CLITOP_IDMUX_SEL24,0x5010D934,0,(22:23),R/W,
CLITOP,CLITOP_IDMUX_SEL25,0x5010D934,0,(24:25),R/W,
CLITOP,CLITOP_IDMUX_SEL26,0x5010D934,0,(26:27),R/W,
CLITOP,CLITOP_IDMUX_SEL27,0x5010D934,0,(28:29),R/W,
CLITOP,CLITOP_IDMUX_SEL28,0x5010D934,0,(30:31),R/W,
CLITOP,CLITOP_IDMUX_SEL29,0x5010D938,0,(0:1),R/W,
CLITOP,CLITOP_IDMUX_SEL30,0x5010D938,0,(2:3),R/W,
CLITOP,CLITOP_IDMUX_SEL31,0x5010D938,0,(4:5),R/W,
CLITOP,CLITOP_IDMUX_EN,0x5010D93C,0,(0:31),R/W,
CLITOP,TXPROGDELAY_DATA_RDLY,0x5010D940,0,(0:15),R/W,Data rise edge delay
CLITOP,TXPROGDELAY_DATA_FDLY,0x5010D940,0,(16:31),R/W,Data falling edge delay
CLITOP,TXPROGDELAY_FLG0_RDLY,0x5010D944,0,(0:15),R/W,Flag 0 Rising edge delay
CLITOP,TXPROGDELAY_FLG0_FDLY,0x5010D944,0,(16:31),R/W,Flag 0 Falling edge delay
CLITOP,TXPROGDELAY_FLG1_RDLY,0x5010D948,0,(0:15),R/W,Flag 1 Rising edge delay
CLITOP,TXPROGDELAY_FLG1_FDLY,0x5010D948,0,(16:31),R/W,Flag 1 Falling edge delay
CLITOP,TXPROGDELAY_FLG2_RDLY,0x5010D94C,0,(0:15),R/W,Flag 2 Rising edge delay
CLITOP,TXPROGDELAY_FLG2_FDLY,0x5010D94C,0,(16:31),R/W,Flag 2 Falling edge delay
CLITOP,TXPROGDELAY_FLG3_RDLY,0x5010D950,0,(0:15),R/W,Flag 3 Rising edge delay
CLITOP,TXPROGDELAY_FLG3_FDLY,0x5010D950,0,(16:31),R/W,Flag 3 Falling edge delay
CLITOP,TXPROGDELAY_FLG4_RDLY,0x5010D954,0,(0:15),R/W,Flag 4 Rising edge delay
CLITOP,TXPROGDELAY_FLG4_FDLY,0x5010D954,0,(16:31),R/W,Flag 4 Falling edge delay
CLITOP,TXPROGDELAY_FLG5_RDLY,0x5010D958,0,(0:15),R/W,Flag 5 Rising edge delay
CLITOP,TXPROGDELAY_FLG5_FDLY,0x5010D958,0,(16:31),R/W,Flag 5 Falling edge delay
CLITOP,TXPROGDELAY_FLG6_RDLY,0x5010D95C,0,(0:15),R/W,Flag 6 Rising edge delay
CLITOP,TXPROGDELAY_FLG6_FDLY,0x5010D95C,0,(16:31),R/W,Flag 6 Falling edge delay
CLITOP,TXPROGDELAY_FLG7_RDLY,0x5010D960,0,(0:15),R/W,Flag 7 Rising edge delay
CLITOP,TXPROGDELAY_FLG7_FDLY,0x5010D960,0,(16:31),R/W,Flag 7 Falling edge delay
CLITOP,TXPROGDELAY_FLG8_RDLY,0x5010D964,0,(0:15),R/W,Flag 8 Rising edge delay
CLITOP,TXPROGDELAY_FLG8_FDLY,0x5010D964,0,(16:31),R/W,Flag 8 Falling edge delay
CLITOP,TXPROGDELAY_FLG9_RDLY,0x5010D968,0,(0:15),R/W,Flag 9 Rising edge delay
CLITOP,TXPROGDELAY_FLG9_FDLY,0x5010D968,0,(16:31),R/W,Flag 9 Falling edge delay
CLITOP,TXPROGDELAY_DATA_SR_DLY,0x5010D96C,0,(0:4),R/W,Data Shift Reg delay selection
CLITOP,Reserved,0x5010D96C,0,(5:7),R/W,
CLITOP,TXPROGDELAY_RES,0x5010D96C,0,(8:9),R/W,Resolution selection (1  2  3  4)
CLITOP,Reserved,0x5010D96C,0,(10:31),R/W,
CLITOP,CLITOP_MCUINT_STAT_STK,0x5010D970,0,(0:31),R,
CLITOP,CLITOP_MCUINT1_STAT_STK,0x5010D974,0,(0:31),R,
CLITOP,CLITOP_MCUINT_EN,0x5010D978,0,(0:31),R/W,
CLITOP,CLITOP_MCUINT1_EN,0x5010D97C,0,(0:31),R/W,
CLITOP,TX_MUX_SEL,0x5010D980,0,(0:0),R/W,
CLITOP,CEA_MDM_RX_EN,0x5010D980,1,(1:1),R/W,
CLITOP,Reserved,0x5010D980,0,(2:7),R/W,
CLITOP,CEA_MDM_RX_TST_EN,0x5010D980,0,(8:8),R/W,
CLITOP,CEA_MDM_RX_DATA_IN_VAL,0x5010D980,0,(9:9),R/W,
CLITOP,CEA_MDM_RX_DATA_RDY_VAL,0x5010D980,0,(10:10),R/W,
CLITOP,CEA_MDM_RX_DATA_SOF_VAL,0x5010D980,0,(11:11),R/W,
CLITOP,CEA_MDM_RX_DATA_EOF_VAL,0x5010D980,0,(12:12),R/W,
CLITOP,CEA_MDM_RX_OP_RSTRT_VAL,0x5010D980,0,(13:13),R/W,
CLITOP,Reserved,0x5010D980,0,(14:31),R/W,
CLITOP,MDM_RXCTRLDFERST_SMPLCAPTR1,0x5010D984,0,(0:13),R,
CLITOP,MDM_RXCTRLDFERST_SMPLCAPTR2,0x5010D984,0,(14:27),R,
CLITOP,Reserved,0x5010D984,0,(28:31),R,
DFEMDMTOP,cic_deci_factor,0x5010C800,1,(0:2),R/W,
DFEMDMTOP,sml0_rx_cic_deci_factor,0x5010C800,1,(3:5),R/W,
DFEMDMTOP,dpctrl_cic_deci_data_out_rdy_sel,0x5010C800,1,(6:8),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_0,0x5010C804,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_1,0x5010C808,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_2,0x5010C80C,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_3,0x5010C810,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_4,0x5010C814,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_5,0x5010C818,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_6,0x5010C81C,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_dh_22_7,0x5010C820,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010C824,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C828,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C82C,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C830,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C834,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C838,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C83C,0,(0:31),R/W,
DFEMDMTOP,clkfreqmode,0x5010C840,2,(0:2),R/W,
DFEMDMTOP,adcmode,0x5010C840,0,(3:4),R/W,
DFEMDMTOP,polyphase_filter_sel,0x5010C840,3,(5:6),R/W,
DFEMDMTOP,dpctrl_adcintf_data_in_sel,0x5010C840,0,(7:8),R/W,
DFEMDMTOP,dpctrl_polyphase_data_in_sel,0x5010C840,0,(9:10),R/W,
DFEMDMTOP,dpctrl_notch_data_in_sel,0x5010C840,0,(11:14),R/W,
DFEMDMTOP,dpctrl_cic_deci_data_in_sel,0x5010C840,0,(15:18),R/W,
DFEMDMTOP,dpctrl_hpf_data_in_sel,0x5010C840,1,(19:22),R/W,
DFEMDMTOP,dpctrl_buffer_data_in_sel,0x5010C840,0,(23:26),R/W,
DFEMDMTOP,dpctrl_progout_data_out0_sel,0x5010C840,0,(27:30),R/W,
DFEMDMTOP,dpctrl_progout_data_out1_sel,0x5010C844,3,(0:3),R/W,
DFEMDMTOP,dpctrl_rssi_data_in_sel,0x5010C844,0,(4:6),R/W,
DFEMDMTOP,dpctrl_adcintf_data_out_rdy_sel,0x5010C844,0,(7:7),R/W,
DFEMDMTOP,dpctrl_hpf_data_out_rdy_sel,0x5010C844,0,(8:8),R/W,
DFEMDMTOP,dpctrl_notch_data_out_rdy_sel,0x5010C844,0,(9:9),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_dh_4,0x5010C848,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010C84C,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C850,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C854,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C858,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010C85C,0,(0:31),R/W,
DFEMDMTOP,notch_scaleconst1,0x5010C860,4145134,(0:23),R/W,
DFEMDMTOP,notch_coeff_b2_section1,0x5010C864,429638,(0:23),R/W,
DFEMDMTOP,notch_coeff_a2_section1,0x5010C868,440989,(0:23),R/W,
DFEMDMTOP,notch_coeff_a3_section1,0x5010C86C,4188801,(0:23),R/W,
DFEMDMTOP,notch_scaleconst2,0x5010C870,4145134,(0:23),R/W,
DFEMDMTOP,notch_coeff_b2_section2,0x5010C874,425126,(0:23),R/W,
DFEMDMTOP,notch_coeff_a2_section2,0x5010C878,413211,(0:23),R/W,
DFEMDMTOP,notch_coeff_a3_section2,0x5010C87C,4188800,(0:23),R/W,
DFEMDMTOP,notch_scaleconst3,0x5010C880,4278621,(0:23),R/W,
DFEMDMTOP,notch_coeff_b2_section3,0x5010C884,427382,(0:23),R/W,
DFEMDMTOP,notch_coeff_a2_section3,0x5010C888,426372,(0:23),R/W,
DFEMDMTOP,notch_coeff_a3_section3,0x5010C88C,4174478,(0:23),R/W,
DFEMDMTOP,polyphase_coeffphase1_1,0x5010C890,4,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_2,0x5010C894,262038,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_3,0x5010C898,261732,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_4,0x5010C89C,261455,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_5,0x5010C8A0,261734,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_6,0x5010C8A4,414,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_7,0x5010C8A8,736,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_8,0x5010C8AC,261934,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_9,0x5010C8B0,260936,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_10,0x5010C8B4,261843,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_11,0x5010C8B8,1734,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_12,0x5010C8BC,1370,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_13,0x5010C8C0,259937,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_14,0x5010C8C4,258449,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_15,0x5010C8C8,2536,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_16,0x5010C8CC,13577,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_17,0x5010C8D0,19192,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_18,0x5010C8D4,13577,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_19,0x5010C8D8,2536,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_20,0x5010C8DC,258449,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_21,0x5010C8E0,259937,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_22,0x5010C8E4,1370,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_23,0x5010C8E8,1734,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_24,0x5010C8EC,261843,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_25,0x5010C8F0,260936,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_26,0x5010C8F4,261934,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_27,0x5010C8F8,736,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_28,0x5010C8FC,414,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_29,0x5010C900,261734,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_30,0x5010C904,261455,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_31,0x5010C908,261732,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_32,0x5010C90C,262038,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase1_33,0x5010C910,4,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_1,0x5010C914,262124,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_2,0x5010C918,261957,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_3,0x5010C91C,261611,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_4,0x5010C920,261465,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_5,0x5010C924,261983,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_6,0x5010C928,642,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_7,0x5010C92C,548,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_8,0x5010C930,261493,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_9,0x5010C934,260981,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_10,0x5010C938,406,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_11,0x5010C93C,2039,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_12,0x5010C940,385,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_13,0x5010C944,258836,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_14,0x5010C948,259584,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_15,0x5010C94C,6127,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_16,0x5010C950,16554,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_17,0x5010C954,18510,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_18,0x5010C958,9954,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_19,0x5010C95C,261699,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_20,0x5010C960,258255,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_21,0x5010C964,261262,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_22,0x5010C968,1935,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_23,0x5010C96C,1137,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_24,0x5010C970,261292,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_25,0x5010C974,261129,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_26,0x5010C978,216,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_27,0x5010C97C,762,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_28,0x5010C980,128,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_29,0x5010C984,261557,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_30,0x5010C988,261511,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_31,0x5010C98C,261852,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_32,0x5010C990,262093,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase2_33,0x5010C994,0,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_1,0x5010C998,262093,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_2,0x5010C99C,261852,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_3,0x5010C9A0,261511,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_4,0x5010C9A4,261557,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_5,0x5010C9A8,128,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_6,0x5010C9AC,762,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_7,0x5010C9B0,216,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_8,0x5010C9B4,261129,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_9,0x5010C9B8,261292,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_10,0x5010C9BC,1137,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_11,0x5010C9C0,1935,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_12,0x5010C9C4,261262,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_13,0x5010C9C8,258255,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_14,0x5010C9CC,261699,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_15,0x5010C9D0,9954,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_16,0x5010C9D4,18510,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_17,0x5010C9D8,16554,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_18,0x5010C9DC,6127,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_19,0x5010C9E0,259584,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_20,0x5010C9E4,258836,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_21,0x5010C9E8,385,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_22,0x5010C9EC,2039,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_23,0x5010C9F0,406,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_24,0x5010C9F4,260981,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_25,0x5010C9F8,261493,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_26,0x5010C9FC,548,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_27,0x5010CA00,642,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_28,0x5010CA04,261983,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_29,0x5010CA08,261465,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_30,0x5010CA0C,261611,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_31,0x5010CA10,261957,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_32,0x5010CA14,262124,(0:17),R/W,
DFEMDMTOP,polyphase_coeffphase3_33,0x5010CA18,0,(0:17),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_dh_2,0x5010CA1C,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CA20,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA24,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA28,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA2C,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA30,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA34,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA38,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA3C,0,(0:31),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_0,0x5010CA40,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_1,0x5010CA44,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_2,0x5010CA48,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_3,0x5010CA4C,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_4,0x5010CA50,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_5,0x5010CA54,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_6,0x5010CA58,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_otp_22_7,0x5010CA5C,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CA60,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA64,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA68,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA6C,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA70,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA74,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA78,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CA7C,0,(0:31),R/W,
DFEMDMTOP,hpf_scaleconst1,0x5010CA80,4926112,(0:23),R/W,
DFEMDMTOP,hpf_coeff_b2_section1,0x5010CA84,8388611,(0:23),R/W,
DFEMDMTOP,hpf_coeff_a2_section1,0x5010CA88,8401763,(0:23),R/W,
DFEMDMTOP,hpf_coeff_a3_section1,0x5010CA8C,4181170,(0:23),R/W,
DFEMDMTOP,hpf_scaleconst2,0x5010CA90,220247,(0:23),R/W,
DFEMDMTOP,hpf_coeff_b2_section2,0x5010CA94,8388621,(0:23),R/W,
DFEMDMTOP,hpf_coeff_a2_section2,0x5010CA98,8390654,(0:23),R/W,
DFEMDMTOP,hpf_coeff_a3_section2,0x5010CA9C,4192277,(0:23),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_otp_7,0x5010CAA0,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CAA4,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAA8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAAC,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAB0,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAB4,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAB8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CABC,0,(0:31),R/W,
DFEMDMTOP,adcintf_gain_qpath,0x5010CAC0,32,(0:6),R/W,
DFEMDMTOP,adcintf_offset_qpath,0x5010CAC0,0,(7:18),R/W,
DFEMDMTOP,adcintf_gain_ipath,0x5010CAC0,32,(19:25),R/W,
DFEMDMTOP,adcintf_offset_ipath,0x5010CAC4,0,(0:11),R/W,
DFEMDMTOP,adc_intf_polarity,0x5010CAC4,1,(12:12),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_otp_2,0x5010CAC8,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CACC,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAD0,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAD4,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CAD8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CADC,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_buffidxp0,0x5010CAE0,32,(0:5),R/W,
DFEMDMTOP,rx0_energydtct_buffidxp1,0x5010CAE0,63,(6:11),R/W,
DFEMDMTOP,rx0_energydtct_buffidxp2,0x5010CAE0,0,(12:17),R/W,
DFEMDMTOP,rx0_energydtct_buffidxp3,0x5010CAE0,31,(18:23),R/W,
DFEMDMTOP,rx0_energydtct_buffdivfctr0,0x5010CAE0,5,(24:26),R/W,
DFEMDMTOP,rx0_energydtct_buffdivfctr1,0x5010CAE0,5,(27:29),R/W,
DFEMDMTOP,rx0_energydtct_buffdivfctr2,0x5010CAE4,0,(0:2),R/W,
DFEMDMTOP,rx0_energydtct_thrshld,0x5010CAE8,69905,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_buffidxpe,0x5010CAEC,28,(0:5),R/W,
DFEMDMTOP,rx0_energydtct_waitcnt,0x5010CAEC,31,(6:11),R/W,
DFEMDMTOP,rx0_energydtct_buffidxps0,0x5010CAEC,191,(12:19),R/W,
DFEMDMTOP,rx0_energydtct_unmod_est_bypass,0x5010CAEC,0,(20:20),R/W,
DFEMDMTOP,rx0_seqmtch_bypassbitsync,0x5010CAEC,1,(21:21),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec0,0x5010CAF0,23301,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec0,0x5010CAF4,20480,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec0,0x5010CAF8,1,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec0,0x5010CAF8,0,(8:15),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec0,0x5010CAF8,0,(16:16),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec0,0x5010CAF8,0,(17:18),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec0,0x5010CAF8,0,(19:20),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec0,0x5010CAF8,0,(21:22),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec0,0x5010CAF8,0,(23:23),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec0,0x5010CAF8,6,(24:26),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec0,0x5010CAF8,1,(27:29),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec1,0x5010CAFC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec1,0x5010CB00,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec1,0x5010CB04,1,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec1,0x5010CB04,0,(8:15),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec1,0x5010CB04,0,(16:16),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec1,0x5010CB04,0,(17:18),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec1,0x5010CB04,0,(19:20),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec1,0x5010CB04,0,(21:22),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec1,0x5010CB04,0,(23:23),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec1,0x5010CB04,0,(24:26),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec1,0x5010CB04,0,(27:29),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec2,0x5010CB08,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec2,0x5010CB0C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec2,0x5010CB10,1,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec2,0x5010CB10,0,(8:15),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec2,0x5010CB10,0,(16:17),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec2,0x5010CB10,0,(18:18),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec2,0x5010CB10,0,(19:20),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec2,0x5010CB10,0,(21:22),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec2,0x5010CB10,0,(23:23),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec2,0x5010CB10,0,(24:26),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec2,0x5010CB10,0,(27:29),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec3,0x5010CB14,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec3,0x5010CB18,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec3,0x5010CB1C,1,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec3,0x5010CB1C,0,(8:15),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec3,0x5010CB1C,0,(16:16),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec3,0x5010CB1C,0,(17:18),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec3,0x5010CB1C,0,(19:20),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec3,0x5010CB1C,0,(21:22),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec3,0x5010CB1C,0,(23:23),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec3,0x5010CB1C,0,(24:26),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec3,0x5010CB1C,0,(27:29),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec0,0x5010CB1C,0,(30:30),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec1,0x5010CB1C,0,(31:31),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec2,0x5010CB20,0,(0:0),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec3,0x5010CB20,0,(1:1),R/W,
DFEMDMTOP,rxloopctrl_t0,0x5010CB20,37,(2:17),R/W,
DFEMDMTOP,rxloopctrl_t1,0x5010CB24,16,(0:15),R/W,
DFEMDMTOP,rxloopctrl_t2,0x5010CB24,3,(16:31),R/W,
DFEMDMTOP,rxloopctrl_t3,0x5010CB28,63,(0:15),R/W,
DFEMDMTOP,rxloopctrl_tdferst,0x5010CB28,17,(16:31),R/W,
DFEMDMTOP,rxloopctrl_tbufsel_h,0x5010CB2C,0,(0:15),R/W,
DFEMDMTOP,rxloopctrl_tbufsel_l,0x5010CB2C,0,(16:31),R/W,
DFEMDMTOP,rxloopctrl_dfe_rst_sel,0x5010CB30,0,(0:0),R/W,
DFEMDMTOP,rxloopctrl_buf_h_sel,0x5010CB30,0,(1:2),R/W,
DFEMDMTOP,rxloopctrl_buf_l_sel,0x5010CB30,0,(3:4),R/W,
DFEMDMTOP,rx0_min_valid_bits,0x5010CB30,2,(5:10),R/W,
DFEMDMTOP,techselrx0,0x5010CB30,0,(11:15),R/W,
DFEMDMTOP,rx0_entry_point_mode,0x5010CB30,3,(16:17),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_0,0x5010CB34,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_1,0x5010CB38,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_2,0x5010CB3C,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_3,0x5010CB40,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_4,0x5010CB44,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_5,0x5010CB48,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_6,0x5010CB4C,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfe_mdm_dyn_rom_22_7,0x5010CB50,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CB54,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CB58,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CB5C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec0,0x5010CB60,4,(0:5),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec0,0x5010CB60,63,(6:11),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec1,0x5010CB60,0,(12:17),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec1,0x5010CB60,0,(18:23),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec2,0x5010CB60,0,(24:29),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec2,0x5010CB64,0,(0:5),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec3,0x5010CB64,0,(6:11),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec3,0x5010CB64,0,(12:17),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_g1_10,0x5010CB68,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CB6C,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CB70,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CB74,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CB78,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CB7C,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_0,0x5010CB80,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_1,0x5010CB84,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_2,0x5010CB88,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_3,0x5010CB8C,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_4,0x5010CB90,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_5,0x5010CB94,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_6,0x5010CB98,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_7,0x5010CB9C,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_8,0x5010CBA0,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_9,0x5010CBA4,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_10,0x5010CBA8,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_11,0x5010CBAC,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_12,0x5010CBB0,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_13,0x5010CBB4,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_14,0x5010CBB8,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_pattern_15,0x5010CBBC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_0,0x5010CBC0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_1,0x5010CBC4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_2,0x5010CBC8,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_3,0x5010CBCC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_4,0x5010CBD0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_5,0x5010CBD4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_6,0x5010CBD8,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_7,0x5010CBDC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_8,0x5010CBE0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_9,0x5010CBE4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_10,0x5010CBE8,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_11,0x5010CBEC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_12,0x5010CBF0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_13,0x5010CBF4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_14,0x5010CBF8,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_dscn_pattern_15,0x5010CBFC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_0,0x5010CC00,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_1,0x5010CC04,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_2,0x5010CC08,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_3,0x5010CC0C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_4,0x5010CC10,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_5,0x5010CC14,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_6,0x5010CC18,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_7,0x5010CC1C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_8,0x5010CC20,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_9,0x5010CC24,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_10,0x5010CC28,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_11,0x5010CC2C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_12,0x5010CC30,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_13,0x5010CC34,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_14,0x5010CC38,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern0_15,0x5010CC3C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_0,0x5010CC40,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_1,0x5010CC44,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_2,0x5010CC48,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_3,0x5010CC4C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_4,0x5010CC50,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_5,0x5010CC54,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_6,0x5010CC58,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_7,0x5010CC5C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_8,0x5010CC60,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_9,0x5010CC64,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_10,0x5010CC68,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_11,0x5010CC6C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_12,0x5010CC70,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_13,0x5010CC74,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_14,0x5010CC78,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_getphase_pattern1_15,0x5010CC7C,0,(0:31),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_g2_10,0x5010CC80,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CC84,65535,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CC88,65535,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CC8C,65535,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec4,0x5010CC90,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec4,0x5010CC94,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec4,0x5010CC98,0,(0:5),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec4,0x5010CC98,0,(6:11),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec4,0x5010CC98,0,(12:17),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec4,0x5010CC98,1,(18:25),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec4,0x5010CC9C,0,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec4,0x5010CC9C,0,(8:8),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec4,0x5010CC9C,0,(9:10),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec4,0x5010CC9C,0,(11:12),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec4,0x5010CC9C,0,(13:14),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec4,0x5010CC9C,0,(15:15),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec4,0x5010CC9C,0,(16:18),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec4,0x5010CC9C,0,(19:21),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec4,0x5010CC9C,0,(22:22),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec5,0x5010CCA0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec5,0x5010CCA4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec5,0x5010CCA8,0,(0:5),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec5,0x5010CCA8,0,(6:11),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec5,0x5010CCA8,0,(12:17),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec5,0x5010CCA8,1,(18:25),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec5,0x5010CCAC,0,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec5,0x5010CCAC,0,(8:8),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec5,0x5010CCAC,0,(9:10),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec5,0x5010CCAC,0,(11:12),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec5,0x5010CCAC,0,(13:14),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec5,0x5010CCAC,0,(15:15),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec5,0x5010CCAC,0,(16:18),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec5,0x5010CCAC,0,(19:21),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec5,0x5010CCAC,0,(22:22),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec6,0x5010CCB0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec6,0x5010CCB4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec6,0x5010CCB8,0,(0:5),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec6,0x5010CCB8,0,(6:11),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec6,0x5010CCB8,0,(12:17),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec6,0x5010CCB8,1,(18:25),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec6,0x5010CCBC,0,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec6,0x5010CCBC,0,(8:8),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec6,0x5010CCBC,0,(9:10),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec6,0x5010CCBC,0,(11:12),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec6,0x5010CCBC,0,(13:14),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec6,0x5010CCBC,0,(15:15),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec6,0x5010CCBC,0,(16:18),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec6,0x5010CCBC,0,(19:21),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec6,0x5010CCBC,0,(22:22),R/W,
DFEMDMTOP,rx0_seqmtch_thrshld_sec7,0x5010CCC0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddz_sec7,0x5010CCC4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec7,0x5010CCC8,0,(0:5),R/W,
DFEMDMTOP,rx0_seqmtch_bl_sec7,0x5010CCC8,0,(6:11),R/W,
DFEMDMTOP,rx0_seqmtch_bh_sec7,0x5010CCC8,0,(12:17),R/W,
DFEMDMTOP,rx0_seqmtch_mincount_sec7,0x5010CCC8,1,(18:25),R/W,
DFEMDMTOP,rx0_seqmtch_maxcount_sec7,0x5010CCCC,0,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_ignrerr_sec7,0x5010CCCC,0,(8:8),R/W,
DFEMDMTOP,rx0_seqmtch_invldbit_val_sec7,0x5010CCCC,0,(9:10),R/W,
DFEMDMTOP,rx0_seqmtch_invrbit_val_sec7,0x5010CCCC,0,(11:12),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqval_sec7,0x5010CCCC,0,(13:14),R/W,
DFEMDMTOP,rx0_seqmtch_bitseqsel_sec7,0x5010CCCC,0,(15:15),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr0_sec7,0x5010CCCC,0,(16:18),R/W,
DFEMDMTOP,rx0_seqmtch_buffdivfctr1_sec7,0x5010CCCC,0,(19:21),R/W,
DFEMDMTOP,rx0_seqmtch_chkphaseinv_sec7,0x5010CCCC,0,(22:22),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_g1_9,0x5010CCD0,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CCD4,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CCD8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CCDC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_nsection_frame,0x5010CCE0,0,(0:2),R/W,
DFEMDMTOP,rx0_seqmtch_nsection_pattern,0x5010CCE0,0,(3:5),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_g2_9,0x5010CCE4,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CCE8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CCEC,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CCF0,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CCF4,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CCF8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CCFC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec0,0x5010CD00,63,(0:5),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec1,0x5010CD00,0,(6:11),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec2,0x5010CD00,0,(12:17),R/W,
DFEMDMTOP,rx0_seqmtch_corrlen_sec3,0x5010CD00,0,(18:23),R/W,
DFEMDMTOP,rx0_seqmtch_phaselen,0x5010CD00,4,(24:26),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_6,0x5010CD04,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CD08,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CD0C,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CD10,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CD14,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CD18,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CD1C,0,(0:31),R/W,
DFEMDMTOP,rx_seqmtch_techbce_waitcnt1,0x5010CD20,0,(0:7),R/W,
DFEMDMTOP,techbavoiddzbit,0x5010CD20,0,(8:11),R/W,
DFEMDMTOP,techbavoiddzsmple,0x5010CD20,0,(12:21),R/W,
DFEMDMTOP,techbce_minlen_sec1,0x5010CD20,0,(22:31),R/W,
DFEMDMTOP,techbce_maxlen_sec1,0x5010CD24,0,(0:9),R/W,
DFEMDMTOP,techbce_minlen_sec2,0x5010CD24,0,(10:19),R/W,
DFEMDMTOP,techbce_maxlen_sec2,0x5010CD24,0,(20:29),R/W,
DFEMDMTOP,techbce_minlen_sec4,0x5010CD28,0,(0:9),R/W,
DFEMDMTOP,techbce_maxlen_sec4,0x5010CD28,0,(10:19),R/W,
DFEMDMTOP,techbce_minlen_sec5,0x5010CD28,0,(20:29),R/W,
DFEMDMTOP,techbce_maxlen_sec5,0x5010CD2C,0,(0:9),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_5,0x5010CD30,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CD34,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CD38,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CD3C,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_0,0x5010CD40,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_1,0x5010CD44,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_2,0x5010CD48,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_3,0x5010CD4C,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_4,0x5010CD50,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_5,0x5010CD54,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_6,0x5010CD58,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_7,0x5010CD5C,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_8,0x5010CD60,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_9,0x5010CD64,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_10,0x5010CD68,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_11,0x5010CD6C,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_12,0x5010CD70,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_13,0x5010CD74,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_14,0x5010CD78,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_pattern_15,0x5010CD7C,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_buffidxp0,0x5010CD80,0,(0:5),R/W,
DFEMDMTOP,rx1_energydtct_buffidxp1,0x5010CD80,0,(6:11),R/W,
DFEMDMTOP,rx1_energydtct_buffidxp2,0x5010CD80,0,(12:17),R/W,
DFEMDMTOP,rx1_energydtct_buffidxp3,0x5010CD80,0,(18:23),R/W,
DFEMDMTOP,rx1_energydtct_buffdivfctr0,0x5010CD80,0,(24:26),R/W,
DFEMDMTOP,rx1_energydtct_buffdivfctr1,0x5010CD80,0,(27:29),R/W,
DFEMDMTOP,rx1_energydtct_buffdivfctr2,0x5010CD84,0,(0:2),R/W,
DFEMDMTOP,rx1_energydtct_thrshld,0x5010CD88,0,(0:31),R/W,
DFEMDMTOP,rx1_energydtct_buffidxpe,0x5010CD8C,0,(0:5),R/W,
DFEMDMTOP,rx1_energydtct_waitcnt,0x5010CD8C,0,(6:11),R/W,
DFEMDMTOP,rx1_energydtct_buffidxps0,0x5010CD8C,0,(12:19),R/W,
DFEMDMTOP,rx1_energydtct_unmod_est_bypass,0x5010CD8C,0,(20:20),R/W,
DFEMDMTOP,rx1_energydtct_ext_dc_i,0x5010CD90,0,(0:13),R/W,
DFEMDMTOP,rx1_energydtct_ext_dc_q,0x5010CD90,0,(14:27),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_0,0x5010CD94,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_1,0x5010CD98,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_2,0x5010CD9C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_3,0x5010CDA0,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_4,0x5010CDA4,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_5,0x5010CDA8,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_6,0x5010CDAC,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_7,0x5010CDB0,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_8,0x5010CDB4,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_9,0x5010CDB8,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_10,0x5010CDBC,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_11,0x5010CDC0,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_12,0x5010CDC4,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_13,0x5010CDC8,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_14,0x5010CDCC,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_dscn_pattern_15,0x5010CDD0,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_0,0x5010CDD4,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_1,0x5010CDD8,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_2,0x5010CDDC,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_3,0x5010CDE0,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_4,0x5010CDE4,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_5,0x5010CDE8,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_6,0x5010CDEC,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_7,0x5010CDF0,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_8,0x5010CDF4,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_9,0x5010CDF8,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_10,0x5010CDFC,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_11,0x5010CE00,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_12,0x5010CE04,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_13,0x5010CE08,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_14,0x5010CE0C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern0_15,0x5010CE10,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_0,0x5010CE14,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_1,0x5010CE18,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_2,0x5010CE1C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_3,0x5010CE20,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_4,0x5010CE24,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_5,0x5010CE28,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_6,0x5010CE2C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_7,0x5010CE30,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_8,0x5010CE34,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_9,0x5010CE38,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_10,0x5010CE3C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_11,0x5010CE40,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_12,0x5010CE44,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_13,0x5010CE48,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_14,0x5010CE4C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_getphase_pattern1_15,0x5010CE50,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_nsection_frame,0x5010CE54,0,(0:2),R/W,
DFEMDMTOP,rx1_seqmtch_nsection_pattern,0x5010CE54,0,(3:5),R/W,
DFEMDMTOP,rx1_seqmtch_phaselen,0x5010CE54,0,(6:8),R/W,
DFEMDMTOP,rx1_seqmtch_bypassbitsync,0x5010CE54,0,(9:9),R/W,
DFEMDMTOP,rx1_seqmtch_techfbitseqval,0x5010CE54,0,(10:25),R/W,
DFEMDMTOP,rx1_seqmtch_thrshld_sec0,0x5010CE58,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_thrshlddz_sec0,0x5010CE5C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_corrlen_sec0,0x5010CE60,0,(0:5),R/W,
DFEMDMTOP,rx1_seqmtch_bl_sec0,0x5010CE60,0,(6:11),R/W,
DFEMDMTOP,rx1_seqmtch_bh_sec0,0x5010CE60,0,(12:17),R/W,
DFEMDMTOP,rx1_seqmtch_mincount_sec0,0x5010CE60,0,(18:25),R/W,
DFEMDMTOP,rx1_seqmtch_maxcount_sec0,0x5010CE64,0,(0:7),R/W,
DFEMDMTOP,rx1_seqmtch_ignrerr_sec0,0x5010CE64,0,(8:8),R/W,
DFEMDMTOP,rx1_seqmtch_invldbit_val_sec0,0x5010CE64,0,(9:10),R/W,
DFEMDMTOP,rx1_seqmtch_invrbit_val_sec0,0x5010CE64,0,(11:12),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqval_sec0,0x5010CE64,0,(13:14),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqsel_sec0,0x5010CE64,0,(15:15),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr0_sec0,0x5010CE64,0,(16:18),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr1_sec0,0x5010CE64,0,(19:21),R/W,
DFEMDMTOP,rx1_seqmtch_chkphaseinv_sec0,0x5010CE64,0,(22:22),R/W,
DFEMDMTOP,rx1_seqmtch_thrshld_sec1,0x5010CE68,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_thrshlddz_sec1,0x5010CE6C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_corrlen_sec1,0x5010CE70,0,(0:5),R/W,
DFEMDMTOP,rx1_seqmtch_bl_sec1,0x5010CE70,0,(6:11),R/W,
DFEMDMTOP,rx1_seqmtch_bh_sec1,0x5010CE70,0,(12:17),R/W,
DFEMDMTOP,rx1_seqmtch_mincount_sec1,0x5010CE70,0,(18:25),R/W,
DFEMDMTOP,rx1_seqmtch_maxcount_sec1,0x5010CE74,0,(0:7),R/W,
DFEMDMTOP,rx1_seqmtch_ignrerr_sec1,0x5010CE74,0,(8:8),R/W,
DFEMDMTOP,rx1_seqmtch_invldbit_val_sec1,0x5010CE74,0,(9:10),R/W,
DFEMDMTOP,rx1_seqmtch_invrbit_val_sec1,0x5010CE74,0,(11:12),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqval_sec1,0x5010CE74,0,(13:14),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqsel_sec1,0x5010CE74,0,(15:15),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr0_sec1,0x5010CE74,0,(16:18),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr1_sec1,0x5010CE74,0,(19:21),R/W,
DFEMDMTOP,rx1_seqmtch_chkphaseinv_sec1,0x5010CE74,0,(22:22),R/W,
DFEMDMTOP,rx1_seqmtch_thrshld_sec2,0x5010CE78,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_thrshlddz_sec2,0x5010CE7C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_corrlen_sec2,0x5010CE80,0,(0:5),R/W,
DFEMDMTOP,rx1_seqmtch_bl_sec2,0x5010CE80,0,(6:11),R/W,
DFEMDMTOP,rx1_seqmtch_bh_sec2,0x5010CE80,0,(12:17),R/W,
DFEMDMTOP,rx1_seqmtch_mincount_sec2,0x5010CE80,0,(18:25),R/W,
DFEMDMTOP,rx1_seqmtch_maxcount_sec2,0x5010CE84,0,(0:7),R/W,
DFEMDMTOP,rx1_seqmtch_ignrerr_sec2,0x5010CE84,0,(8:8),R/W,
DFEMDMTOP,rx1_seqmtch_invldbit_val_sec2,0x5010CE84,0,(9:10),R/W,
DFEMDMTOP,rx1_seqmtch_invrbit_val_sec2,0x5010CE84,0,(11:12),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqval_sec2,0x5010CE84,0,(13:14),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqsel_sec2,0x5010CE84,0,(15:15),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr0_sec2,0x5010CE84,0,(16:18),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr1_sec2,0x5010CE84,0,(19:21),R/W,
DFEMDMTOP,rx1_seqmtch_chkphaseinv_sec2,0x5010CE84,0,(22:22),R/W,
DFEMDMTOP,rx1_seqmtch_thrshld_sec3,0x5010CE88,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_thrshlddz_sec3,0x5010CE8C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_corrlen_sec3,0x5010CE90,0,(0:5),R/W,
DFEMDMTOP,rx1_seqmtch_bl_sec3,0x5010CE90,0,(6:11),R/W,
DFEMDMTOP,rx1_seqmtch_bh_sec3,0x5010CE90,0,(12:17),R/W,
DFEMDMTOP,rx1_seqmtch_mincount_sec3,0x5010CE90,0,(18:25),R/W,
DFEMDMTOP,rx1_seqmtch_maxcount_sec3,0x5010CE94,0,(0:7),R/W,
DFEMDMTOP,rx1_seqmtch_ignrerr_sec3,0x5010CE94,0,(8:8),R/W,
DFEMDMTOP,rx1_seqmtch_invldbit_val_sec3,0x5010CE94,0,(9:10),R/W,
DFEMDMTOP,rx1_seqmtch_invrbit_val_sec3,0x5010CE94,0,(11:12),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqval_sec3,0x5010CE94,0,(13:14),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqsel_sec3,0x5010CE94,0,(15:15),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr0_sec3,0x5010CE94,0,(16:18),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr1_sec3,0x5010CE94,0,(19:21),R/W,
DFEMDMTOP,rx1_seqmtch_chkphaseinv_sec3,0x5010CE94,0,(22:22),R/W,
DFEMDMTOP,rx1_seqmtch_thrshld_sec4,0x5010CE98,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_thrshlddz_sec4,0x5010CE9C,0,(0:31),R/W,
DFEMDMTOP,rx1_seqmtch_corrlen_sec4,0x5010CEA0,0,(0:5),R/W,
DFEMDMTOP,rx1_seqmtch_bl_sec4,0x5010CEA0,0,(6:11),R/W,
DFEMDMTOP,rx1_seqmtch_bh_sec4,0x5010CEA0,0,(12:17),R/W,
DFEMDMTOP,rx1_seqmtch_mincount_sec4,0x5010CEA0,0,(18:25),R/W,
DFEMDMTOP,rx1_seqmtch_maxcount_sec4,0x5010CEA4,0,(0:7),R/W,
DFEMDMTOP,rx1_seqmtch_ignrerr_sec4,0x5010CEA4,0,(8:8),R/W,
DFEMDMTOP,rx1_seqmtch_invldbit_val_sec4,0x5010CEA4,0,(9:10),R/W,
DFEMDMTOP,rx1_seqmtch_invrbit_val_sec4,0x5010CEA4,0,(11:12),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqval_sec4,0x5010CEA4,0,(13:14),R/W,
DFEMDMTOP,rx1_seqmtch_bitseqsel_sec4,0x5010CEA4,0,(15:15),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr0_sec4,0x5010CEA4,0,(16:18),R/W,
DFEMDMTOP,rx1_seqmtch_buffdivfctr1_sec4,0x5010CEA4,0,(19:21),R/W,
DFEMDMTOP,rx1_seqmtch_chkphaseinv_sec4,0x5010CEA4,0,(22:22),R/W,
DFEMDMTOP,rx1_min_valid_bits,0x5010CEA4,0,(23:28),R/W,
DFEMDMTOP,multirxmodeen,0x5010CEA4,0,(29:29),R/W,
DFEMDMTOP,techselrx1,0x5010CEA8,0,(0:4),R/W,
DFEMDMTOP,rx1_entry_point_mode,0x5010CEA8,3,(5:6),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_4,0x5010CEAC,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CEB0,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CEB4,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CEB8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CEBC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_techv_hamming_en,0x5010CEC0,0,(0:0),R/W,
DFEMDMTOP,rx0_seqmtch_techv_hamming_thrshld,0x5010CEC0,0,(1:4),R/W,
DFEMDMTOP,rx0_seqmtch_techv_superbitseq_1,0x5010CEC0,0,(5:12),R/W,
DFEMDMTOP,rx0_seqmtch_techv_superbitseq_2,0x5010CEC0,0,(13:20),R/W,
DFEMDMTOP,rx0_seqmtch_techv_superbitseq_3,0x5010CEC0,0,(21:28),R/W,
DFEMDMTOP,rx0_seqmtch_techv_eof_seq,0x5010CEC4,0,(0:7),R/W,
DFEMDMTOP,rx0_seqmtch_techv_superbitlen,0x5010CEC4,0,(8:9),R/W,
DFEMDMTOP,rx0_seqmtch_techv_eof_len,0x5010CEC4,0,(10:11),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec0,0x5010CEC4,0,(12:14),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec1,0x5010CEC4,0,(15:17),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec2,0x5010CEC4,0,(18:20),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec3,0x5010CEC4,0,(21:23),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec4,0x5010CEC4,0,(24:26),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec5,0x5010CEC4,0,(27:29),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec6,0x5010CEC8,0,(0:2),R/W,
DFEMDMTOP,rx0_seqmtch_pattern_sel_sec7,0x5010CEC8,0,(3:5),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_g1_2,0x5010CECC,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CED0,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CED4,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CED8,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CEDC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_0,0x5010CEE0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_1,0x5010CEE4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_2,0x5010CEE8,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_3,0x5010CEEC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_4,0x5010CEF0,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_5,0x5010CEF4,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_6,0x5010CEF8,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_7,0x5010CEFC,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_8,0x5010CF00,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_9,0x5010CF04,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_10,0x5010CF08,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_11,0x5010CF0C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_12,0x5010CF10,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_13,0x5010CF14,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_14,0x5010CF18,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_clsn_pattern_15,0x5010CF1C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_chkcollision,0x5010CF20,0,(0:0),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_g2_2,0x5010CF24,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CF28,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CF2C,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CF30,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CF34,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CF38,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CF3C,0,(0:31),R/W,
DFEMDMTOP,rx0_seqmtch_techfbitseqval,0x5010CF40,0,(0:15),R/W,
DFEMDMTOP,spare_dfe_mdm_dyn_rom_g3_2,0x5010CF44,65535,(0:31),R/W,Spare
DFEMDMTOP,reserved,0x5010CF48,0,(0:31),R/W,
DFEMDMTOP,reserved,0x5010CF4C,0,(0:31),R/W,
DFEMDMTOP,rx0_energydtct_ext_dc_i,0x5010CF50,0,(0:13),R/W,
DFEMDMTOP,reserved,0x5010CF50,0,(14:15),R/W,
DFEMDMTOP,rx0_energydtct_ext_dc_q,0x5010CF50,0,(16:29),R/W,
DFEMDMTOP,reserved,0x5010CF50,0,(30:31),R/W,
DFEMDMTOP,rssi_en,0x5010CF54,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF54,0,(1:7),R/W,
DFEMDMTOP,rssi_dc_comp_avg_size,0x5010CF54,0,(8:11),R/W,
DFEMDMTOP,reserved,0x5010CF54,0,(12:15),R/W,
DFEMDMTOP,rssi_pwr_avg_size,0x5010CF54,0,(16:19),R/W,
DFEMDMTOP,reserved,0x5010CF54,0,(20:23),R/W,
DFEMDMTOP,rssi_dc_ofst_src,0x5010CF54,0,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF54,0,(25:31),R/W,
DFEMDMTOP,rssi_in_dc_ofst_ext_i,0x5010CF58,0,(0:11),R/W,
DFEMDMTOP,reserved,0x5010CF58,0,(12:15),R/W,
DFEMDMTOP,rssi_in_dc_ofst_ext_q,0x5010CF58,0,(16:27),R/W,
DFEMDMTOP,reserved,0x5010CF58,0,(28:31),R/W,
DFEMDMTOP,dpctrl_dma1_data_in_sel,0x5010CF5C,0,(0:3),R/W,
DFEMDMTOP,reserved,0x5010CF5C,0,(4:7),R/W,
DFEMDMTOP,dpctrl_dma1_data_out_sel,0x5010CF5C,0,(8:10),R/W,
DFEMDMTOP,reserved,0x5010CF5C,0,(11:15),R/W,
DFEMDMTOP,dpctrl_dma2_data_in_sel,0x5010CF5C,0,(16:19),R/W,
DFEMDMTOP,reserved,0x5010CF5C,0,(20:23),R/W,
DFEMDMTOP,dpctrl_dma2_data_out_sel,0x5010CF5C,0,(24:26),R/W,
DFEMDMTOP,reserved,0x5010CF5C,0,(27:31),R/W,
DFEMDMTOP,bufferlen,0x5010CF60,63,(0:6),R/W,
DFEMDMTOP,reserved,0x5010CF60,0,(7:7),R/W,
DFEMDMTOP,mdmbuffer_datain_sel,0x5010CF60,1,(8:9),R/W,
DFEMDMTOP,reserved,0x5010CF60,0,(10:15),R/W,
DFEMDMTOP,rxloopctrl_bufferselmode,0x5010CF60,0,(16:19),R/W,
DFEMDMTOP,reserved,0x5010CF60,0,(20:23),R/W,
DFEMDMTOP,dpctrl_en,0x5010CF60,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF60,0,(25:31),R/W,
DFEMDMTOP,dpctrl_rst,0x5010CF64,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF64,0,(1:7),R/W,
DFEMDMTOP,adcintf_en,0x5010CF64,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF64,0,(9:15),R/W,
DFEMDMTOP,adcintf_rst,0x5010CF64,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF64,0,(17:23),R/W,
DFEMDMTOP,ipath_en,0x5010CF64,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF64,0,(25:31),R/W,
DFEMDMTOP,ipath_rst,0x5010CF68,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF68,0,(1:7),R/W,
DFEMDMTOP,qpath_en,0x5010CF68,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF68,0,(9:15),R/W,
DFEMDMTOP,qpath_rst,0x5010CF68,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF68,0,(17:23),R/W,
DFEMDMTOP,hpf_en_ipath,0x5010CF68,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF68,0,(25:31),R/W,
DFEMDMTOP,hpf_rst_ipath,0x5010CF6C,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF6C,0,(1:7),R/W,
DFEMDMTOP,notch_en_ipath,0x5010CF6C,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF6C,0,(9:15),R/W,
DFEMDMTOP,notch_rst_ipath,0x5010CF6C,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF6C,0,(17:23),R/W,
DFEMDMTOP,cic_deci_en_ipath,0x5010CF6C,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF6C,0,(25:31),R/W,
DFEMDMTOP,cic_deci_rst_ipath,0x5010CF70,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF70,0,(1:7),R/W,
DFEMDMTOP,polyphase_en_ipath,0x5010CF70,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF70,0,(9:15),R/W,
DFEMDMTOP,polyphase_rst_ipath,0x5010CF70,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF70,0,(17:23),R/W,
DFEMDMTOP,hpf_en_qpath,0x5010CF70,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF70,0,(25:31),R/W,
DFEMDMTOP,hpf_rst_qpath,0x5010CF74,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF74,0,(1:7),R/W,
DFEMDMTOP,notch_en_qpath,0x5010CF74,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF74,0,(9:15),R/W,
DFEMDMTOP,notch_rst_qpath,0x5010CF74,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF74,0,(17:23),R/W,
DFEMDMTOP,cic_deci_en_qpath,0x5010CF74,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF74,0,(25:31),R/W,
DFEMDMTOP,cic_deci_rst_qpath,0x5010CF78,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF78,0,(1:7),R/W,
DFEMDMTOP,polyphase_en_qpath,0x5010CF78,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF78,0,(9:15),R/W,
DFEMDMTOP,polyphase_rst_qpath,0x5010CF78,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF78,0,(17:23),R/W,
DFEMDMTOP,mdmstrt,0x5010CF78,0,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF78,0,(25:31),R/W,
DFEMDMTOP,rxloopctrl_mode,0x5010CF7C,0,(0:1),R/W,
DFEMDMTOP,reserved,0x5010CF7C,0,(2:7),R/W,
DFEMDMTOP,rx0_framedtct_energydtct_en,0x5010CF7C,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF7C,0,(9:15),R/W,
DFEMDMTOP,rx0_framedtct_energydtct_rst,0x5010CF7C,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF7C,0,(17:23),R/W,
DFEMDMTOP,rx0_framedtct_seqmtch_en,0x5010CF7C,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF7C,0,(25:31),R/W,
DFEMDMTOP,rx0_framedtct_seqmtch_rst,0x5010CF80,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF80,0,(1:7),R/W,
DFEMDMTOP,rx0_framedtct_en,0x5010CF80,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF80,0,(9:15),R/W,
DFEMDMTOP,rx0_framedtct_rst,0x5010CF80,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF80,0,(17:23),R/W,
DFEMDMTOP,rx0_patterndtct_seqmtch_en,0x5010CF80,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF80,0,(25:31),R/W,
DFEMDMTOP,rx0_patterndtct_seqmtch_rst,0x5010CF84,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF84,0,(1:7),R/W,
DFEMDMTOP,rx0_patterndtct_en,0x5010CF84,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF84,0,(9:15),R/W,
DFEMDMTOP,rx0_patterndtct_rst,0x5010CF84,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF84,0,(17:23),R/W,
DFEMDMTOP,rx1_framedtct_energydtct_en,0x5010CF84,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF84,0,(25:31),R/W,
DFEMDMTOP,rx1_framedtct_energydtct_rst,0x5010CF88,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF88,0,(1:7),R/W,
DFEMDMTOP,rx1_framedtct_seqmtch_en,0x5010CF88,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF88,0,(9:15),R/W,
DFEMDMTOP,rx1_framedtct_seqmtch_rst,0x5010CF88,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF88,0,(17:23),R/W,
DFEMDMTOP,rx1_framedtct_en,0x5010CF88,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF88,0,(25:31),R/W,
DFEMDMTOP,rx1_framedtct_rst,0x5010CF8C,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF8C,0,(1:7),R/W,
DFEMDMTOP,rx1_patterndtct_seqmtch_en,0x5010CF8C,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF8C,0,(9:15),R/W,
DFEMDMTOP,rx1_patterndtct_seqmtch_rst,0x5010CF8C,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF8C,0,(17:23),R/W,
DFEMDMTOP,rx1_patterndtct_en,0x5010CF8C,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF8C,0,(25:31),R/W,
DFEMDMTOP,rx1_patterndtct_rst,0x5010CF90,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF90,0,(1:7),R/W,
DFEMDMTOP,buf_en_ipath,0x5010CF90,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF90,0,(9:15),R/W,
DFEMDMTOP,buf_rst_ipath,0x5010CF90,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF90,0,(17:23),R/W,
DFEMDMTOP,buf_en_qpath,0x5010CF90,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF90,0,(25:31),R/W,
DFEMDMTOP,buf_rst_qpath,0x5010CF94,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF94,0,(1:7),R/W,
DFEMDMTOP,meanstg_en,0x5010CF94,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF94,0,(9:15),R/W,
DFEMDMTOP,meanstg_rst,0x5010CF94,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF94,0,(17:23),R/W,
DFEMDMTOP,corrstg_en,0x5010CF94,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF94,0,(25:31),R/W,
DFEMDMTOP,corrstg_rst,0x5010CF98,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF98,0,(1:7),R/W,
DFEMDMTOP,dcsnstg_en,0x5010CF98,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF98,0,(9:15),R/W,
DFEMDMTOP,dcsnstg_rst,0x5010CF98,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF98,0,(17:23),R/W,
DFEMDMTOP,phsgtstg_en,0x5010CF98,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF98,0,(25:31),R/W,
DFEMDMTOP,phsgtstg_rst,0x5010CF9C,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CF9C,0,(1:7),R/W,
DFEMDMTOP,phscrrtstg_en,0x5010CF9C,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CF9C,0,(9:15),R/W,
DFEMDMTOP,phscrrtstg_rst,0x5010CF9C,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CF9C,0,(17:23),R/W,
DFEMDMTOP,rxloopctrl_en,0x5010CF9C,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CF9C,0,(25:31),R/W,
DFEMDMTOP,rxloopctrl_rst,0x5010CFA0,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFA0,0,(1:7),R/W,
DFEMDMTOP,mdmmultirx_en,0x5010CFA0,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFA0,0,(9:15),R/W,
DFEMDMTOP,mdmmultirx_rst,0x5010CFA0,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFA0,0,(17:23),R/W,
DFEMDMTOP,dfetop_en,0x5010CFA0,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFA0,0,(25:31),R/W,
DFEMDMTOP,dfetop_rst,0x5010CFA4,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFA4,0,(1:7),R/W,
DFEMDMTOP,mdmtop_en,0x5010CFA4,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFA4,0,(9:15),R/W,
DFEMDMTOP,mdmtop_rst,0x5010CFA4,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFA4,0,(17:23),R/W,
DFEMDMTOP,cli_intf_ctrl_en,0x5010CFA4,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFA4,0,(25:31),R/W,
DFEMDMTOP,cli_intf_ctrl_rst,0x5010CFA8,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFA8,0,(1:7),R/W,
DFEMDMTOP,mdm_dma1_en,0x5010CFA8,1,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFA8,0,(9:15),R/W,
DFEMDMTOP,mdm_dma1_rst,0x5010CFA8,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFA8,0,(17:23),R/W,
DFEMDMTOP,mdm_dma2_en,0x5010CFA8,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFA8,0,(25:31),R/W,
DFEMDMTOP,mdm_dma2_rst,0x5010CFAC,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFAC,0,(1:31),R/W,
DFEMDMTOP,mdmbuffer_datain_ipath,0x5010CFB0,0,(0:15),R/W,
DFEMDMTOP,mdmbuffer_datain_qpath,0x5010CFB0,0,(16:31),R/W,
DFEMDMTOP,spare_dfemdm_rom0,0x5010CFB4,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfemdm_rom1,0x5010CFB8,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfemdm_rom2,0x5010CFBC,65535,(0:31),R/W,Spare
DFEMDMTOP,spare_dfemdm_rom3,0x5010CFC0,65535,(0:31),R/W,Spare
DFEMDMTOP,cli_intf_framedtct_bits_mode,0x5010CFC4,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFC4,0,(1:7),R/W,
DFEMDMTOP,mdm_op_mode_sel,0x5010CFC4,0,(8:9),R/W,
DFEMDMTOP,reserved,0x5010CFC4,0,(10:15),R/W,
DFEMDMTOP,simultaneous_rx,0x5010CFC4,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFC4,0,(17:23),R/W,
DFEMDMTOP,reserved,0x5010CFC4,0,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFC4,0,(25:31),R/W,
DFEMDMTOP,rxloopctrl_periodic_time_thrshld,0x5010CFC8,0,(0:15),R/W,
DFEMDMTOP,trx_rx_adc_clb_strt,0x5010CFC8,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFC8,0,(17:23),R/W,
DFEMDMTOP,dfemdm_dmuxsel1,0x5010CFCC,0,(0:8),R/W,
DFEMDMTOP,dfemdm_dmuxsel2,0x5010CFCC,0,(9:17),R/W,
DFEMDMTOP,dfemdm_dmuxsel3,0x5010CFCC,0,(18:26),R/W,
DFEMDMTOP,dfemdm_dmuxsel4,0x5010CFD0,0,(0:8),R/W,
DFEMDMTOP,reserved,0x5010CFD4,0,(0:31),R/W,
DFEMDMTOP,dfemdm_dmuxouten,0x5010CFD8,0,(0:3),R/W,
DFEMDMTOP,reserved,0x5010CFD8,0,(4:7),R/W,
DFEMDMTOP,pausedtctmodeen,0x5010CFD8,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFD8,0,(9:15),R/W,
DFEMDMTOP,mdm_pmnt_reset,0x5010CFD8,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFD8,0,(17:23),R/W,
DFEMDMTOP,mdm_pmnt_en,0x5010CFD8,0,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFD8,0,(25:31),R/W,
DFEMDMTOP,mdm_pmnt_start,0x5010CFDC,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFDC,0,(1:7),R/W,
DFEMDMTOP,mdm_pmnt_rtnbtimeouten,0x5010CFDC,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFDC,0,(9:15),R/W,
DFEMDMTOP,mdm_pmnt_purisphsprg,0x5010CFDC,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFDC,0,(17:23),R/W,
DFEMDMTOP,mdm_pmnt_purisampprg,0x5010CFDC,0,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFDC,0,(25:31),R/W,
DFEMDMTOP,mdm_pmnt_pufalphsprg,0x5010CFE0,1,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFE0,0,(1:7),R/W,
DFEMDMTOP,mdm_pmnt_pufalampprg,0x5010CFE0,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFE0,0,(9:15),R/W,
DFEMDMTOP,mdm_pmnt_pufalprg,0x5010CFE0,0,(16:17),R/W,
DFEMDMTOP,reserved,0x5010CFE0,0,(18:23),R/W,
DFEMDMTOP,mdm_pmnt_afterpuphstimeout,0x5010CFE4,32,(0:11),R/W,
DFEMDMTOP,reserved,0x5010CFE4,0,(12:15),R/W,
DFEMDMTOP,mdm_pmnt_afterpuamptimeout,0x5010CFE4,32,(16:27),R/W,
DFEMDMTOP,reserved,0x5010CFE4,0,(28:31),R/W,
DFEMDMTOP,mdm_pmnt_puwidthtimeout,0x5010CFE8,32,(0:11),R/W,
DFEMDMTOP,reserved,0x5010CFE8,0,(12:15),R/W,
DFEMDMTOP,mdm_pmnt_putampen,0x5010CFE8,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFE8,0,(17:23),R/W,
DFEMDMTOP,mdm_pmnt_putphsen,0x5010CFE8,1,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFE8,0,(25:31),R/W,
DFEMDMTOP,mdm_pmnt_debug_pdet_phs,0x5010CFEC,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFEC,0,(1:7),R/W,
DFEMDMTOP,mdm_pmnt_debug_pdet_amp,0x5010CFEC,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFEC,0,(9:15),R/W,
DFEMDMTOP,mdm_pmnt_debug_pmnt_start,0x5010CFEC,0,(16:16),R/W,
DFEMDMTOP,reserved,0x5010CFEC,0,(17:23),R/W,
DFEMDMTOP,mdm_pmnt_msel,0x5010CFEC,0,(24:24),R/W,
DFEMDMTOP,reserved,0x5010CFEC,0,(25:31),R/W,
DFEMDMTOP,dma_dbgmode,0x5010CFF0,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFF0,0,(1:7),R/W,
DFEMDMTOP,adc_intf_sat_rst,0x5010CFF0,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFF0,0,(9:15),R/W,
DFEMDMTOP,rx0_cliintf_framedtct_bits_mode,0x5010CFF0,0,(16:16),R/W,
DFEMDMTOP,rx0_cliintf_patterndtct_bits_mode,0x5010CFF0,0,(17:17),R/W,
DFEMDMTOP,rx0_cliintf_sofmodesel,0x5010CFF0,0,(18:18),R/W,
DFEMDMTOP,rx1_cliintf_framedtct_bits_mode,0x5010CFF0,0,(19:19),R/W,
DFEMDMTOP,rx1_cliintf_patterndtct_bits_mode,0x5010CFF0,0,(20:20),R/W,
DFEMDMTOP,rx1_cliintf_sofmodesel,0x5010CFF0,0,(21:21),R/W,
DFEMDMTOP,reserved,0x5010CFF0,0,(22:23),R/W,
DFEMDMTOP,multirx_frameend_valid_en,0x5010CFF0,1,(24:24),R/W,
DFEMDMTOP,multirx_patterndtcterr_valid_en,0x5010CFF0,1,(25:25),R/W,
DFEMDMTOP,framedtct_seqmtch_err_bypass,0x5010CFF0,0,(26:26),R/W,
DFEMDMTOP,framedtct_dcoc_align_err_bypass,0x5010CFF0,0,(27:27),R/W,
DFEMDMTOP,reserved,0x5010CFF0,0,(28:31),R/W,
DFEMDMTOP,rssi_start,0x5010CFF4,0,(0:0),R/W,
DFEMDMTOP,reserved,0x5010CFF4,0,(1:7),R/W,
DFEMDMTOP,rssi_rst,0x5010CFF4,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010CFF4,0,(9:15),R/W,
DFEMDMTOP,techvavoiddzbit0,0x5010CFF4,0,(16:20),R/W,
DFEMDMTOP,techvavoiddzbit1,0x5010CFF4,0,(21:25),R/W,
DFEMDMTOP,techvavoiddzbit2,0x5010CFF4,0,(26:30),R/W,
DFEMDMTOP,techafavoiddzbit,0x5010CFF8,0,(0:5),R/W,
DFEMDMTOP,techafavoiddzbit_en,0x5010CFF8,0,(6:6),R/W,
DFEMDMTOP,reserved,0x5010CFF8,0,(7:16),R/W,
DFEMDMTOP,dmactrl0_tx_mode,0x5010CFF8,0,(17:19),R/W,
DFEMDMTOP,dmactrl0_rx_mode,0x5010CFF8,0,(20:22),R/W,
DFEMDMTOP,dmactrl1_tx_mode,0x5010CFF8,0,(23:25),R/W,
DFEMDMTOP,dmactrl1_rx_mode,0x5010CFF8,0,(26:28),R/W,
DFEMDMTOP,reserved,0x5010CFFC,0,(0:3),R/W,
DFEMDMTOP,dfe_mdm_round_sel,0x5010CFFC,0,(4:5),R/W,
DFEMDMTOP,reserved,0x5010CFFC,0,(6:11),R/W,
DFEMDMTOP,rxloopctrl_dsp_sel,0x5010CFFC,0,(12:12),R/W,
DFEMDMTOP,reserved,0x5010CFFC,0,(13:19),R/W,
DFEMDMTOP,rx0_seqmtch_thrshlddcsn_sel,0x5010CFFC,0,(20:20),R/W,
DFEMDMTOP,reserved,0x5010CFFC,0,(21:27),R/W,
DFEMDMTOP,rx1_seqmtch_thrshlddcsn_sel,0x5010CFFC,0,(28:28),R/W,
DFEMDMTOP,reserved,0x5010D000,0,(0:6),R/W,
DFEMDMTOP,rxloopctrl_rst_hpf_bypass,0x5010D000,0,(7:7),R/W,
DFEMDMTOP,reserved,0x5010D000,0,(8:14),R/W,
DFEMDMTOP,rxloopctrl_rst_polyphase_bypass,0x5010D000,1,(15:15),R/W,
DFEMDMTOP,reserved,0x5010D000,0,(16:22),R/W,
DFEMDMTOP,rxloopctrl_rst_notch_bypass,0x5010D000,1,(23:23),R/W,
DFEMDMTOP,reserved,0x5010D000,0,(24:30),R/W,
DFEMDMTOP,rxloopctrl_rst_cicdeci_bypass,0x5010D000,1,(31:31),R/W,
DFEMDMTOP,reserved,0x5010D004,0,(0:6),R/W,
DFEMDMTOP,mdm_rssi_start_bypass,0x5010D004,0,(7:7),R/W,
DFEMDMTOP,reserved,0x5010D004,0,(8:14),R/W,
DFEMDMTOP,rx0_energydtct_phasemean_bypass,0x5010D004,0,(15:15),R/W,
DFEMDMTOP,reserved,0x5010D004,0,(16:22),R/W,
DFEMDMTOP,rx0_seqmtch_mean_bypass,0x5010D004,0,(23:23),R/W,
DFEMDMTOP,reserved,0x5010D004,0,(24:30),R/W,
DFEMDMTOP,rx1_energydtct_phasemean_bypass,0x5010D004,0,(31:31),R/W,
DFEMDMTOP,reserved,0x5010D008,0,(0:6),R/W,
DFEMDMTOP,rx1_seqmtch_mean_bypass,0x5010D008,0,(7:7),R/W,
DFEMDMTOP,reserved,0x5010D008,0,(8:14),R/W,
DFEMDMTOP,rxctrl_mdminitfrmdtctd_sel,0x5010D008,0,(15:15),R/W,
DFEMDMTOP,reserved,0x5010D008,0,(16:22),R/W,
DFEMDMTOP,rxctrl_mdmfnlfrmdtctd_sel,0x5010D008,0,(23:23),R/W,
DFEMDMTOP,reserved,0x5010D008,0,(24:30),R/W,
DFEMDMTOP,rxctrl_mdmfrmdtctd_sel,0x5010D00C,0,(0:1),R/W,
DFEMDMTOP,reserved,0x5010D00C,0,(2:7),R/W,
DFEMDMTOP,mdmstg_singlerx_en,0x5010D00C,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010D00C,0,(9:15),R/W,
DFEMDMTOP,iqdma_dbg_mdm_data_sel,0x5010D00C,0,(16:23),R/W,
DFEMDMTOP,rx0_seqmtch_max_energy_clsn_abs_offset,0x5010D010,0,(0:25),R/W,
DFEMDMTOP,reserved,0x5010D010,0,(26:31),R/W,
DFEMDMTOP,sml0_rx_cic_deci_en_ipath,0x5010D014,1,(0:0),R/W,
DFEMDMTOP,reserved,0x5010D014,0,(1:7),R/W,
DFEMDMTOP,sml0_rx_cic_deci_rst_ipath,0x5010D014,0,(8:8),R/W,
DFEMDMTOP,reserved,0x5010D014,0,(9:15),R/W,
DFEMDMTOP,sml0_rx_cic_deci_en_qpath,0x5010D014,1,(16:16),R/W,
DFEMDMTOP,reserved,0x5010D014,0,(17:23),R/W,
DFEMDMTOP,sml0_rx_cic_deci_rst_qpath,0x5010D014,0,(24:24),R/W,
DFEMDMTOP,reserved,0x5010D014,0,(25:31),R/W,
DFEMDMTOP,mdm_dsp_intrpt_clr,0x5010D018,0,(0:3),R/W,
DFEMDMTOP,reserved,0x5010D018,0,(4:7),R/W,
DFEMDMTOP,mdm_stky_rd_regs_clr,0x5010D018,0,(8:11),R/W,
DFEMDMTOP,reserved,0x5010D018,0,(12:15),R/W,
DFEMDMTOP,iqdma1_dbg_mdm_data_sel,0x5010D018,0,(16:23),R/W,
DFEMDMTOP,reserved,0x5010D01C,0,(0:31),R/W,
DFEMDMTOP,rx0_dbg_energydtct_meanstg_en,0x5010D020,0,(0:0),R,
DFEMDMTOP,rx0_dbg_energydtct_corrstg_en,0x5010D020,0,(1:1),R,
DFEMDMTOP,rx0_dbg_energydtct_dcsnstg_en,0x5010D020,0,(2:2),R,
DFEMDMTOP,rx0_dbg_energydtctd,0x5010D020,0,(3:3),R,
DFEMDMTOP,rx0_dbg_dcestmtd,0x5010D020,0,(4:4),R,
DFEMDMTOP,rx0_dbg_energyloc,0x5010D020,0,(5:12),R,
DFEMDMTOP,rx0_dbg_energythrshldestmtd_0,0x5010D024,0,(0:31),R,
DFEMDMTOP,rx0_dbg_energythrshldestmtd_1,0x5010D028,0,(0:20),R,
DFEMDMTOP,rx0_dbg_phaseestmtdi,0x5010D02C,0,(0:13),R,
DFEMDMTOP,rx0_dbg_phaseestmtdq,0x5010D02C,0,(14:27),R,
DFEMDMTOP,rx0_dbg_energydtct_dcestmtdi_dly0,0x5010D030,0,(0:13),R,
DFEMDMTOP,rx0_dbg_energydtct_dcestmtdq_dly0,0x5010D030,0,(14:27),R,
DFEMDMTOP,rx0_dbg_energydtctctrl_state,0x5010D030,0,(28:30),R,
DFEMDMTOP,rx0_dbg_energydtctctrl_cnt,0x5010D034,0,(0:6),R,
DFEMDMTOP,rx0_dbg_seqmtch_meanstg_en,0x5010D034,0,(7:7),R,
DFEMDMTOP,rx0_dbg_seqmtch_corrstg_en,0x5010D034,0,(8:8),R,
DFEMDMTOP,rx0_dbg_seqmtch_phasecrrt_en,0x5010D034,0,(9:9),R,
DFEMDMTOP,rx0_dbg_seqmtch_getphase_en,0x5010D034,0,(10:10),R,
DFEMDMTOP,rx0_dbg_seqmtch_sync0,0x5010D034,0,(11:11),R,
DFEMDMTOP,rx0_dbg_seqmtch_sync1,0x5010D034,0,(12:12),R,
DFEMDMTOP,rx0_dbg_seqmtch_sync2,0x5010D034,0,(13:13),R,
DFEMDMTOP,rx0_dbg_seqmtch_done,0x5010D034,0,(14:14),R,
DFEMDMTOP,rx0_dbg_seqmtch_err,0x5010D034,0,(15:15),R,
DFEMDMTOP,rx0_dbg_seqmtch_extraphaseshift,0x5010D034,0,(16:16),R,
DFEMDMTOP,rx0_dbg_seqmtch_phase_data_in_rdy,0x5010D034,0,(17:17),R,
DFEMDMTOP,rx0_dbg_seqmtch_bit_rdy,0x5010D034,0,(18:18),R,
DFEMDMTOP,rx0_dbg_seqmtch_symbol_rdy,0x5010D034,0,(19:19),R,
DFEMDMTOP,rx0_dbg_seqmtch_eof,0x5010D034,0,(20:20),R,
DFEMDMTOP,rx0_dbg_seqmtch_sof,0x5010D034,0,(21:21),R,
DFEMDMTOP,rx0_dbg_seqmtch_bl_meanstg,0x5010D034,0,(22:27),R,
DFEMDMTOP,rx0_dbg_seqmtch_bh_meanstg,0x5010D038,0,(0:5),R,
DFEMDMTOP,rx0_dbg_seqmtch_bl_corrstg,0x5010D038,0,(6:11),R,
DFEMDMTOP,rx0_dbg_seqmtch_bh_corrstg,0x5010D038,0,(12:17),R,
DFEMDMTOP,rx0_dbg_seqmtch_bl_phasecrrtstg,0x5010D038,0,(18:23),R,
DFEMDMTOP,rx0_dbg_seqmtch_bh_phasecrrtstg,0x5010D038,0,(24:29),R,
DFEMDMTOP,rx0_dbg_seqmtch_thrshld_sec_out,0x5010D03C,0,(0:31),R,
DFEMDMTOP,rx0_dbg_seqmtch_cnt,0x5010D040,0,(0:7),R,
DFEMDMTOP,rx0_dbg_seqmtch_phasei_out,0x5010D040,0,(8:21),R,
DFEMDMTOP,rx0_dbg_seqmtch_phaseq_out,0x5010D044,0,(0:13),R,
DFEMDMTOP,rx0_dbg_seqmtch_bit,0x5010D044,0,(14:15),R,
DFEMDMTOP,rx0_dbg_seqmtch_symbol,0x5010D044,0,(16:17),R,
DFEMDMTOP,rx0_dbg_seqmtch_symbol_cnt,0x5010D044,0,(18:25),R,
DFEMDMTOP,rx0_dbg_seqmtch_meani_sync0,0x5010D048,0,(0:13),R,
DFEMDMTOP,rx0_dbg_seqmtch_meanq_sync0,0x5010D048,0,(14:27),R,
DFEMDMTOP,rx0_dbg_seqmtch_meani_sync1,0x5010D04C,0,(0:13),R,
DFEMDMTOP,rx0_dbg_seqmtch_meanq_sync1,0x5010D04C,0,(14:27),R,
DFEMDMTOP,rx0_dbg_seqmtch_meani_sync2,0x5010D050,0,(0:13),R,
DFEMDMTOP,rx0_dbg_seqmtch_meanq_sync2,0x5010D050,0,(14:27),R,
DFEMDMTOP,rx0_dbg_seqmtchctrl_state,0x5010D050,0,(28:31),R,
DFEMDMTOP,rx0_dbg_seqmtch_bit_dcsn,0x5010D054,0,(0:1),R,
DFEMDMTOP,rx0_dbg_seqmtch_bit_clsn,0x5010D054,0,(2:3),R,
DFEMDMTOP,rx0_dbg_seqmtch_thrshld_sec,0x5010D058,0,(0:31),R,
DFEMDMTOP,rx0_dbg_seqmtch_thrshlddz_sec,0x5010D05C,0,(0:31),R,
DFEMDMTOP,rx0_dbg_seqmtch_corrlen_sec,0x5010D060,0,(0:5),R,
DFEMDMTOP,rx0_dbg_seqmtch_bl_sec,0x5010D060,0,(6:11),R,
DFEMDMTOP,rx0_dbg_seqmtch_bh_sec,0x5010D060,0,(12:17),R,
DFEMDMTOP,rx0_dbg_seqmtch_mincount_sec,0x5010D060,0,(18:25),R,
DFEMDMTOP,rx0_dbg_seqmtch_maxcount_sec,0x5010D064,0,(0:7),R,
DFEMDMTOP,rx0_dbg_seqmtch_bitseqval_sec,0x5010D064,0,(8:9),R,
DFEMDMTOP,rx0_dbg_seqmtch_bitseqsel_sec,0x5010D064,0,(10:10),R,
DFEMDMTOP,rx0_dbg_seqmtch_chkphaseinv_sec,0x5010D064,0,(11:11),R,
DFEMDMTOP,rx0_dbg_seqmtch_superbitlen_sec,0x5010D064,0,(12:14),R,
DFEMDMTOP,rx0_dbg_energydtct_phaseei_out,0x5010D064,0,(15:28),R,
DFEMDMTOP,rx0_dbg_energydtct_phaseeq_out,0x5010D068,0,(0:13),R,
DFEMDMTOP,rx0_dbg_seqmtch_corrphasei_pattern0_out,0x5010D068,0,(14:27),R,
DFEMDMTOP,rx0_dbg_seqmtch_corrphaseq_pattern0_out,0x5010D06C,0,(0:13),R,
DFEMDMTOP,rx0_dbg_seqmtch_corrphasei_pattern1_out,0x5010D06C,0,(14:27),R,
DFEMDMTOP,rx0_dbg_seqmtch_corrphaseq_pattern1_out,0x5010D070,0,(0:13),R,
DFEMDMTOP,rx0_dbg_framedtct_energydtct_en,0x5010D070,0,(14:14),R,
DFEMDMTOP,rx0_dbg_framedtct_energydtct_rst,0x5010D070,0,(15:15),R,
DFEMDMTOP,rx0_dbg_framedtct_seqmtch_en,0x5010D070,0,(16:16),R,
DFEMDMTOP,rx0_dbg_framedtct_seqmtch_rst,0x5010D070,0,(17:17),R,
DFEMDMTOP,rx0_dbg_framedtctdone,0x5010D070,0,(18:18),R,
DFEMDMTOP,rx0_dbg_framedtct_seqmtch_extraphaseshift_init,0x5010D070,0,(19:19),R,
DFEMDMTOP,rx0_dbg_framedtct_validframe,0x5010D070,0,(20:20),R,
DFEMDMTOP,rx0_dbg_framedtct_techb_errlate,0x5010D070,0,(21:21),R,
DFEMDMTOP,rx0_dbg_framedtct_techb_errearly,0x5010D070,0,(22:22),R,
DFEMDMTOP,rx0_dbg_framedtct_techb_dcflush,0x5010D070,0,(23:23),R,
DFEMDMTOP,rx0_dbg_framedtct_energydtctfirsttime,0x5010D070,0,(24:24),R,
DFEMDMTOP,rx0_dbg_framedtct_seqmtch_nsection_cnt,0x5010D070,0,(25:27),R,
DFEMDMTOP,rx0_dbg_framedtct_secmtch_boundry,0x5010D074,0,(0:7),R,
DFEMDMTOP,rx0_dbg_framedtct_techbwaitcnt,0x5010D074,0,(8:15),R,
DFEMDMTOP,rx0_dbg_framedtct_techbsmplcnt,0x5010D074,0,(16:25),R,
DFEMDMTOP,rx0_dbg_framedtct_techbprmblsmplcnt,0x5010D074,0,(26:31),R,
DFEMDMTOP,rx0_dbg_framedtct_prmblcnt,0x5010D078,0,(0:5),R,
DFEMDMTOP,rx0_dbg_framedtctctrl_state,0x5010D078,0,(6:8),R,
DFEMDMTOP,rx0_dbg_patterndtct_validframe,0x5010D078,0,(9:9),R,
DFEMDMTOP,rx0_dbg_patterndtct_seqmtch_en,0x5010D078,0,(10:10),R,
DFEMDMTOP,rx0_dbg_patterndtct_seqmtch_rst,0x5010D078,0,(11:11),R,
DFEMDMTOP,rx0_dbg_patterndtct_energydtct_en,0x5010D078,0,(12:12),R,
DFEMDMTOP,rx0_dbg_patterndtct_energydtct_rst,0x5010D078,0,(13:13),R,
DFEMDMTOP,rx0_dbg_patterndtctdone,0x5010D078,0,(14:14),R,
DFEMDMTOP,rx0_dbg_patterndtct_frame_pattern_sel,0x5010D078,0,(15:15),R,
DFEMDMTOP,rx0_dbg_patterndtct_seqmtch_bitcnt_rst,0x5010D078,0,(16:16),R,
DFEMDMTOP,rx0_dbg_patterndtct_techb_startstop_err,0x5010D078,0,(17:17),R,
DFEMDMTOP,rx0_dbg_patterndtct_techb_errearly,0x5010D078,0,(18:18),R,
DFEMDMTOP,rx0_dbg_patterndtct_techb_errlate,0x5010D078,0,(19:19),R,
DFEMDMTOP,rx0_dbg_patterndtct_techb_egtsearch,0x5010D078,0,(20:20),R,
DFEMDMTOP,rx0_dbg_patterndtct_techb_frameendsearch,0x5010D078,0,(21:21),R,
DFEMDMTOP,rx0_dbg_patterndtct_seqmtch_nsection_cnt,0x5010D078,0,(22:24),R,
DFEMDMTOP,rx0_dbg_patterndtctctrl_state,0x5010D078,0,(25:28),R,
DFEMDMTOP,rx0_dbg_patterndtct_techbwaitcnt,0x5010D07C,0,(0:7),R,
DFEMDMTOP,rx0_dbg_patterndtct_techbsmplcnt,0x5010D07C,0,(8:17),R,
DFEMDMTOP,rx0_dbg_mdm_framedtctd,0x5010D07C,0,(18:18),R,
DFEMDMTOP,rx0_dbg_mdm_frameend,0x5010D07C,0,(19:19),R,
DFEMDMTOP,rx0_dbg_mdm_validframe,0x5010D07C,0,(20:20),R,
DFEMDMTOP,rx0_dbg_mdm_bit_rdy,0x5010D07C,0,(21:21),R,
DFEMDMTOP,rx0_dbg_mdm_symbol_rdy,0x5010D07C,0,(22:22),R,
DFEMDMTOP,rx0_dbg_mdm_sos,0x5010D07C,0,(23:23),R,
DFEMDMTOP,rx0_dbg_mdm_eos,0x5010D07C,0,(24:24),R,
DFEMDMTOP,rx0_dbg_mdm_sof,0x5010D07C,0,(25:25),R,
DFEMDMTOP,rx0_dbg_mdm_sofn,0x5010D07C,0,(26:26),R,
DFEMDMTOP,rx0_dbg_mdm_sofp,0x5010D07C,0,(27:27),R,
DFEMDMTOP,rx0_dbg_mdm_sofs,0x5010D07C,0,(28:28),R,
DFEMDMTOP,rx0_dbg_mdm_sofd,0x5010D07C,0,(29:29),R,
DFEMDMTOP,rx0_dbg_mdm_eof,0x5010D07C,0,(30:30),R,
DFEMDMTOP,rx0_dbg_mdm_sosh,0x5010D07C,0,(31:31),R,
DFEMDMTOP,rx0_dbg_mdm_sosl,0x5010D080,0,(0:0),R,
DFEMDMTOP,rx0_dbg_mdm_eofp,0x5010D080,0,(1:1),R,
DFEMDMTOP,rx0_dbg_mdm_eofn,0x5010D080,0,(2:2),R,
DFEMDMTOP,rx0_dbg_mdm_rstrt_op,0x5010D080,0,(3:3),R,
DFEMDMTOP,rx0_dbg_mdm_refph,0x5010D080,0,(4:4),R,
DFEMDMTOP,rx0_dbg_mdm_energydtctactive,0x5010D080,0,(5:5),R,
DFEMDMTOP,rx0_dbg_mdm_seqmtchactive,0x5010D080,0,(6:6),R,
DFEMDMTOP,rx0_dbg_mdm_seqmtch_allowadjustboundry,0x5010D080,0,(7:7),R,
DFEMDMTOP,rx0_dbg_mdm_energydtct_en,0x5010D080,0,(8:8),R,
DFEMDMTOP,rx0_dbg_mdm_energydtct_rst,0x5010D080,0,(9:9),R,
DFEMDMTOP,rx0_dbg_mdm_seqmtch_en,0x5010D080,0,(10:10),R,
DFEMDMTOP,rx0_dbg_mdm_seqmtch_rst,0x5010D080,0,(11:11),R,
DFEMDMTOP,rx0_dbg_mdm_bit,0x5010D080,0,(12:13),R,
DFEMDMTOP,rx0_dbg_mdm_symbol,0x5010D080,0,(14:15),R,
DFEMDMTOP,rx0_dbg_mdm_seqmtch_sec_sel,0x5010D080,0,(16:18),R,
DFEMDMTOP,rx1_dbg_energydtct_meanstg_en,0x5010D080,0,(19:19),R,
DFEMDMTOP,rx1_dbg_energydtct_corrstg_en,0x5010D080,0,(20:20),R,
DFEMDMTOP,rx1_dbg_energydtct_dcsnstg_en,0x5010D080,0,(21:21),R,
DFEMDMTOP,rx1_dbg_energydtctd,0x5010D080,0,(22:22),R,
DFEMDMTOP,rx1_dbg_dcestmtd,0x5010D080,0,(23:23),R,
DFEMDMTOP,rx1_dbg_energyloc,0x5010D080,0,(24:31),R,
DFEMDMTOP,rx1_dbg_energythrshldestmtd_0,0x5010D084,0,(0:31),R,
DFEMDMTOP,rx1_dbg_energythrshldestmtd_1,0x5010D088,0,(0:20),R,
DFEMDMTOP,rx1_dbg_phaseestmtdi,0x5010D08C,0,(0:13),R,
DFEMDMTOP,rx1_dbg_phaseestmtdq,0x5010D08C,0,(14:27),R,
DFEMDMTOP,rx1_dbg_energydtct_dcestmtdi_dly0,0x5010D090,0,(0:13),R,
DFEMDMTOP,rx1_dbg_energydtct_dcestmtdq_dly0,0x5010D090,0,(14:27),R,
DFEMDMTOP,rx1_dbg_energydtctctrl_state,0x5010D090,0,(28:30),R,
DFEMDMTOP,rx1_dbg_energydtctctrl_cnt,0x5010D094,0,(0:6),R,
DFEMDMTOP,rx1_dbg_seqmtch_meanstg_en,0x5010D094,0,(7:7),R,
DFEMDMTOP,rx1_dbg_seqmtch_corrstg_en,0x5010D094,0,(8:8),R,
DFEMDMTOP,rx1_dbg_seqmtch_phasecrrt_en,0x5010D094,0,(9:9),R,
DFEMDMTOP,rx1_dbg_seqmtch_getphase_en,0x5010D094,0,(10:10),R,
DFEMDMTOP,rx1_dbg_seqmtch_sync0,0x5010D094,0,(11:11),R,
DFEMDMTOP,rx1_dbg_seqmtch_sync1,0x5010D094,0,(12:12),R,
DFEMDMTOP,rx1_dbg_seqmtch_sync2,0x5010D094,0,(13:13),R,
DFEMDMTOP,rx1_dbg_seqmtch_done,0x5010D094,0,(14:14),R,
DFEMDMTOP,rx1_dbg_seqmtch_err,0x5010D094,0,(15:15),R,
DFEMDMTOP,rx1_dbg_seqmtch_extraphaseshift,0x5010D094,0,(16:16),R,
DFEMDMTOP,rx1_dbg_seqmtch_phase_data_in_rdy,0x5010D094,0,(17:17),R,
DFEMDMTOP,rx1_dbg_seqmtch_bit_rdy,0x5010D094,0,(18:18),R,
DFEMDMTOP,rx1_dbg_seqmtch_symbol_rdy,0x5010D094,0,(19:19),R,
DFEMDMTOP,rx1_dbg_seqmtch_eof,0x5010D094,0,(20:20),R,
DFEMDMTOP,rx1_dbg_seqmtch_sof,0x5010D094,0,(21:21),R,
DFEMDMTOP,rx1_dbg_seqmtch_bl_meanstg,0x5010D094,0,(22:27),R,
DFEMDMTOP,rx1_dbg_seqmtch_bh_meanstg,0x5010D098,0,(0:5),R,
DFEMDMTOP,rx1_dbg_seqmtch_bl_corrstg,0x5010D098,0,(6:11),R,
DFEMDMTOP,rx1_dbg_seqmtch_bh_corrstg,0x5010D098,0,(12:17),R,
DFEMDMTOP,rx1_dbg_seqmtch_bl_phasecrrtstg,0x5010D098,0,(18:23),R,
DFEMDMTOP,rx1_dbg_seqmtch_bh_phasecrrtstg,0x5010D098,0,(24:29),R,
DFEMDMTOP,rx1_dbg_seqmtch_thrshld_sec_out,0x5010D09C,0,(0:31),R,
DFEMDMTOP,rx1_dbg_seqmtch_cnt,0x5010D0A0,0,(0:7),R,
DFEMDMTOP,rx1_dbg_seqmtch_phasei_out,0x5010D0A0,0,(8:21),R,
DFEMDMTOP,rx1_dbg_seqmtch_phaseq_out,0x5010D0A4,0,(0:13),R,
DFEMDMTOP,rx1_dbg_seqmtch_bit,0x5010D0A4,0,(14:15),R,
DFEMDMTOP,rx1_dbg_seqmtch_symbol,0x5010D0A4,0,(16:17),R,
DFEMDMTOP,rx1_dbg_seqmtch_symbol_cnt,0x5010D0A4,0,(18:25),R,
DFEMDMTOP,rx1_dbg_seqmtch_meani_sync0,0x5010D0A8,0,(0:13),R,
DFEMDMTOP,rx1_dbg_seqmtch_meanq_sync0,0x5010D0A8,0,(14:27),R,
DFEMDMTOP,rx1_dbg_seqmtch_meani_sync1,0x5010D0AC,0,(0:13),R,
DFEMDMTOP,rx1_dbg_seqmtch_meanq_sync1,0x5010D0AC,0,(14:27),R,
DFEMDMTOP,rx1_dbg_seqmtch_meani_sync2,0x5010D0B0,0,(0:13),R,
DFEMDMTOP,rx1_dbg_seqmtch_meanq_sync2,0x5010D0B0,0,(14:27),R,
DFEMDMTOP,rx1_dbg_seqmtchctrl_state,0x5010D0B0,0,(28:31),R,
DFEMDMTOP,rx1_dbg_seqmtch_bit_dcsn,0x5010D0B4,0,(0:1),R,
DFEMDMTOP,rx1_dbg_seqmtch_bit_clsn,0x5010D0B4,0,(2:3),R,
DFEMDMTOP,rx1_dbg_seqmtch_thrshld_sec,0x5010D0B8,0,(0:31),R,
DFEMDMTOP,rx1_dbg_seqmtch_thrshlddz_sec,0x5010D0BC,0,(0:31),R,
DFEMDMTOP,rx1_dbg_seqmtch_corrlen_sec,0x5010D0C0,0,(0:5),R,
DFEMDMTOP,rx1_dbg_seqmtch_bl_sec,0x5010D0C0,0,(6:11),R,
DFEMDMTOP,rx1_dbg_seqmtch_bh_sec,0x5010D0C0,0,(12:17),R,
DFEMDMTOP,rx1_dbg_seqmtch_mincount_sec,0x5010D0C0,0,(18:25),R,
DFEMDMTOP,rx1_dbg_seqmtch_maxcount_sec,0x5010D0C4,0,(0:7),R,
DFEMDMTOP,rx1_dbg_seqmtch_bitseqval_sec,0x5010D0C4,0,(8:9),R,
DFEMDMTOP,rx1_dbg_seqmtch_bitseqsel_sec,0x5010D0C4,0,(10:10),R,
DFEMDMTOP,rx1_dbg_seqmtch_chkphaseinv_sec,0x5010D0C4,0,(11:11),R,
DFEMDMTOP,rx1_dbg_seqmtch_superbitlen_sec,0x5010D0C4,0,(12:14),R,
DFEMDMTOP,rx1_dbg_energydtct_phaseei_out,0x5010D0C4,0,(15:28),R,
DFEMDMTOP,rx1_dbg_energydtct_phaseeq_out,0x5010D0C8,0,(0:13),R,
DFEMDMTOP,rx1_dbg_seqmtch_corrphasei_pattern0_out,0x5010D0C8,0,(14:27),R,
DFEMDMTOP,rx1_dbg_seqmtch_corrphaseq_pattern0_out,0x5010D0CC,0,(0:13),R,
DFEMDMTOP,rx1_dbg_seqmtch_corrphasei_pattern1_out,0x5010D0CC,0,(14:27),R,
DFEMDMTOP,rx1_dbg_seqmtch_corrphaseq_pattern1_out,0x5010D0D0,0,(0:13),R,
DFEMDMTOP,rx1_dbg_framedtct_energydtct_en,0x5010D0D0,0,(14:14),R,
DFEMDMTOP,rx1_dbg_framedtct_energydtct_rst,0x5010D0D0,0,(15:15),R,
DFEMDMTOP,rx1_dbg_framedtct_seqmtch_en,0x5010D0D0,0,(16:16),R,
DFEMDMTOP,rx1_dbg_framedtct_seqmtch_rst,0x5010D0D0,0,(17:17),R,
DFEMDMTOP,rx1_dbg_framedtctdone,0x5010D0D0,0,(18:18),R,
DFEMDMTOP,rx1_dbg_framedtct_seqmtch_extraphaseshift_init,0x5010D0D0,0,(19:19),R,
DFEMDMTOP,rx1_dbg_framedtct_validframe,0x5010D0D0,0,(20:20),R,
DFEMDMTOP,rx1_dbg_framedtct_techb_errlate,0x5010D0D0,0,(21:21),R,
DFEMDMTOP,rx1_dbg_framedtct_techb_errearly,0x5010D0D0,0,(22:22),R,
DFEMDMTOP,rx1_dbg_framedtct_techb_dcflush,0x5010D0D0,0,(23:23),R,
DFEMDMTOP,rx1_dbg_framedtct_energydtctfirsttime,0x5010D0D0,0,(24:24),R,
DFEMDMTOP,rx1_dbg_framedtct_seqmtch_nsection_cnt,0x5010D0D0,0,(25:27),R,
DFEMDMTOP,rx1_dbg_framedtct_secmtch_boundry,0x5010D0D4,0,(0:7),R,
DFEMDMTOP,rx1_dbg_framedtct_techbwaitcnt,0x5010D0D4,0,(8:15),R,
DFEMDMTOP,rx1_dbg_framedtct_techbsmplcnt,0x5010D0D4,0,(16:25),R,
DFEMDMTOP,rx1_dbg_framedtct_techbprmblsmplcnt,0x5010D0D4,0,(26:31),R,
DFEMDMTOP,rx1_dbg_framedtct_prmblcnt,0x5010D0D8,0,(0:5),R,
DFEMDMTOP,rx1_dbg_framedtctctrl_state,0x5010D0D8,0,(6:8),R,
DFEMDMTOP,rx1_dbg_patterndtct_validframe,0x5010D0D8,0,(9:9),R,
DFEMDMTOP,rx1_dbg_patterndtct_seqmtch_en,0x5010D0D8,0,(10:10),R,
DFEMDMTOP,rx1_dbg_patterndtct_seqmtch_rst,0x5010D0D8,0,(11:11),R,
DFEMDMTOP,rx1_dbg_patterndtct_energydtct_en,0x5010D0D8,0,(12:12),R,
DFEMDMTOP,rx1_dbg_patterndtct_energydtct_rst,0x5010D0D8,0,(13:13),R,
DFEMDMTOP,rx1_dbg_patterndtctdone,0x5010D0D8,0,(14:14),R,
DFEMDMTOP,rx1_dbg_patterndtct_frame_pattern_sel,0x5010D0D8,0,(15:15),R,
DFEMDMTOP,rx1_dbg_patterndtct_seqmtch_bitcnt_rst,0x5010D0D8,0,(16:16),R,
DFEMDMTOP,rx1_dbg_patterndtct_techb_startstop_err,0x5010D0D8,0,(17:17),R,
DFEMDMTOP,rx1_dbg_patterndtct_techb_errearly,0x5010D0D8,0,(18:18),R,
DFEMDMTOP,rx1_dbg_patterndtct_techb_errlate,0x5010D0D8,0,(19:19),R,
DFEMDMTOP,rx1_dbg_patterndtct_techb_egtsearch,0x5010D0D8,0,(20:20),R,
DFEMDMTOP,rx1_dbg_patterndtct_techb_frameendsearch,0x5010D0D8,0,(21:21),R,
DFEMDMTOP,rx1_dbg_patterndtct_seqmtch_nsection_cnt,0x5010D0D8,0,(22:24),R,
DFEMDMTOP,rx1_dbg_patterndtctctrl_state,0x5010D0D8,0,(25:28),R,
DFEMDMTOP,rx1_dbg_patterndtct_techbwaitcnt,0x5010D0DC,0,(0:7),R,
DFEMDMTOP,rx1_dbg_patterndtct_techbsmplcnt,0x5010D0DC,0,(8:17),R,
DFEMDMTOP,rx1_dbg_mdm_framedtctd,0x5010D0DC,0,(18:18),R,
DFEMDMTOP,rx1_dbg_mdm_frameend,0x5010D0DC,0,(19:19),R,
DFEMDMTOP,rx1_dbg_mdm_validframe,0x5010D0DC,0,(20:20),R,
DFEMDMTOP,rx1_dbg_mdm_bit_rdy,0x5010D0DC,0,(21:21),R,
DFEMDMTOP,rx1_dbg_mdm_symbol_rdy,0x5010D0DC,0,(22:22),R,
DFEMDMTOP,rx1_dbg_mdm_sos,0x5010D0DC,0,(23:23),R,
DFEMDMTOP,rx1_dbg_mdm_eos,0x5010D0DC,0,(24:24),R,
DFEMDMTOP,rx1_dbg_mdm_sof,0x5010D0DC,0,(25:25),R,
DFEMDMTOP,rx1_dbg_mdm_sofn,0x5010D0DC,0,(26:26),R,
DFEMDMTOP,rx1_dbg_mdm_sofp,0x5010D0DC,0,(27:27),R,
DFEMDMTOP,rx1_dbg_mdm_sofs,0x5010D0DC,0,(28:28),R,
DFEMDMTOP,rx1_dbg_mdm_sofd,0x5010D0DC,0,(29:29),R,
DFEMDMTOP,rx1_dbg_mdm_eof,0x5010D0DC,0,(30:30),R,
DFEMDMTOP,rx1_dbg_mdm_sosh,0x5010D0DC,0,(31:31),R,
DFEMDMTOP,rx1_dbg_mdm_sosl,0x5010D0E0,0,(0:0),R,
DFEMDMTOP,rx1_dbg_mdm_eofp,0x5010D0E0,0,(1:1),R,
DFEMDMTOP,rx1_dbg_mdm_eofn,0x5010D0E0,0,(2:2),R,
DFEMDMTOP,rx1_dbg_mdm_rstrt_op,0x5010D0E0,0,(3:3),R,
DFEMDMTOP,rx1_dbg_mdm_refph,0x5010D0E0,0,(4:4),R,
DFEMDMTOP,rx1_dbg_mdm_energydtctactive,0x5010D0E0,0,(5:5),R,
DFEMDMTOP,rx1_dbg_mdm_seqmtchactive,0x5010D0E0,0,(6:6),R,
DFEMDMTOP,rx1_dbg_mdm_seqmtch_allowadjustboundry,0x5010D0E0,0,(7:7),R,
DFEMDMTOP,rx1_dbg_mdm_energydtct_en,0x5010D0E0,0,(8:8),R,
DFEMDMTOP,rx1_dbg_mdm_energydtct_rst,0x5010D0E0,0,(9:9),R,
DFEMDMTOP,rx1_dbg_mdm_seqmtch_en,0x5010D0E0,0,(10:10),R,
DFEMDMTOP,rx1_dbg_mdm_seqmtch_rst,0x5010D0E0,0,(11:11),R,
DFEMDMTOP,rx1_dbg_mdm_bit,0x5010D0E0,0,(12:13),R,
DFEMDMTOP,rx1_dbg_mdm_symbol,0x5010D0E0,0,(14:15),R,
DFEMDMTOP,rx1_dbg_mdm_seqmtch_sec_sel,0x5010D0E0,0,(16:18),R,
DFEMDMTOP,dbg_mean_op0_out,0x5010D0E4,0,(0:13),R,
DFEMDMTOP,dbg_mean_op1_out,0x5010D0E4,0,(14:27),R,
DFEMDMTOP,dbg_mean_op2_out,0x5010D0E8,0,(0:13),R,
DFEMDMTOP,dbg_mean_op3_out,0x5010D0E8,0,(14:27),R,
DFEMDMTOP,dbg_mean_op4_out,0x5010D0EC,0,(0:13),R,
DFEMDMTOP,dbg_mean_op5_out,0x5010D0EC,0,(14:27),R,
DFEMDMTOP,dbg_mean_op6_out,0x5010D0F0,0,(0:13),R,
DFEMDMTOP,dbg_mean_op7_out,0x5010D0F0,0,(14:27),R,
DFEMDMTOP,dbg_meanstgctrl_state,0x5010D0F0,0,(28:30),R,
DFEMDMTOP,dbg_meanstg_en,0x5010D0F0,0,(31:31),R,
DFEMDMTOP,dbg_meanstg_rst,0x5010D0F4,0,(0:0),R,
DFEMDMTOP,dbg_mean_op0_p0,0x5010D0F4,0,(1:6),R,
DFEMDMTOP,dbg_mean_op0_p1,0x5010D0F4,0,(7:12),R,
DFEMDMTOP,dbg_mean_op0_divfctr,0x5010D0F4,0,(13:15),R,
DFEMDMTOP,dbg_mean_op1_p0,0x5010D0F4,0,(16:21),R,
DFEMDMTOP,dbg_mean_op1_p1,0x5010D0F4,0,(22:27),R,
DFEMDMTOP,dbg_mean_op1_divfctr,0x5010D0F4,0,(28:30),R,
DFEMDMTOP,dbg_mean_op2_p0,0x5010D0F8,0,(0:5),R,
DFEMDMTOP,dbg_mean_op2_p1,0x5010D0F8,0,(6:11),R,
DFEMDMTOP,dbg_mean_op2_divfctr,0x5010D0F8,0,(12:14),R,
DFEMDMTOP,dbg_mean_op3_p0,0x5010D0F8,0,(15:20),R,
DFEMDMTOP,dbg_mean_op3_p1,0x5010D0F8,0,(21:26),R,
DFEMDMTOP,dbg_mean_op3_divfctr,0x5010D0F8,0,(27:29),R,
DFEMDMTOP,dbg_mean_op4_p0,0x5010D0FC,0,(0:5),R,
DFEMDMTOP,dbg_mean_op4_p1,0x5010D0FC,0,(6:11),R,
DFEMDMTOP,dbg_mean_op4_divfctr,0x5010D0FC,0,(12:14),R,
DFEMDMTOP,dbg_mean_op5_p0,0x5010D0FC,0,(15:20),R,
DFEMDMTOP,dbg_mean_op5_p1,0x5010D0FC,0,(21:26),R,
DFEMDMTOP,dbg_mean_op5_divfctr,0x5010D0FC,0,(27:29),R,
DFEMDMTOP,dbg_mean_op6_p0,0x5010D100,0,(0:5),R,
DFEMDMTOP,dbg_mean_op6_p1,0x5010D100,0,(6:11),R,
DFEMDMTOP,dbg_mean_op6_divfctr,0x5010D100,0,(12:14),R,
DFEMDMTOP,dbg_mean_op7_p0,0x5010D100,0,(15:20),R,
DFEMDMTOP,dbg_mean_op7_p1,0x5010D100,0,(21:26),R,
DFEMDMTOP,dbg_mean_op7_divfctr,0x5010D100,0,(27:29),R,
DFEMDMTOP,dbg_mean_op0_dc,0x5010D104,0,(0:13),R,
DFEMDMTOP,dbg_mean_op1_dc,0x5010D104,0,(14:27),R,
DFEMDMTOP,dbg_mean_op2_dc,0x5010D108,0,(0:13),R,
DFEMDMTOP,dbg_mean_op3_dc,0x5010D108,0,(14:27),R,
DFEMDMTOP,dbg_mean_op4_dc,0x5010D10C,0,(0:13),R,
DFEMDMTOP,dbg_mean_op5_dc,0x5010D10C,0,(14:27),R,
DFEMDMTOP,dbg_mean_op6_dc,0x5010D110,0,(0:13),R,
DFEMDMTOP,dbg_mean_op7_dc,0x5010D110,0,(14:27),R,
DFEMDMTOP,dbg_phcrrtstgctrl_state,0x5010D110,0,(28:30),R,
DFEMDMTOP,dbg_phscrrtstg_en,0x5010D110,0,(31:31),R,
DFEMDMTOP,dbg_phscrrtstg_rst,0x5010D114,0,(0:0),R,
DFEMDMTOP,dbg_phscrrt_op0_in1,0x5010D114,0,(1:14),R,
DFEMDMTOP,dbg_phscrrt_op0_p0,0x5010D114,0,(15:20),R,
DFEMDMTOP,dbg_phscrrt_op0_p1,0x5010D114,0,(21:26),R,
DFEMDMTOP,dbg_phscrrt_op0_mean,0x5010D118,0,(0:13),R,
DFEMDMTOP,dbg_phscrrt_op1_in1,0x5010D118,0,(14:27),R,
DFEMDMTOP,dbg_phscrrt_op1_p0,0x5010D11C,0,(0:5),R,
DFEMDMTOP,dbg_phscrrt_op1_p1,0x5010D11C,0,(6:11),R,
DFEMDMTOP,dbg_phscrrt_op1_mean,0x5010D11C,0,(12:25),R,
DFEMDMTOP,dbg_phscrrt_op2_in1,0x5010D120,0,(0:13),R,
DFEMDMTOP,dbg_phscrrt_op2_p0,0x5010D120,0,(14:19),R,
DFEMDMTOP,dbg_phscrrt_op2_p1,0x5010D120,0,(20:25),R,
DFEMDMTOP,dbg_phscrrt_op2_mean,0x5010D124,0,(0:13),R,
DFEMDMTOP,dbg_phscrrt_op3_in1,0x5010D124,0,(14:27),R,
DFEMDMTOP,dbg_phscrrt_op3_p0,0x5010D128,0,(0:5),R,
DFEMDMTOP,dbg_phscrrt_op3_p1,0x5010D128,0,(6:11),R,
DFEMDMTOP,dbg_phscrrt_op3_mean,0x5010D128,0,(12:25),R,
DFEMDMTOP,dbg_phscrrt_op4_in1,0x5010D12C,0,(0:13),R,
DFEMDMTOP,dbg_phscrrt_op4_p0,0x5010D12C,0,(14:19),R,
DFEMDMTOP,dbg_phscrrt_op4_p1,0x5010D12C,0,(20:25),R,
DFEMDMTOP,dbg_phscrrt_op4_mean,0x5010D130,0,(0:13),R,
DFEMDMTOP,dbg_phscrrt_op5_in1,0x5010D130,0,(14:27),R,
DFEMDMTOP,dbg_phscrrt_op5_p0,0x5010D134,0,(0:5),R,
DFEMDMTOP,dbg_phscrrt_op5_p1,0x5010D134,0,(6:11),R,
DFEMDMTOP,dbg_phscrrt_op5_mean,0x5010D134,0,(12:25),R,
DFEMDMTOP,dbg_phscrrt_op6_in1,0x5010D138,0,(0:13),R,
DFEMDMTOP,dbg_phscrrt_op6_p0,0x5010D138,0,(14:19),R,
DFEMDMTOP,dbg_phscrrt_op6_p1,0x5010D138,0,(20:25),R,
DFEMDMTOP,dbg_phscrrt_op6_mean,0x5010D13C,0,(0:13),R,
DFEMDMTOP,dbg_phscrrt_op7_in1,0x5010D13C,0,(14:27),R,
DFEMDMTOP,dbg_phscrrt_op7_p0,0x5010D140,0,(0:5),R,
DFEMDMTOP,dbg_phscrrt_op7_p1,0x5010D140,0,(6:11),R,
DFEMDMTOP,dbg_phscrrt_op7_mean,0x5010D140,0,(12:25),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op0,0x5010D140,0,(26:26),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op1,0x5010D140,0,(27:27),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op2,0x5010D140,0,(28:28),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op3,0x5010D140,0,(29:29),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op4,0x5010D140,0,(30:30),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op5,0x5010D140,0,(31:31),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op6,0x5010D144,0,(0:0),R,
DFEMDMTOP,dbg_phscrrt_extraphaseshift_op7,0x5010D144,0,(1:1),R,
DFEMDMTOP,dbg_corr_op0_out,0x5010D144,0,(2:27),R,
DFEMDMTOP,dbg_corr_op1_out,0x5010D148,0,(0:25),R,
DFEMDMTOP,dbg_corr_op2_out,0x5010D14C,0,(0:25),R,
DFEMDMTOP,dbg_corr_op3_out,0x5010D150,0,(0:25),R,
DFEMDMTOP,dbg_corr_op4_out,0x5010D154,0,(0:25),R,
DFEMDMTOP,dbg_corr_op5_out,0x5010D158,0,(0:25),R,
DFEMDMTOP,dbg_corr_op6_out,0x5010D15C,0,(0:25),R,
DFEMDMTOP,dbg_corr_op7_out,0x5010D160,0,(0:25),R,
DFEMDMTOP,dbg_corrstgctrl_state,0x5010D160,0,(26:28),R,
DFEMDMTOP,dbg_corrstg_en,0x5010D160,0,(29:29),R,
DFEMDMTOP,dbg_corrstg_rst,0x5010D160,0,(30:30),R,
DFEMDMTOP,dbg_corr_op0_p0,0x5010D164,0,(0:5),R,
DFEMDMTOP,dbg_corr_op0_p1,0x5010D164,0,(6:11),R,
DFEMDMTOP,dbg_corr_op1_p0,0x5010D164,0,(12:17),R,
DFEMDMTOP,dbg_corr_op1_p1,0x5010D164,0,(18:23),R,
DFEMDMTOP,dbg_corr_op2_p0,0x5010D164,0,(24:29),R,
DFEMDMTOP,dbg_corr_op2_p1,0x5010D168,0,(0:5),R,
DFEMDMTOP,dbg_corr_op3_p0,0x5010D168,0,(6:11),R,
DFEMDMTOP,dbg_corr_op3_p1,0x5010D168,0,(12:17),R,
DFEMDMTOP,dbg_corr_op0_dc,0x5010D168,0,(18:31),R,
DFEMDMTOP,dbg_corr_op0_mean,0x5010D16C,0,(0:13),R,
DFEMDMTOP,dbg_corr_op1_dc,0x5010D16C,0,(14:27),R,
DFEMDMTOP,dbg_corr_op1_mean,0x5010D170,0,(0:13),R,
DFEMDMTOP,dbg_corr_op2_dc,0x5010D170,0,(14:27),R,
DFEMDMTOP,dbg_corr_op2_mean,0x5010D174,0,(0:13),R,
DFEMDMTOP,dbg_corr_op3_dc,0x5010D174,0,(14:27),R,
DFEMDMTOP,dbg_corr_op3_mean,0x5010D178,0,(0:13),R,
DFEMDMTOP,dbg_corr_op4_p0,0x5010D178,0,(14:19),R,
DFEMDMTOP,dbg_corr_op4_p1,0x5010D178,0,(20:25),R,
DFEMDMTOP,dbg_corr_op5_p0,0x5010D178,0,(26:31),R,
DFEMDMTOP,dbg_corr_op5_p1,0x5010D17C,0,(0:5),R,
DFEMDMTOP,dbg_corr_op6_p0,0x5010D17C,0,(6:11),R,
DFEMDMTOP,dbg_corr_op6_p1,0x5010D17C,0,(12:17),R,
DFEMDMTOP,dbg_corr_op7_p0,0x5010D17C,0,(18:23),R,
DFEMDMTOP,dbg_corr_op7_p1,0x5010D17C,0,(24:29),R,
DFEMDMTOP,dbg_corr_op4_dc,0x5010D180,0,(0:13),R,
DFEMDMTOP,dbg_corr_op4_mean,0x5010D180,0,(14:27),R,
DFEMDMTOP,dbg_corr_op5_dc,0x5010D184,0,(0:13),R,
DFEMDMTOP,dbg_corr_op5_mean,0x5010D184,0,(14:27),R,
DFEMDMTOP,dbg_corr_op6_dc,0x5010D188,0,(0:13),R,
DFEMDMTOP,dbg_corr_op6_mean,0x5010D188,0,(14:27),R,
DFEMDMTOP,dbg_corr_op7_dc,0x5010D18C,0,(0:13),R,
DFEMDMTOP,dbg_corr_op7_mean,0x5010D18C,0,(14:27),R,
DFEMDMTOP,dbg_dcsn_op0_out_0,0x5010D190,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op0_out_1,0x5010D194,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_op1_out_0,0x5010D198,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op1_out_1,0x5010D19C,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_op2_out_0,0x5010D1A0,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op2_out_1,0x5010D1A4,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_op3_out_0,0x5010D1A8,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op3_out_1,0x5010D1AC,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_op4_out_0,0x5010D1B0,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op4_out_1,0x5010D1B4,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_op5_out_0,0x5010D1B8,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op5_out_1,0x5010D1BC,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_op6_out_0,0x5010D1C0,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op6_out_1,0x5010D1C4,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_op7_out_0,0x5010D1C8,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_op7_out_1,0x5010D1CC,0,(0:20),R,
DFEMDMTOP,dbg_dcsn_phasei_rx0,0x5010D1D0,0,(0:13),R,
DFEMDMTOP,dbg_dcsn_phaseq_rx0,0x5010D1D0,0,(14:27),R,
DFEMDMTOP,dbg_dcsn_thrshld_rx0,0x5010D1D4,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_thrshldphase_rx0_0,0x5010D1D8,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_thrshldphase_rx0_1,0x5010D1DC,0,(0:18),R,
DFEMDMTOP,dbg_dcsn_phasei_rx1,0x5010D1E0,0,(0:13),R,
DFEMDMTOP,dbg_dcsn_phaseq_rx1,0x5010D1E0,0,(14:27),R,
DFEMDMTOP,dbg_dcsn_thrshld_rx1,0x5010D1E4,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_thrshldphase_rx1_0,0x5010D1E8,0,(0:31),R,
DFEMDMTOP,dbg_dcsn_thrshldphase_rx1_1,0x5010D1EC,0,(0:18),R,
DFEMDMTOP,dbg_dcsnstgctrl_state,0x5010D1EC,0,(19:21),R,
DFEMDMTOP,dbg_dcsnstg_en,0x5010D1EC,0,(22:22),R,
DFEMDMTOP,dbg_dcsnstg_rst,0x5010D1EC,0,(23:23),R,
DFEMDMTOP,dbg_dcsn_op0_in1,0x5010D1F0,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op0_in2,0x5010D1F4,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op1_in1,0x5010D1F8,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op1_in2,0x5010D1FC,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op2_in1,0x5010D200,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op2_in2,0x5010D204,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op3_in1,0x5010D208,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op3_in2,0x5010D20C,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op4_in1,0x5010D210,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op4_in2,0x5010D214,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op5_in1,0x5010D218,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op5_in2,0x5010D21C,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op6_in1,0x5010D220,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op6_in2,0x5010D224,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op7_in1,0x5010D228,0,(0:25),R,
DFEMDMTOP,dbg_dcsn_op7_in2,0x5010D22C,0,(0:25),R,
DFEMDMTOP,rx0_dbg_buf_phase_i_data_in,0x5010D230,0,(0:13),R,
DFEMDMTOP,rx0_dbg_buf_phase_q_data_in,0x5010D230,0,(14:27),R,
DFEMDMTOP,rx1_dbg_buf_phase_i_data_in,0x5010D234,0,(0:13),R,
DFEMDMTOP,rx1_dbg_buf_phase_q_data_in,0x5010D234,0,(14:27),R,
DFEMDMTOP,rx0_dbg_pausedtct,0x5010D234,0,(28:28),R,
DFEMDMTOP,rx1_dbg_pausedtct,0x5010D234,0,(29:29),R,
DFEMDMTOP,rx0_dbg_framedtctd,0x5010D234,0,(30:30),R,
DFEMDMTOP,rx1_dbg_framedtctd,0x5010D234,0,(31:31),R,
DFEMDMTOP,rx0_dbg_frameend,0x5010D238,0,(0:0),R,
DFEMDMTOP,rx1_dbg_frameend,0x5010D238,0,(1:1),R,
DFEMDMTOP,rx0_dbg_framedtct_en,0x5010D238,0,(2:2),R,
DFEMDMTOP,rx0_dbg_framedtct_rst,0x5010D238,0,(3:3),R,
DFEMDMTOP,rx1_dbg_framedtct_en,0x5010D238,0,(4:4),R,
DFEMDMTOP,rx1_dbg_framedtct_rst,0x5010D238,0,(5:5),R,
DFEMDMTOP,rx0_dbg_patterndtct_en,0x5010D238,0,(6:6),R,
DFEMDMTOP,rx0_dbg_patterndtct_rst,0x5010D238,0,(7:7),R,
DFEMDMTOP,rx1_dbg_patterndtct_en,0x5010D238,0,(8:8),R,
DFEMDMTOP,rx1_dbg_patterndtct_rst,0x5010D238,0,(9:9),R,
DFEMDMTOP,rx0_dbg_validframe,0x5010D238,0,(10:10),R,
DFEMDMTOP,rx1_dbg_validframe,0x5010D238,0,(11:11),R,
DFEMDMTOP,dbg_multirx_tworxon,0x5010D238,0,(12:12),R,
DFEMDMTOP,dbg_multirx_rx1win,0x5010D238,0,(13:13),R,
DFEMDMTOP,dbg_mdmmultirxctrl_state,0x5010D238,0,(14:17),R,
DFEMDMTOP,dbg_rxloopctrl_mdmreq,0x5010D238,0,(18:18),R,
DFEMDMTOP,dbg_rxloopctrl_mdmrecreq,0x5010D238,0,(19:19),R,
DFEMDMTOP,dbg_rxloopctrl_mdmaprv,0x5010D238,0,(20:20),R,
DFEMDMTOP,dbg_rxloopctrl_mdmfrc,0x5010D238,0,(21:21),R,
DFEMDMTOP,dbg_rxloopctrl_mdmdeadzone,0x5010D238,0,(22:22),R,
DFEMDMTOP,dbg_rxloopctrl_dferst,0x5010D238,0,(23:23),R,
DFEMDMTOP,dbg_rxloopctrlstate,0x5010D238,0,(24:27),R,
DFEMDMTOP,dbg_rxloopallowdc,0x5010D238,0,(28:28),R,
DFEMDMTOP,buffer_data_in_sel,0x5010D238,0,(29:29),R,
DFEMDMTOP,dbg_adcintf_data_in_rdy,0x5010D238,0,(30:30),R,
DFEMDMTOP,dbg_polyphase_data_in_rdy,0x5010D238,0,(31:31),R,
DFEMDMTOP,dbg_polyphase_serial_en,0x5010D23C,0,(0:0),R,
DFEMDMTOP,dbg_notch_data_in_rdy,0x5010D23C,0,(1:1),R,
DFEMDMTOP,dbg_notch_serial_en,0x5010D23C,0,(2:2),R,
DFEMDMTOP,dbg_cic_deci_data_in_rdy,0x5010D23C,0,(3:3),R,
DFEMDMTOP,dbg_hpf_data_in_rdy,0x5010D23C,0,(4:4),R,
DFEMDMTOP,dbg_hpf_serial_en,0x5010D23C,0,(5:5),R,
DFEMDMTOP,dbg_rssi_data_out_rdy,0x5010D23C,0,(6:6),R,
DFEMDMTOP,dbg_mdm_buffer_data_in_rdy,0x5010D23C,0,(7:7),R,
DFEMDMTOP,dbg_mdm_buffer_serial_en,0x5010D23C,0,(8:8),R,
DFEMDMTOP,dbg_sml0_adcintf_data_out_rdy,0x5010D23C,0,(9:9),R,
DFEMDMTOP,dbg_sml0_progout_data_out0_rdy,0x5010D23C,0,(10:10),R,
DFEMDMTOP,dbg_sml0_progout_data_out1_rdy,0x5010D23C,0,(11:11),R,
DFEMDMTOP,dbg_sml0_rssi_data_out_rdy,0x5010D23C,0,(12:12),R,
DFEMDMTOP,dbg_adcout_i,0x5010D23C,0,(13:24),R,
DFEMDMTOP,dbg_adcout_q,0x5010D240,0,(0:11),R,
DFEMDMTOP,dbg_adcintf_data_in_ipath,0x5010D240,0,(12:23),R,
DFEMDMTOP,dbg_adcintf_data_in_qpath,0x5010D244,0,(0:11),R,
DFEMDMTOP,dbg_polyphase_data_in_ipath,0x5010D244,0,(12:23),R,
DFEMDMTOP,dbg_polyphase_data_in_qpath,0x5010D248,0,(0:11),R,
DFEMDMTOP,dbg_notch_data_in_ipath,0x5010D248,0,(12:27),R,
DFEMDMTOP,dbg_notch_data_in_qpath,0x5010D24C,0,(0:15),R,
DFEMDMTOP,dbg_cic_deci_data_in_ipath,0x5010D24C,0,(16:31),R,
DFEMDMTOP,dbg_cic_deci_data_in_qpath,0x5010D250,0,(0:15),R,
DFEMDMTOP,dbg_hpf_data_in_ipath,0x5010D250,0,(16:31),R,
DFEMDMTOP,dbg_hpf_data_in_qpath,0x5010D254,0,(0:15),R,
DFEMDMTOP,dbg_adcintf_data_out_ipath,0x5010D254,0,(16:27),R,
DFEMDMTOP,dbg_adcintf_data_out_qpath,0x5010D258,0,(0:11),R,
DFEMDMTOP,dbg_polyphase_data_out_ipath,0x5010D258,0,(12:27),R,
DFEMDMTOP,dbg_polyphase_data_out_qpath,0x5010D25C,0,(0:15),R,
DFEMDMTOP,dbg_notch_data_out_ipath,0x5010D25C,0,(16:31),R,
DFEMDMTOP,dbg_notch_data_out_qpath,0x5010D260,0,(0:15),R,
DFEMDMTOP,dbg_cic_deci_data_out_ipath,0x5010D260,0,(16:31),R,
DFEMDMTOP,dbg_cic_deci_data_out_qpath,0x5010D264,0,(0:15),R,
DFEMDMTOP,dbg_hpf_data_out_ipath,0x5010D264,0,(16:31),R,
DFEMDMTOP,dbg_hpf_data_out_qpath,0x5010D268,0,(0:15),R,
DFEMDMTOP,dbg_rssi_data_out,0x5010D26C,0,(0:23),R,
DFEMDMTOP,dbg_mdm_buffer_data_in_ipath,0x5010D270,0,(0:13),R,
DFEMDMTOP,dbg_mdm_buffer_data_in_qpath,0x5010D270,0,(14:27),R,
DFEMDMTOP,dbg_sml0_adcintf_data_out_ipath,0x5010D274,0,(0:11),R,
DFEMDMTOP,dbg_sml0_adcintf_data_out_qpath,0x5010D274,0,(12:23),R,
DFEMDMTOP,dbg_sml0_progout_data_out0_ipath,0x5010D278,0,(0:15),R,
DFEMDMTOP,dbg_sml0_progout_data_out0_qpath,0x5010D278,0,(16:31),R,
DFEMDMTOP,dbg_sml0_progout_data_out1_ipath,0x5010D27C,0,(0:15),R,
DFEMDMTOP,dbg_sml0_progout_data_out1_qpath,0x5010D27C,0,(16:31),R,
DFEMDMTOP,dbg_sml0_rssi_data_out,0x5010D280,0,(0:23),R,
DFEMDMTOP,dbg_pause,0x5010D280,0,(24:24),R,
DFEMDMTOP,dbg_pauserst,0x5010D280,0,(25:25),R,
DFEMDMTOP,dbg_pwidth_timeoutflag,0x5010D280,0,(26:26),R,
DFEMDMTOP,dbg_pmnt_state,0x5010D280,0,(27:30),R,
DFEMDMTOP,dbg_pmnt_amp_flag_trig,0x5010D280,0,(31:31),R,
DFEMDMTOP,dbg_pmnt_phs_flag_trig,0x5010D284,0,(0:0),R,
DFEMDMTOP,dbg_pmnt_pdet_phs_fall,0x5010D284,0,(1:1),R,
DFEMDMTOP,dbg_pmnt_pdet_amp_fall,0x5010D284,0,(2:2),R,
DFEMDMTOP,dbg_pmnt_fall_trig,0x5010D284,0,(3:3),R,
DFEMDMTOP,trx_rxiadcclbdn,0x5010D284,0,(4:4),R,
DFEMDMTOP,trx_rxqadcclbdn,0x5010D284,0,(5:5),R,
DFEMDMTOP,trx_rxiadcclbfld,0x5010D284,0,(6:6),R,
DFEMDMTOP,trx_rxqadcclbfld,0x5010D284,1,(7:7),R,
DFEMDMTOP,trx_rxiadcdlyclbout,0x5010D284,2,(8:12),R,
DFEMDMTOP,trx_rxqadcdlyclbout,0x5010D284,3,(13:17),R,
DFEMDMTOP,dbg_polyphase_cur_count_ipath,0x5010D284,0,(18:19),R,
DFEMDMTOP,dbg_cic_deci_cur_count_ipath,0x5010D284,0,(20:25),R,
DFEMDMTOP,dbg_polyphase_cur_count_qpath,0x5010D284,0,(26:27),R,
DFEMDMTOP,dbg_cic_deci_cur_count_qpath,0x5010D288,0,(0:5),R,
DFEMDMTOP,dbg_dmactrl0_tx_state,0x5010D288,0,(6:7),R,
DFEMDMTOP,dbg_dmactrl0_rx_state,0x5010D288,0,(8:9),R,
DFEMDMTOP,dbg_dmactrl0_tx_ser_state,0x5010D288,0,(10:10),R,
DFEMDMTOP,dbg_dmactrl0_rx_ser_state,0x5010D288,0,(11:11),R,
DFEMDMTOP,dbg_dmactrl1_tx_state,0x5010D288,0,(12:13),R,
DFEMDMTOP,dbg_dmactrl1_rx_state,0x5010D288,0,(14:15),R,
DFEMDMTOP,dbg_dmactrl1_tx_ser_state,0x5010D288,0,(16:16),R,
DFEMDMTOP,dbg_dmactrl1_rx_ser_state,0x5010D288,0,(17:17),R,
DFEMDMTOP,dbg_rssi_dc_ofst_ipath,0x5010D288,0,(18:29),R,
DFEMDMTOP,dbg_rssi_dc_ofst_qpath,0x5010D28C,0,(0:11),R,
DFEMDMTOP,dbg_rssi_dc_comp_ipath,0x5010D28C,0,(12:23),R,
DFEMDMTOP,dbg_rssi_dc_comp_qpath,0x5010D290,0,(0:11),R,
DFEMDMTOP,dbg_adc_sat_flag_ipath,0x5010D290,0,(12:12),R,
DFEMDMTOP,dbg_adc_sat_flag_qpath,0x5010D290,0,(13:13),R,
DFEMDMTOP,spare_dfe_mdm_rd_0,0x5010D294,0,(0:31),R,Spare
DFEMDMTOP,spare_dfe_mdm_rd_1,0x5010D298,0,(0:31),R,Spare
DFEMDMTOP,spare_dfe_mdm_rd_2,0x5010D29C,0,(0:31),R,Spare
DFEMDMTOP,spare_dfe_mdm_rd_3,0x5010D2A0,0,(0:31),R,Spare
DFEMDMTOP,spare_dfe_mdm_rd_4,0x5010D2A4,0,(0:31),R,Spare
DFEMDMTOP,spare_dfe_mdm_rd_5,0x5010D2A8,0,(0:31),R,Spare
DFEMDMTOP,spare_dfe_mdm_rd_6,0x5010D2AC,0,(0:31),R,Spare
DFEMDMTOP,spare_dfe_mdm_rd_7,0x5010D2B0,0,(0:31),R,Spare
DSPTOP,xtmem_prid,0x5010E800,0,(0:15),R/W,
DSPTOP,xtmem_tmode,0x5010E800,0,(16:16),R/W,
DSPTOP,xtmem_tmodeclkgateoverride,0x5010E800,0,(17:17),R/W,
DSPTOP,xtmem_pdebugenable,0x5010E800,0,(18:18),R/W,
DSPTOP,Reserved,0x5010E800,0,(19:19),R/W,
DSPTOP,Reserved,0x5010E800,0,(20:20),R/W,
DSPTOP,xtmem_breakin,0x5010E800,0,(21:21),R/W,
DSPTOP,xtmem_breakoutack,0x5010E800,0,(22:22),R/W,
DSPTOP,Reserved,0x5010E800,0,(23:31),R/W,
DSPTOP,intrpt_mux_sel_level_irq0,0x5010E804,2,(0:1),R/W,
DSPTOP,intrpt_mux_sel_level_irq1,0x5010E804,2,(2:3),R/W,
DSPTOP,intrpt_mux_sel_level_irq2,0x5010E804,2,(4:5),R/W,
DSPTOP,intrpt_mux_sel_level_irq3,0x5010E804,2,(6:7),R/W,
DSPTOP,intrpt_mux_sel_level_irq4,0x5010E804,2,(8:9),R/W,
DSPTOP,intrpt_mux_sel_level_irq5,0x5010E804,2,(10:11),R/W,
DSPTOP,intrpt_mux_sel_level_irq6,0x5010E804,2,(12:13),R/W,
DSPTOP,intrpt_mux_sel_level_irq7,0x5010E804,1,(14:15),R/W,
DSPTOP,intrpt_mux_sel_level_irq8,0x5010E804,1,(16:17),R/W,
DSPTOP,intrpt_mux_sel_level_irq9,0x5010E804,1,(18:19),R/W,
DSPTOP,intrpt_mux_sel_level_irq10,0x5010E804,1,(20:21),R/W,
DSPTOP,intrpt_mux_sel_level_irq11,0x5010E804,2,(22:23),R/W,
DSPTOP,intrpt_mux_sel_level_irq12,0x5010E804,1,(24:25),R/W,
DSPTOP,intrpt_mux_sel_level_irq13,0x5010E804,1,(26:27),R/W,
DSPTOP,intrpt_mux_sel_level_irq14,0x5010E804,2,(28:29),R/W,
DSPTOP,intrpt_mux_sel_level_irq15,0x5010E804,1,(30:31),R/W,
DSPTOP,intrpt_mux_sel_level_irq16,0x5010E808,1,(0:1),R/W,
DSPTOP,intrpt_mux_sel_level_irq17,0x5010E808,0,(2:3),R/W,
DSPTOP,intrpt_mux_sel_level_irq18,0x5010E808,0,(4:5),R/W,
DSPTOP,intrpt_mux_sel_level_irq19,0x5010E808,0,(6:7),R/W,
DSPTOP,intrpt_mux_sel_level_irq20,0x5010E808,0,(8:9),R/W,
DSPTOP,intrpt_mux_sel_level_irq21,0x5010E808,0,(10:11),R/W,
DSPTOP,intrpt_mux_sel_level_irq22,0x5010E808,0,(12:13),R/W,
DSPTOP,intrpt_mux_sel_level_irq23,0x5010E808,0,(14:15),R/W,
DSPTOP,intrpt_mux_sel_level_irq24,0x5010E808,0,(16:17),R/W,
DSPTOP,intrpt_mux_sel_level_irq25,0x5010E808,0,(18:19),R/W,
DSPTOP,intrpt_mux_sel_level_irq26,0x5010E808,0,(20:21),R/W,
DSPTOP,intrpt_mux_sel_level_irq27,0x5010E808,0,(22:23),R/W,
DSPTOP,intrpt_mux_sel_level_irq28,0x5010E808,0,(24:25),R/W,
DSPTOP,intrpt_mux_sel_level_irq29,0x5010E808,0,(26:27),R/W,
DSPTOP,intrpt_mux_sel_level_irq30,0x5010E808,0,(28:29),R/W,
DSPTOP,intrpt_mux_sel_level_irq31,0x5010E808,0,(30:31),R/W,
DSPTOP,intrpt_mux_sel_level_irq32,0x5010E80C,0,(0:1),R/W,
DSPTOP,intrpt_mux_sel_level_irq33,0x5010E80C,0,(2:3),R/W,
DSPTOP,intrpt_mux_sel_level_irq34,0x5010E80C,0,(4:5),R/W,
DSPTOP,intrpt_mux_sel_level_irq35,0x5010E80C,0,(6:7),R/W,
DSPTOP,intrpt_mux_sel_level_irq36,0x5010E80C,0,(8:9),R/W,
DSPTOP,intrpt_mux_sel_level_irq37,0x5010E80C,0,(10:11),R/W,
DSPTOP,intrpt_mux_sel_level_irq38,0x5010E80C,0,(12:13),R/W,
DSPTOP,intrpt_mux_sel_level_irq39,0x5010E80C,0,(14:15),R/W,
DSPTOP,intrpt_mux_sel_level_irq40,0x5010E80C,0,(16:17),R/W,
DSPTOP,intrpt_mux_sel_level_irq41,0x5010E80C,0,(18:19),R/W,
DSPTOP,intrpt_mux_sel_level_irq42,0x5010E80C,0,(20:21),R/W,
DSPTOP,intrpt_mux_sel_level_irq43,0x5010E80C,0,(22:23),R/W,
DSPTOP,intrpt_mux_sel_level_irq44,0x5010E80C,0,(24:25),R/W,
DSPTOP,intrpt_mux_sel_level_irq45,0x5010E80C,0,(26:27),R/W,
DSPTOP,intrpt_mux_sel_level_irq46,0x5010E80C,0,(28:29),R/W,
DSPTOP,intrpt_mux_sel_level_irq47,0x5010E80C,0,(30:31),R/W,
DSPTOP,intrpt_mux_level1_pin0,0x5010E810,7,(0:5),R/W,
DSPTOP,intrpt_mux_level1_pin1,0x5010E810,8,(6:11),R/W,
DSPTOP,intrpt_mux_level1_pin2,0x5010E810,9,(12:17),R/W,
DSPTOP,intrpt_mux_level1_pin3,0x5010E810,10,(18:23),R/W,
DSPTOP,intrpt_mux_level1_pin4,0x5010E810,12,(24:29),R/W,
DSPTOP,intrpt_mux_level1_pin5,0x5010E814,13,(0:5),R/W,
DSPTOP,intrpt_mux_level1_pin6,0x5010E814,15,(6:11),R/W,
DSPTOP,intrpt_mux_level1_pin7,0x5010E814,16,(12:17),R/W,
DSPTOP,intrpt_mux_level1_pin8,0x5010E814,20,(18:23),R/W,
DSPTOP,intrpt_mux_level1_pin9,0x5010E814,20,(24:29),R/W,
DSPTOP,intrpt_mux_level1_pin10,0x5010E818,20,(0:5),R/W,
DSPTOP,intrpt_mux_level1_pin11,0x5010E818,20,(6:11),R/W,
DSPTOP,intrpt_mux_level2_pin0,0x5010E818,0,(12:17),R/W,
DSPTOP,intrpt_mux_level2_pin1,0x5010E818,1,(18:23),R/W,
DSPTOP,intrpt_mux_level2_pin2,0x5010E818,2,(24:29),R/W,
DSPTOP,intrpt_mux_level2_pin3,0x5010E81C,3,(0:5),R/W,
DSPTOP,intrpt_mux_level2_pin4,0x5010E81C,4,(6:11),R/W,
DSPTOP,intrpt_mux_level2_pin5,0x5010E81C,5,(12:17),R/W,
DSPTOP,intrpt_mux_level2_pin6,0x5010E81C,6,(18:23),R/W,
DSPTOP,intrpt_mux_level2_pin7,0x5010E81C,11,(24:29),R/W,
DSPTOP,intrpt_mux_level2_pin8,0x5010E820,14,(0:5),R/W,
DSPTOP,intrpt_mux_level2_pin9,0x5010E820,20,(6:11),R/W,
DSPTOP,intrpt_mux_level2_pin10,0x5010E820,20,(12:17),R/W,
DSPTOP,intrpt_mux_level2_pin11,0x5010E820,20,(18:23),R/W,
DSPTOP,intrpt_mux_level2_pin12,0x5010E820,20,(24:29),R/W,
DSPTOP,intrpt_mux_level2_pin13,0x5010E824,20,(0:5),R/W,
DSPTOP,intrpt_mux_level2_pin14,0x5010E824,20,(6:11),R/W,
DSPTOP,intrpt_mux_level3_pin0,0x5010E824,20,(12:17),R/W,
DSPTOP,intrpt_mux_level3_pin1,0x5010E824,20,(18:23),R/W,
DSPTOP,intrpt_mux_level3_pin2,0x5010E824,20,(24:29),R/W,
DSPTOP,Reserved,0x5010E828,0,(0:11),R/W,
DSPTOP,spare_dsptop_rom0,0x5010E82C,65535,(0:31),R/W,Spare
DSPTOP,spare_dsptop_rom1,0x5010E830,65535,(0:31),R/W,Spare
DSPTOP,Reserved,0x5010E834,0,(0:31),R/W,
DSPTOP,spare_dsptop_otp0,0x5010E838,65535,(0:31),R/W,Spare
DSPTOP,spare_dsptop_otp1,0x5010E83C,65535,(0:31),R/W,Spare
DSPTOP,Reserved,0x5010E840,0,(0:31),R/W,
DSPTOP,Reserved,0x5010E844,0,(0:31),R/W,
DSPTOP,timer_rst_val,0x5010E848,0,(0:31),R/W,
DSPTOP,timer_en,0x5010E84C,0,(0:0),R/W,
DSPTOP,timer_rst,0x5010E84C,0,(1:1),R/W,
DSPTOP,DSPTIMER_INT_EN,0x5010E84C,65535,(2:17),R/W,
DSPTOP,BBI_TRIG_EN,0x5010E84C,0,(18:24),R/W,
DSPTOP,Reserved,0x5010E84C,0,(25:26),R/W,
DSPTOP,Reserved,0x5010E84C,0,(27:28),R/W,
DSPTOP,Reserved,0x5010E84C,0,(29:30),R/W,
DSPTOP,Reserved,0x5010E84C,0,(31:31),R/W,
DSPTOP,Reserved,0x5010E850,0,(0:1),R/W,
DSPTOP,Reserved,0x5010E850,0,(2:3),R/W,
DSPTOP,Reserved,0x5010E850,0,(4:5),R/W,
DSPTOP,Reserved,0x5010E850,0,(6:6),R/W,
DSPTOP,spare_dsptop_reg0,0x5010E854,65535,(0:31),R/W,Spare
DSPTOP,spare_dsptop_reg1,0x5010E858,65535,(0:31),R/W,Spare
DSPTOP,spare_dsptop_reg2,0x5010E85C,65535,(0:31),R/W,Spare
DSPTOP,spare_dsptop_reg3,0x5010E860,65535,(0:31),R/W,Spare
DSPTOP,Reserved,0x5010E864,0,(0:31),R/W,
DSPTOP,Reserved,0x5010E868,0,(0:31),R/W,
DSPTOP,Reserved,0x5010E86C,7,(0:2),R/W,
DSPTOP,Reserved,0x5010E86C,7,(3:5),R/W,
DSPTOP,dram_TADD,0x5010E86C,0,(6:17),R/W,
DSPTOP,dram_TBWE_N_lsb,0x5010E870,0,(0:31),R/W,
DSPTOP,dram_TBWE_N_msb,0x5010E874,0,(0:31),R/W,
DSPTOP,dram_TCS_N,0x5010E878,0,(0:0),R/W,
DSPTOP,dram_TDB_N,0x5010E878,1,(1:1),R/W,
DSPTOP,dram_TDI_lsb,0x5010E87C,0,(0:31),R/W,
DSPTOP,dram_TDI_msb,0x5010E880,0,(0:31),R/W,
DSPTOP,dram_TME_N,0x5010E884,1,(0:0),R/W,
DSPTOP,dram_TWE_N,0x5010E884,0,(1:1),R/W,
DSPTOP,drom_TEST1,0x5010E884,0,(2:2),R/W,
DSPTOP,iram_TADD,0x5010E884,0,(3:14),R/W,
DSPTOP,iram_TBWE_N_lsb,0x5010E888,0,(0:31),R/W,
DSPTOP,iram_TBWE_N_msb,0x5010E88C,0,(0:31),R/W,
DSPTOP,iram_TCS_N,0x5010E890,0,(0:0),R/W,
DSPTOP,iram_TDB_N,0x5010E890,1,(1:1),R/W,
DSPTOP,iram_TDI_lsb,0x5010E894,0,(0:31),R/W,
DSPTOP,iram_TDI_msb,0x5010E898,0,(0:31),R/W,
DSPTOP,iram_TME_N,0x5010E89C,1,(0:0),R/W,
DSPTOP,iram_TWE_N,0x5010E89C,0,(1:1),R/W,
DSPTOP,irom_TEST1,0x5010E89C,0,(2:2),R/W,
DSPTOP,tram_TADD,0x5010E89C,0,(3:11),R/W,
DSPTOP,irom_LS,0x5010E89C,0,(12:12),R/W,
DSPTOP,drom_LS,0x5010E89C,0,(13:13),R/W,
DSPTOP,Reserved,0x5010E89C,0,(14:14),R/W,
DSPTOP,Reserved,0x5010E8A0,0,(0:31),R/W,
DSPTOP,tram_TBWE_N,0x5010E8A4,0,(0:7),R/W,
DSPTOP,Reserved,0x5010E8A4,0,(8:31),R/W,
DSPTOP,tram_TCS_N,0x5010E8A8,0,(0:0),R/W,
DSPTOP,tram_TDB_N,0x5010E8A8,1,(1:1),R/W,
DSPTOP,Reserved,0x5010E8AC,0,(0:31),R/W,
DSPTOP,tram_TDI,0x5010E8B0,0,(0:7),R/W,
DSPTOP,Reserved,0x5010E8B0,0,(8:31),R/W,
DSPTOP,tram_TME_N,0x5010E8B4,1,(0:0),R/W,
DSPTOP,tram_TWE_N,0x5010E8B4,0,(1:1),R/W,
DSPTOP,spare_dsptop_testreg0,0x5010E8B8,0,(0:31),R/W,Spare
DSPTOP,spare_dsptop_testreg1,0x5010E8BC,0,(0:31),R/W,Spare
DSPTOP,Reserved,0x5010E8C0,0,(0:31),R/W,
DSPTOP,Reserved,0x5010E8C4,0,(0:31),R/W,
DSPTOP,xtmem_pdebugdata,0x5010E8C8,0,(0:31),R,
DSPTOP,xtmem_pdebuginst,0x5010E8CC,0,(0:31),R,
DSPTOP,xtmem_pdebugls0stat,0x5010E8D0,0,(0:31),R,
DSPTOP,xtmem_pdebugpc,0x5010E8D4,0,(0:31),R,
DSPTOP,xtmem_pdebuginbpif,0x5010E8D8,0,(0:7),R,
DSPTOP,Reserved,0x5010E8D8,0,(8:15),R,
DSPTOP,Reserved,0x5010E8D8,0,(16:23),R,
DSPTOP,xtmem_pdebugstatus,0x5010E8D8,0,(24:31),R,
DSPTOP,xtmem_pfaultinfo_lsb,0x5010E8DC,0,(0:31),R,
DSPTOP,xtmem_pfaultinfo_msb,0x5010E8E0,0,(0:31),R,
DSPTOP,Reserved,0x5010E8E4,0,(0:3),R,
DSPTOP,xtmem_doubleexceptionerror,0x5010E8E4,0,(4:4),R,
DSPTOP,xtmem_pfatalerror,0x5010E8E4,0,(5:5),R,
DSPTOP,xtmem_pfaultinfovalid,0x5010E8E4,0,(6:6),R,
DSPTOP,xtmem_xocdmode,0x5010E8E4,0,(7:7),R,
DSPTOP,xtmem_debugmode,0x5010E8E4,0,(8:8),R,
DSPTOP,xtmem_breakinack,0x5010E8E4,0,(9:9),R,
DSPTOP,xtmem_breakout,0x5010E8E4,0,(10:10),R,
DSPTOP,spare_dsptop_testrdreg0,0x5010E8E8,0,(0:31),R,Spare
DSPTOP,spare_dsptop_testrdreg1,0x5010E8EC,0,(0:31),R,Spare
DSPTOP,Reserved,0x5010E8F0,0,(0:31),R,
DSPTOP,Reserved,0x5010E8F4,0,(0:31),R,
DSPTOP,tram_TADDO,0x5010E8F8,0,(0:8),R,
DSPTOP,Reserved,0x5010E8F8,0,(9:11),R,
DSPTOP,dram_TMO,0x5010E8F8,0,(12:12),R,
DSPTOP,dram_TWEO,0x5010E8F8,0,(13:13),R,
DSPTOP,iram_TADDO,0x5010E8F8,0,(14:25),R,
DSPTOP,iram_TMO,0x5010E8F8,0,(26:26),R,
DSPTOP,iram_TWEO,0x5010E8F8,0,(27:27),R,
DSPTOP,dram_TADDO,0x5010E8FC,0,(0:11),R,
DSPTOP,tram_TMO,0x5010E8FC,0,(12:12),R,
DSPTOP,tram_TWEO,0x5010E8FC,0,(13:13),R,
DSPTOP,spare_dsptop_testrdreg2,0x5010E900,0,(0:31),R,Spare
DSPTOP,spare_dsptop_testrdreg3,0x5010E904,0,(0:31),R,Spare
DSPTOP,Reserved,0x5010E908,0,(0:31),R,
DSPTOP,Reserved,0x5010E90C,0,(0:31),R,
DSPTOP,IQDMA1_MON_VALID,0x5010E910,0,(0:0),R,
DSPTOP,IQDMA2_MON_VALID,0x5010E910,0,(1:1),R,
DSPTOP,Reserved,0x5010E910,0,(2:31),R,
DSPTOP,IQDMA1_MON_I,0x5010E914,0,(0:15),R,
DSPTOP,IQDMA1_MON_Q,0x5010E914,0,(16:31),R,
DSPTOP,IQDMA2_MON_I,0x5010E918,0,(0:15),R,
DSPTOP,IQDMA2_MON_Q,0x5010E918,0,(16:31),R,
DSPTOP,IQDMA1_MON_EN,0x5010E91C,0,(0:0),R/W,
DSPTOP,IQDMA2_MON_EN,0x5010E91C,0,(1:1),R/W,
DSPTOP,TRACECTRL_MON_SEL,0x5010E91C,0,(2:5),R/W,
DSPTOP,TIMER_MON_SEL,0x5010E91C,0,(6:9),R/W,
DSPTOP,BBI_MON_SEL,0x5010E91C,0,(10:13),R/W,
DSPTOP,HMB_MON_SEL,0x5010E91C,0,(14:17),R/W,
DSPTOP,IQDMA1_MON_SEL,0x5010E91C,0,(18:21),R/W,
DSPTOP,IQDMA2_MON_SEL,0x5010E91C,0,(22:25),R/W,
DSPTOP,Reserved,0x5010E91C,0,(26:31),R/W,
DSPTOP,MDM_RxCtrlDzApprv_GPO_EN,0x5010E920,0,(0:0),R/W,
DSPTOP,MDM_RxCtrlDzAck_GPO_EN,0x5010E920,0,(1:1),R/W,
DSPTOP,MDM_RxCtrlDzSig_GPO_EN,0x5010E920,0,(2:2),R/W,
DSPTOP,GPI_3_0_SEL,0x5010E920,0,(3:6),R/W,
DSPTOP,GPI_3_0_ODMUX_EN,0x5010E920,0,(7:10),R/W,
DSPTOP,GPI_9_8_SEL,0x5010E920,0,(11:12),R/W,
DSPTOP,Reserved,0x5010E920,0,(13:31),R/W,
DSPTOP,DSPTOP_ODMUX_OUT1_SEL,0x5010E924,0,(0:9),R/W,
DSPTOP,Reserved,0x5010E924,0,(10:15),R/W,
DSPTOP,DSPTOP_ODMUX_OUT2_SEL,0x5010E924,0,(16:25),R/W,
DSPTOP,Reserved,0x5010E924,0,(26:31),R/W,
DSPTOP,DSPTOP_ODMUX_OUT3_SEL,0x5010E928,0,(0:9),R/W,
DSPTOP,Reserved,0x5010E928,0,(10:15),R/W,
DSPTOP,DSPTOP_ODMUX_OUT4_SEL,0x5010E928,0,(16:25),R/W,
DSPTOP,Reserved,0x5010E928,0,(26:31),R/W,
DSPTOP,DSPTOP_IDMUX_SEL0,0x5010E92C,0,(0:1),R/W,
DSPTOP,DSPTOP_IDMUX_SEL1,0x5010E92C,0,(2:3),R/W,
DSPTOP,DSPTOP_IDMUX_SEL2,0x5010E92C,0,(4:5),R/W,
DSPTOP,DSPTOP_IDMUX_SEL3,0x5010E92C,0,(6:7),R/W,
DSPTOP,DSPTOP_IDMUX_SEL4,0x5010E92C,0,(8:9),R/W,
DSPTOP,DSPTOP_IDMUX_SEL5,0x5010E92C,0,(10:11),R/W,
DSPTOP,DSPTOP_IDMUX_SEL6,0x5010E92C,0,(12:13),R/W,
DSPTOP,DSPTOP_IDMUX_SEL7,0x5010E92C,0,(14:15),R/W,
DSPTOP,DSPTOP_IDMUX_SEL8,0x5010E92C,0,(16:17),R/W,
DSPTOP,DSPTOP_IDMUX_SEL9,0x5010E92C,0,(18:19),R/W,
DSPTOP,DSPTOP_IDMUX_SEL10,0x5010E92C,0,(20:21),R/W,
DSPTOP,DSPTOP_IDMUX_SEL11,0x5010E92C,0,(22:23),R/W,
DSPTOP,DSPTOP_IDMUX_SEL12,0x5010E92C,0,(24:25),R/W,
DSPTOP,DSPTOP_IDMUX_SEL13,0x5010E92C,0,(26:27),R/W,
DSPTOP,DSPTOP_IDMUX_SEL14,0x5010E92C,0,(28:29),R/W,
DSPTOP,DSPTOP_IDMUX_SEL15,0x5010E92C,0,(30:31),R/W,
DSPTOP,DSPTOP_IDMUX_SEL16,0x5010E930,0,(0:1),R/W,
DSPTOP,DSPTOP_IDMUX_SEL17,0x5010E930,0,(2:3),R/W,
DSPTOP,DSPTOP_IDMUX_SEL18,0x5010E930,0,(4:5),R/W,
DSPTOP,DSPTOP_IDMUX_SEL19,0x5010E930,0,(6:7),R/W,
DSPTOP,DSPTOP_IDMUX_SEL20,0x5010E930,0,(8:9),R/W,
DSPTOP,DSPTOP_IDMUX_SEL21,0x5010E930,0,(10:11),R/W,
DSPTOP,DSPTOP_IDMUX_SEL22,0x5010E930,0,(12:13),R/W,
DSPTOP,DSPTOP_IDMUX_SEL23,0x5010E930,0,(14:15),R/W,
DSPTOP,DSPTOP_IDMUX_SEL24,0x5010E930,0,(16:17),R/W,
DSPTOP,DSPTOP_IDMUX_SEL25,0x5010E930,0,(18:19),R/W,
DSPTOP,DSPTOP_IDMUX_SEL26,0x5010E930,0,(20:21),R/W,
DSPTOP,DSPTOP_IDMUX_SEL27,0x5010E930,0,(22:23),R/W,
DSPTOP,DSPTOP_IDMUX_SEL28,0x5010E930,0,(24:25),R/W,
DSPTOP,DSPTOP_IDMUX_SEL29,0x5010E930,0,(26:27),R/W,
DSPTOP,DSPTOP_IDMUX_SEL30,0x5010E930,0,(28:29),R/W,
DSPTOP,DSPTOP_IDMUX_SEL31,0x5010E930,0,(30:31),R/W,
DSPTOP,DSPTOP_IDMUX_EN,0x5010E934,0,(0:31),R/W,
DSPTOP,DSPTOP_IDMUX1_INT_EN,0x5010E938,0,(0:0),R/W,
DSPTOP,DSPTOP_IDMUX2_INT_EN,0x5010E938,0,(1:1),R/W,
DSPTOP,DSPTOP_IDMUX3_INT_EN,0x5010E938,0,(2:2),R/W,
DSPTOP,DSPTOP_IDMUX4_INT_EN,0x5010E938,0,(3:3),R/W,
DSPTOP,Reserved,0x5010E938,0,(4:7),R/W,
DSPTOP,DSPTOP_IDMUX1_INT_CLR,0x5010E938,0,(8:8),R/W,
DSPTOP,DSPTOP_IDMUX2_INT_CLR,0x5010E938,0,(9:9),R/W,
DSPTOP,DSPTOP_IDMUX3_INT_CLR,0x5010E938,0,(10:10),R/W,
DSPTOP,DSPTOP_IDMUX4_INT_CLR,0x5010E938,0,(11:11),R/W,
DSPTOP,Reserved,0x5010E938,0,(12:15),R/W,
DSPTOP,DSP_FLT_HNDL_MCUINT_EN,0x5010E938,0,(16:18),R/W,
DSPTOP,Reserved,0x5010E938,0,(19:23),R/W,
DSPTOP,DSP_FLT_HNDL_MCUINT_CLR,0x5010E938,0,(24:26),R/W,
DSPTOP,Reserved,0x5010E938,0,(27:31),R/W,
DSPTOP,DSPTOP_IDMUX1_INT_STAT,0x5010E93C,0,(0:0),R,
DSPTOP,DSPTOP_IDMUX2_INT_STAT,0x5010E93C,0,(1:1),R,
DSPTOP,DSPTOP_IDMUX3_INT_STAT,0x5010E93C,0,(2:2),R,
DSPTOP,DSPTOP_IDMUX4_INT_STAT,0x5010E93C,0,(3:3),R,
DSPTOP,Reserved,0x5010E93C,0,(4:7),R,
DSPTOP,DSP_FLT_HNDL_MCUINT_STAT,0x5010E93C,0,(8:10),R,
DSPTOP,Reserved,0x5010E93C,0,(11:15),R,
DSPTOP,DSPTOP_IDMUX1_INT_STAT_STK,0x5010E93C,0,(16:16),R,
DSPTOP,DSPTOP_IDMUX2_INT_STAT_STK,0x5010E93C,0,(17:17),R,
DSPTOP,DSPTOP_IDMUX3_INT_STAT_STK,0x5010E93C,0,(18:18),R,
DSPTOP,DSPTOP_IDMUX4_INT_STAT_STK,0x5010E93C,0,(19:19),R,
DSPTOP,Reserved,0x5010E93C,0,(20:23),R,
DSPTOP,DSP_FLT_HNDL_MCUINT_STAT_STK,0x5010E93C,0,(24:26),R,
DSPTOP,Reserved,0x5010E93C,0,(27:31),R,
DSPTOP,XTMEM_JTDOEN_FORCE_EN,0x5010E940,1,(0:0),R/W,
DSPTOP,XTMEM_JTDOEN_FORCE_VAL,0x5010E940,1,(1:1),R/W,
DSPTOP,Reserved,0x5010E940,0,(2:2),R/W,
DSPTOP,Reserved,0x5010E940,0,(3:3),R/W,
DSPTOP,Reserved,0x5010E940,0,(4:31),R/W,
SML0PLL,vcocal_cfsfreqselect_h,0x50100000,0,(0:0),R/W,Clock source setting for TDC in calibration mode 0 ==> RF 1 ==> XTAL/Ext. Clk
SML0PLL,vcocal_nfbypass_h,0x50100000,0,(1:1),R/W,Bypass the NF calc operation
SML0PLL,tdc_enable_h,0x50100000,0,(2:2),R/W,General enable of tdc interface block  if set to zero  the operation is holded immediately.
SML0PLL,tdc_nfcc_mode_h,0x50100000,0,(3:3),R/W,NFC Mode: 1: RW mode OR CE (XTAL_LESS) 0: CE (xtal_based) mode
SML0PLL,tdc_frqcheckfielden_h,0x50100000,0,(4:4),R/W,If set  check field (checking for pause)  is bypassed in the frequency mode
SML0PLL,plladjst_g2_waittime,0x50100000,0,(5:19),R/W,Wait time after applying group 2 settings(the number of waiting clock cycles)
SML0PLL,plladjst_pllboostbypass,0x50100000,0,(20:20),R/W,Bypass control signal for bypassing group2 settings if enabled
SML0PLL,spare_sml0pll_romdyn0,0x50100004,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_romdyn1,0x50100008,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x5010000C,0,(0:31),R/W,
SML0PLL,Reserved,0x50100010,0,(0:31),R/W,
SML0PLL,plladjst_pll_lfr1,0x50100014,0,(0:4),R/W,Digital control to trim R1 value
SML0PLL,plladjst_pll_lfr3,0x50100014,0,(5:9),R/W,Digital control to trim R3 value
SML0PLL,plladjst_pll_lfc1,0x50100014,0,(10:16),R/W,Digital control to trim C1 value
SML0PLL,plladjst_pll_lfc2,0x50100014,0,(17:24),R/W,Digital control to trim C2 value
SML0PLL,plladjst_pll_lfc3,0x50100014,0,(25:31),R/W,Digital control to trim C3 value
SML0PLL,plladjst_pll_vcovarbiassel,0x50100018,0,(0:1),R/W,Controls the value and the linearity of the KVCO  0: Varactor bank is biased to 0.3 V (High Kvco but non-linear) 1: varactor bank is biased to 0.1 and 0.9 V (Low Kvco but more linear) 2: Varactor bank is biased to 0.3 V and 0.7V (low Kvco but less linear than 1)  3: Varactor bank is biased to 0.2
SML0PLL,plladjst_pll_icp_g1,0x50100018,0,(2:5),R/W,CP Current Trim(10u->160u  step 10u) setting1
SML0PLL,plladjst_pll_icp_g2,0x50100018,0,(6:9),R/W,CP Current Trim(10u->160u  step 10u) setting2
SML0PLL,spare_sml0pll_romdyn2,0x5010001C,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_romdyn3,0x50100020,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x50100024,0,(0:31),R/W,
SML0PLL,Reserved,0x50100028,0,(0:31),R/W,
SML0PLL,vcocal_cfsfrqtdcncycles_h,0x5010002C,0,(0:3),R/W,Ncycles setting for TDC in calibration mode Number of cycles = ( 2 ^ (Ncycles + 1) )
SML0PLL,vcocal_tdcreadingtarget_h,0x5010002C,0,(4:23),R/W,The target TDC reading that the VCO cal uses to search for the CFS 
SML0PLL,tdc_n_h,0x50100030,0,(0:8),R/W,lnteger part of the initial divison value 
SML0PLL,tdc_f_h,0x50100030,0,(9:28),R/W,Fractional part of the initial divison value 
SML0PLL,tdc_frqtdcncycles_h,0x50100034,8192,(0:20),R/W,Determines the waiting timeout for the analog TDC block operation in frequency mode. If exceeded with no ready flag from analog TDC  this trial is aborted 
SML0PLL,spare_sml0pll_dhdyn1,0x50100038,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x5010003C,0,(0:31),R/W,
SML0PLL,Reserved,0x50100040,0,(0:31),R/W,
SML0PLL,pmnt_purisphsprg_h,0x50100044,0,(0:0),R/W,"pause rising phase programmability : decide if  the ""pdet_phs""  will be edge triggered / level triggered  for ""pause"" rising  edge 0-->edge triggered  1-->level triggered "
SML0PLL,pmnt_purisampprg_h,0x50100044,0,(1:1),R/W,"pause rising ampplitude  programmability :decide if  the ""pdet_amp"" will be edge triggered / level triggered for ""pause"" rising  edge 0-->edge triggered  1-->level triggered"
SML0PLL,pmnt_pufalphsprg_h,0x50100044,0,(2:2),R/W,"pause falling phase  programmability :decide if  the ""pdet_phs"" will be edge triggered / level triggered  for ""pause"" falling  edge 0-->edge triggered 1-->level triggered"
SML0PLL,pmnt_pufalampprg_h,0x50100044,0,(3:3),R/W,"pause falling ampplitude programmability : decide if  the  ""pdet_amp"" will be edge triggered / level triggered  for ""pause"" falling  edge 0-->edge triggered 1-->level triggered"
SML0PLL,pmnt_pufalprg_h,0x50100044,0,(4:5),R/W,"pause falling  programmability  :decide if  the ""pause"" falling  edge  will be by detect (Phase only / Amplitude only / Ored / Anded)  0-->Phase only  1-->Amplitude only 2-->Ored 3-->Anded (for the case of two edge triggered inputs : it's mean that  it is necessary to detect the two edges but not necessary in the same time)"
SML0PLL,pmnt_afterpuphstimeout_h,0x50100044,0,(6:17),R/W,After pause phase timeout waiting time before new pause 0/Fc to 511/Fc with 1/8Fc step(0-->37.9us)
SML0PLL,pmnt_afterpuamptimeout_h,0x50100044,0,(18:29),R/W,After pause amplitude timeout waiting time before new pause 0/Fc to 511/Fc with 1/8Fc step(0-->37.9us)
SML0PLL,pmnt_puwidthtimeout_h,0x50100048,0,(0:11),R/W,Maximum pause width 0/Fc to 511/Fc with 1/8Fc step(0-->37.9us)
SML0PLL,pmnt_putampen_h,0x50100048,0,(12:12),R/W,Pause start amplitude en : enable starting the pause by amplitude detection
SML0PLL,pmnt_putphsen_h,0x50100048,0,(13:13),R/W,Pause start phase en : enable starting the pause by phase detection
SML0PLL,pmnt_rtnbtimeouten_h,0x50100048,0,(14:14),R/W, enable return brfore the time out 
SML0PLL,spare_sml0pll_dhdyn2,0x5010004C,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_dhdyn3,0x50100050,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x50100054,0,(0:31),R/W,
SML0PLL,Reserved,0x50100058,0,(0:31),R/W,
SML0PLL,tdc_dlytdcwtbfrreading_h,0x5010005C,63,(0:5),R/W,Determines the waiting time for the wait state before taking a TDC reading in delay mode. If set to zero  this state will be skipped
SML0PLL,tdc_dlytdcwtaftrreading_h,0x5010005C,1,(6:11),R/W,Determines the waiting time for the wait state after taking a TDC reading in delay mode. If set to zero  this state will be skipped
SML0PLL,tdc_dlytdcnloop_h,0x5010005C,128,(12:26),R/W,Determines the periodicity of executing the delay mode correction Default = 2.5us
SML0PLL,tdc_dlytdcintgain_h,0x50100060,4096,(0:15),R/W,Gain value to be multiplied by the tdc reading in delay mode after the offset is added and the value is bounded around the midpoint Default for Ref=27.12MHz   Loop Gain = 0.5   Nloop = 32
SML0PLL,tdc_dlytdcintlimit_h,0x50100060,32,(16:31),R/W,Limit register to check correctness of the calculated delta_f_dlytdc  if exceeded  TDC interface saturates the ouput to the limit  applies the delay correction  and reports exceedlmtflag to the higher layers Default = 15 Degrees
SML0PLL,spare_sml0pll_dhdyn4,0x50100064,65535,(0:31),R/W,0
SML0PLL,spare_sml0pll_dhdyn5,0x50100068,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x5010006C,0,(0:31),R/W,
SML0PLL,Reserved,0x50100070,0,(0:31),R/W,
SML0PLL,vcocal_freqselect_h,0x50100074,0,(0:0),R/W,Clock source setting for TDC in normal mode 0 ==> RF 1 ==> XTAL/Ext. Clk
SML0PLL,vcocal_sar_number_of_bits_h,0x50100074,5,(1:4),R/W,Number of the MSbs that the SAR algorithm will be applied on 
SML0PLL,vcocal_calsettings_wait_h,0x50100074,2048,(5:19),R/W,Waiting time after applying the calibration settings (after setting vco_calsettings_wait)
SML0PLL,vcocal_cfs_update_wait_h,0x50100074,32,(20:30),R/W,Waiting time after updating the CFS word
SML0PLL,vcocal_nffreqselect_h,0x50100074,1,(31:31),R/W,Clock source setting for TDC in NF calc mode 0 ==> RF 1 ==> XTAL/Ext. Clk
SML0PLL,vcocal_bypass_h,0x50100078,0,(0:0),R/W,Programmability option to bypass the vco cal and start nfcalc directly
SML0PLL,Reserved,0x50100078,0,(1:31),R/W,
SML0PLL,tdc_reset_h,0x5010007C,0,(0:0),R/W,General sync reset of tdc interface block
SML0PLL,tdc_waitaftersplyen_h,0x5010007C,64,(1:19),R/W,Waiting time after TDC supply enable (in cycles) Default 1us
SML0PLL,tdc_frqtdcntrials_h,0x5010007C,2,(20:21),R/W,Maximum number of trials of frequency mode. If exceeded  operation stops and an error flag is set 
SML0PLL,tdc_frqtdcreadingtrmofst_h,0x5010007C,0,(22:26),R/W,Signed offset for the frequency TDC reading 
SML0PLL,tdc_frq2dly_hndshk_en_h,0x5010007C,1,(27:27),R/W,If set  moving from freq mode to delay mode is gated by a complete handshaking between the TDC interface and the higher layer state machine. If cleared  no handshaking is required and delay mode starts directly after freq mode
SML0PLL,tdc_single_frqmode_h,0x5010007C,0,(28:28),R/W,Enbales single run only for the TDC interface in freq mode
SML0PLL,tdc_freq_adjst_cont_h,0x5010007C,0,(29:29),R/W,Control signal requests to continously run the frequency mode even if the number of iterations exceeded the limits
SML0PLL,tdc_postdivrstbypass_h,0x5010007C,1,(30:30),R/W,Bypass the post divider reset before starting delay mode
SML0PLL,tdc_dlycheckfielden1_h,0x5010007C,1,(31:31),R/W,Enables checking on pause signal to abort the correction trial while in the wait state before starting the tdc reading and while the analog tdc is running. If disbaled  TDC interface will not be affected by pause condition in the mentioned states and will continue the iteration normally
SML0PLL,tdc_dlycheckfielden2_h,0x50100080,1,(0:0),R/W,Enables checking on pause signal to abort the correction trial while in the wait state after the tdc reading. If disbaled  TDC interface will not be affected by pause condition in the mentioned state and will continue the iteration normally
SML0PLL,tdc_dlytdctimeout_h,0x50100080,32,(1:8),R/W,Determines the waiting timeout for the analog TDC block operation in delay mode. If exceeded with no ready flag from analog TDC  this trial is aborted 
SML0PLL,tdc_dlytdcreadingtrmofst_h,0x50100080,3,(9:13),R/W,Signed offset for the delay TDC reading 
SML0PLL,tdc_dlytdcreadingofst_h,0x50100080,2,(14:25),R/W,unsigned offset for the delay TDC reading 
SML0PLL,tdc_tdcmidpoint_h,0x50100084,384,(0:11),R/W,The midpoint value around which the delay reading should be bounded
SML0PLL,tdc_delta_f_dlytdcsign_h,0x50100084,0,(12:12),R/W,Detemines whether the delta_f_dlytdc should be added  to or subtracted from last freq NF
SML0PLL,tdc_single_dlymode_h,0x50100084,0,(13:13),R/W,Enbales single run only for the TDC interface in delay mode
SML0PLL,tdc_lmacphasetdcen_h,0x50100084,0,(14:14),R/W,Enable for the lmac mode
SML0PLL,tdc_dlytdclmacwtbfrreading_h,0x50100084,1,(15:20),R/W,Delay before reading in lmac mode
SML0PLL,tdc_dlytdclmactimeout_h,0x50100084,1,(21:28),R/W,Determines the waiting time for the wait state before taking a TDC reading in lmac mode. If set to zero  this state will be skipped
SML0PLL,tdc_single_lmacmode_h,0x50100084,0,(29:29),R/W,Enbales single run only for the TDC interface in lmac mode
SML0PLL,tdc_delta_f_frqtdcsign_h,0x50100084,0,(30:30),R/W,Detemines whether the delta_f_frqtdc should be added  to or subtracted from last freq NF
SML0PLL,plladjst_g1_waittime,0x50100088,512,(0:13),R/W,Wait time after applying group 2 settings(the number of waiting clock cycles)
SML0PLL,plladjst_plllockbypass,0x50100088,1,(14:14),R/W,Bypass control for bypassing the waiting for the PLL lock
SML0PLL,spare_sml0pll_rom0,0x5010008C,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_rom1,0x50100090,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_rom2,0x50100094,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_rom3,0x50100098,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_rom4,0x5010009C,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_rom5,0x501000A0,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x501000A4,0,(0:31),R/W,
SML0PLL,Reserved,0x501000A8,0,(0:31),R/W,
SML0PLL,vcocal_frqtdcncycles_h,0x501000AC,9,(0:3),R/W,Ncycles setting for TDC in normal mode Number of cycles = ( 2 ^ (Ncycles + 1) )
SML0PLL,vcocal_tdcreadingerror_h,0x501000AC,25,(4:23),R/W,The acceptable range of deviation from the target TDC reading Default equals to 2000 ppm acceptable error
SML0PLL,vcocal_nfshiftleft_h,0x501000AC,11,(24:28),R/W,Shifting value for the calculated TDC reading in NF CALC mode Default for Ncycles = 256 nfshiftleft = 20 - log (Ncycles   2 ) - 1
SML0PLL,vcocal_n_h,0x501000B0,192,(0:8),R/W,Integer part of the initial division value The initial value the TDC interface starts the freq Adjust with in the XTAL-BASED mode in case that the NF calc is bypassed
SML0PLL,vcocal_f_h,0x501000B0,0,(9:28),R/W,Fractional part of the initial division value  The initial value the TDC interface starts the freq Adjust with in the XTAL-BASED mode in case that the NF calc is bypassed
SML0PLL,vcocal_nffrqtdcncycles_h,0x501000B4,7,(0:3),R/W,Ncycles setting for TDC in NF calc mode Number of cycles = ( 2 ^ (Ncycles + 1) ) Default to get accuracy ~12 ppm for 27.12MHz ref
SML0PLL,vcocal_limit_h,0x501000B4,5800,(4:19),R/W,Limit for VCOCAL NF calculated in NF calc mode Default to limit +/- 100kHz for 27.12MHz ref
SML0PLL,tdc_frqtdcexpctdreading_h,0x501000B8,786432,(0:19),R/W,Expected frequency TDC reading for the ideal carrier frequency
SML0PLL,tdc_frqtdcintlimit_h,0x501000BC,2048,(0:15),R/W,Limit register to check correctness of the calculated delta_f_frqtdc  if exceeded TDC interface doesn't apply frequecny correction  report exceedlmtflag error and doesn't proceed to the delay mode Default for Ref = 27.12MHz   Ncycles = 1024 & Maximum Allowed Error 2500ppm
SML0PLL,spare_sml0pll_dh0,0x501000C0,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_dh1,0x501000C4,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_dh2,0x501000C8,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_dh3,0x501000CC,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x501000D0,0,(0:31),R/W,
SML0PLL,Reserved,0x501000D4,0,(0:31),R/W,
SML0PLL,Reserved,0x501000D8,0,(0:31),R/W,
SML0PLL,Reserved,0x501000DC,0,(0:31),R/W,
SML0PLL,Reserved,0x501000E0,0,(0:31),R/W,
SML0PLL,Reserved,0x501000E4,0,(0:31),R/W,
SML0PLL,pmnt_debug_pdet_phs_h,0x501000E8,0,(0:0),R/W,Debug signal for  pause phase detection signal 
SML0PLL,pmnt_debug_pdet_amp_h,0x501000E8,0,(1:1),R/W,Debug signal for  pause amplitude detection signal 
SML0PLL,pmnt_debug_start_h,0x501000E8,0,(2:2),R/W,Debug signal for  start the operation
SML0PLL,pmnt_msel_h,0x501000E8,0,(3:3),R/W,mode selector (debugging mode / functional mode )
SML0PLL,vcocal_cfs_offset_sign_test_h,0x501000E8,0,(4:4),R/W,Arithmetic operation for CFS fine tuning 0 : Addition 1: Subtraction
SML0PLL,vcocal_cfs_offset_test_h,0x501000E8,0,(5:9),R/W,CFS offset value for CFS fine tuning operation 
SML0PLL,vcocal_nf_test_sel_h,0x501000E8,0,(10:10),R/W,Mux selection for the vcocal_nf output  0: calcultated vcocal_nf 1: nf_calc_test input 
SML0PLL,vcocal_cfs_calc_test_sel_h,0x501000E8,0,(11:11),R/W,Mux selection for the cfs output  0: calcultated cfs 1: cfs_test input 
SML0PLL,vcocal_cfs_test_h,0x501000E8,0,(12:21),R/W,Test Input to bypass calculated cfs register for debugging
SML0PLL,vcocal_en_test_sel_h,0x501000E8,0,(22:22),R/W,Mux selection for the enable signal 0: digctrl_vcocalen_1v  1: digctrl_vcocalen_test 
SML0PLL,vcocal_en_test_h,0x501000E8,0,(23:23),R/W,Test input to bypass the enable coming from the higher layers
SML0PLL,vcocal_finetune_setting_test_sel_h,0x501000E8,0,(24:24),R/W,Mux selection for cfs_offset_sign signal 0: controlled by SML1 1:  controlled from regfile
SML0PLL,vcocal_freqselect_frqtdcncycles_test_sel_h,0x501000E8,0,(25:25),R/W,Mux selection for the freqselect and freqtdcncycles  0: freqselect and freqtdcncycles coming from VCO cal state machine 1: freqselect and freqtdcncycles coming from regfile 
SML0PLL,vcocal_freqselect_test_h,0x501000E8,0,(26:26),R/W,Test clock source setting for TDC 0 ==> RF 1 ==> XTAL/Ext. Clk
SML0PLL,vcocal_frqtdcncycles_test_h,0x501000E8,0,(27:30),R/W,Test Ncycles setting for TDC Number of cycles = ( 2 ^ (Ncycles + 1) )
SML0PLL,Reserved,0x501000E8,0,(31:31),R/W,
SML0PLL,vcocal_reset_h,0x501000EC,0,(0:0),R/W,Vco cal synchronous reset
SML0PLL,vcocal_fine_tune_test_sel_h,0x501000EC,0,(1:1),R/W,Mux selection for the fine_tune signal 0: controlled by SML1 1:  controlled from regfile
SML0PLL,vcocal_fine_tune_test_h,0x501000EC,0,(2:2),R/W,Test input to bypass the fine_tune coming from the higher layers
SML0PLL,vcocal_frqtdcreading_test_sel_h,0x501000EC,0,(3:3),R/W,
SML0PLL,vcocal_frqtdcreading_test_h,0x501000EC,0,(4:23),R/W,
SML0PLL,vcocal_frqtdcerr_test_sel_h,0x501000EC,0,(24:24),R/W,
SML0PLL,vcocal_frqtdcerr_test_h,0x501000EC,0,(25:25),R/W,
SML0PLL,vcocal_freqmeaurmentrdy_test_sel_h,0x501000EC,0,(26:26),R/W,
SML0PLL,vcocal_freqmeaurmentrdy_test_h,0x501000EC,0,(27:27),R/W,
SML0PLL,vcocal_sd_rdy_ack_test_sel_h,0x501000EC,0,(28:28),R/W,
SML0PLL,vcocal_sd_rdy_ack_test_h,0x501000EC,0,(29:29),R/W,
SML0PLL,vcocal_setting_sel_test_sel_h,0x501000EC,0,(30:30),R/W,
SML0PLL,vcocal_setting_sel_test_h,0x501000EC,0,(31:31),R/W,
SML0PLL,tdc_nf_test_sel_h,0x501000F0,0,(0:0),R/W,Selects between the calculated NF and  testing NF coming from regfile for debugging 0: Normal calculated NF 1: Testing NF
SML0PLL,tdc_nf_test_h,0x501000F0,0,(1:29),R/W,Testing NF coming from regfile for debugging
SML0PLL,tdc_delta_f_frqtdc_test_sel_h,0x501000F0,0,(30:30),R/W,Selects between the calculated delta_f_frqtdc and  testing delta_f_frqtdc coming from regfile for debugging 0: Normal calculated delta_f_frqtdc  1: Testing delta_f_frqtdc
SML0PLL,tdc_delta_f_frqtdc_test_h,0x501000F4,0,(0:29),R/W,Testing delta_f_dlytdc coming from regfile for debugging
SML0PLL,tdc_delta_f_dlytdc_test_sel_h,0x501000F4,0,(30:30),R/W,Selects between the calculated delta_f_dlytdc and  testing delta_f_dlytdc coming from regfile for debugging 0: Normal calculated delta_f_dlytdc 1: Testing delta_f_dlytdc
SML0PLL,tdc_delta_f_dlytdc_test_h,0x501000F8,0,(0:24),R/W,Testing delta_f_dlytdc coming from regfile for debugging
SML0PLL,tdc_reading_test_sel_h,0x501000F8,0,(25:25),R/W,Selects between the calculated atdc_reading and  testingatdc_reading coming from regfile for debugging 0: Normal calculated NF 1: Testing NF
SML0PLL,tdc_reading_test_h,0x501000FC,0,(0:19),R/W,Testing atdc_reading coming from regfile for debugging
SML0PLL,tdc_en_test_sel_h,0x501000FC,0,(20:20),R/W,Selects between the normal tdcint_en and  tdcint_en_test coming from regfile for debugging 0: Normal tdcint_en 1: Testing tdcint_en
SML0PLL,tdc_en_test_h,0x501000FC,0,(21:21),R/W,Testing tdcint_en
SML0PLL,tdc_delayfreqmode_test_sel_h,0x501000FC,0,(22:22),R/W,Selects between the normal digctrl_frqmode_1v and  tdcint_frqmode_test coming from regfile for debugging 0: Normal digctrl_frqmode_1v 1: Testing  tdcint_frqmode_test
SML0PLL,tdc_delayfreqmode_test_h,0x501000FC,0,(23:23),R/W,Testing  tdcint_frqmode_test
SML0PLL,tdc_openloopmode_test_sel_h,0x501000FC,0,(24:24),R/W,Selects between open loop mode from SML1 and tdcint_openloopmode_test coming from regfile for debugging 0: Normal open loop mode 1: Testing tdcint_openloopmode_test
SML0PLL,tdc_openloopmode_test_h,0x501000FC,0,(25:25),R/W,Testing  open loop mode
SML0PLL,tdc_sd_rdy_test_sel_h,0x501000FC,0,(26:26),R/W,Selects between the normal sd_rdy and  sd_rdy_test coming from regfile for debugging 0: Normal sd_rdy 1: Testing sd_rdy
SML0PLL,tdc_sd_rdy_test_h,0x501000FC,0,(27:27),R/W,Testing sd_rdy
SML0PLL,tdc_pd_ctrl_sel_h,0x501000FC,0,(28:28),R/W,Selects between the normal controls of atdc and post divider coming from TDC interface state machine or coming from regfile for debugging 0: Controls coming from TDC interface state machine 1: Controls coming from regfile
SML0PLL,tdc_atdcen_test,0x501000FC,0,(29:29),R/W,Test Enable signal for the analogTDC  block to start operation
SML0PLL,tdc_atdcsupplyen_test_h,0x501000FC,0,(30:30),R/W,Test Analog TDC supply enable
SML0PLL,tdc_atdcrstb_test_h,0x501000FC,0,(31:31),R/W,Test Analog TDC reset (active low)
SML0PLL,tdcint_nf_freq_test_sel,0x50100100,0,(0:0),R/W,
SML0PLL,tdcint_nf_freq_test,0x50100100,0,(1:29),R/W,
SML0PLL,tdcint_pausep_test_sel,0x50100100,0,(30:30),R/W,
SML0PLL,tdcint_bbwsdatap_test_sel,0x50100100,0,(31:31),R/W,
SML0PLL,tdcint_sd_rdy_ack_test_sel,0x50100104,0,(0:0),R/W,
SML0PLL,tdcint_atdc_tdcreadingrdy_test_sel,0x50100104,0,(1:1),R/W,
SML0PLL,tdcint_pausep_test,0x50100104,0,(2:2),R/W,
SML0PLL,tdcint_bbwsdatap_test,0x50100104,0,(3:3),R/W,
SML0PLL,tdcint_sd_rdy_ack_test,0x50100104,0,(4:4),R/W,
SML0PLL,tdcint_atdc_tdcreadingrdy_test,0x50100104,0,(5:5),R/W,
SML0PLL,tdc_postdivrst_test_h,0x50100104,0,(6:6),R/W,Test Reset signal for the post divider
SML0PLL,tdc_dlytdchold_bypass_sel_h,0x50100104,0,(7:7),R/W,Determines which delay hold signal will be used 0: Hold signal from SML1 1: Hold signal from regfile
SML0PLL,tdc_dlytdchold_test_h,0x50100104,0,(8:8),R/W,Hold signal from regfile
SML0PLL,plladjst_mode_sel,0x50100104,0,(9:10),R/W,"Debug mode selector signal that decides whether to take its corresponding signal from its normal source or from register file (one bit for each signal):        mode_sel[0]=0--> ""debug_digctrl_plladjuststrt"" comes from SML1                      mode_sel[0]=1--> ""debug_digctrl_plladjuststrt"" comes from regfile                    mode_sel[1]=0--> ""debug_digctrl_plllock"" comes from PLL lock Monitor             mode_sel[1]=1--> ""debug_digctrl_plllock"" comes from regfile"
SML0PLL,plladjst_debug_pllboostbypass,0x50100104,0,(11:11),R/W,Debug signal for bypassing the pllboostbypass signal
SML0PLL,plladjst_debug_plllock_1v,0x50100104,0,(12:12),R/W,Debug signal for bypassing the plllock signal
SML0PLL,plladjst_reset,0x50100104,0,(13:13),R/W,
SML0PLL,plladjst_en,0x50100104,1,(14:14),R/W,
SML0PLL,plladjst_debug_plladjuststrt,0x50100104,0,(15:15),R/W,
SML0PLL,plladjst_bypass,0x50100104,0,(16:16),R/W,
SML0PLL,pmnt_en,0x50100104,0,(17:17),R/W,Enable of pause monitor
SML0PLL,pmnt_reset,0x50100104,0,(18:18),R/W,Synchronous reset of pause monitor
SML0PLL,pmnt_start,0x50100104,0,(19:19),R/W,Start of pause monitor
SML0PLL,sd_test_en_h,0x50100104,0,(20:20),R/W,Enables the test mode of sigma-delta
SML0PLL,Reserved,0x50100104,0,(21:31),R/W,
SML0PLL,dmux_sml0pll_out1_sel,0x50100108,0,(0:6),R/W,
SML0PLL,dmux_sml0pll_out2_sel,0x50100108,0,(7:13),R/W,
SML0PLL,dmux_sml0pll_out3_sel,0x50100108,0,(14:20),R/W,
SML0PLL,dmux_sml0pll_out4_sel,0x50100108,0,(21:27),R/W,
SML0PLL,spare_sml0pll_reg0,0x5010010C,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_reg1,0x50100110,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_reg2,0x50100114,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_reg3,0x50100118,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_reg4,0x5010011C,65535,(0:31),R/W,Spare
SML0PLL,spare_sml0pll_reg5,0x50100120,65535,(0:31),R/W,Spare
SML0PLL,Reserved,0x50100124,0,(0:31),R/W,
SML0PLL,Reserved,0x50100128,0,(0:31),R/W,
SML0PLL,Reserved,0x5010012C,0,(0:31),R/W,
SML0PLL,pmnt_pause_h,0x50100130,0,(0:0),R, pause  detection signal 
SML0PLL,pmnt_pauserst_h,0x50100130,0,(1:1),R, pause  reset signal 
SML0PLL,pmnt_pwidth_timeoutflag_h,0x50100130,0,(2:2),R,pause width timeout flag (indicate that the pause width maximum is reached)
SML0PLL,vcocal_done_h,0x50100130,0,(3:3),R,Vco cal done flag indicates all the operation is done
SML0PLL,vcocal_error_h,0x50100130,0,(4:4),R,Error flag for the VCO calibration opeartion
SML0PLL,vcocal_exeedlmtflag_h,0x50100130,0,(5:5),R,Error flag indicated calculated NF value exceed the expected limits
SML0PLL,vcocal_nfcalerror_h,0x50100130,0,(6:6),R,Error flag for the NF calculation opeartion
SML0PLL,vcocal_cfs_h,0x50100130,0,(7:16),R,CFS word calculated by the vco cal block
SML0PLL,vcocal_n_calc_h,0x50100130,0,(17:25),R,Integer part of the calculated division value 
SML0PLL,vcocal_f_calc_h,0x50100134,0,(0:19),R,Fractional part of the calculated division value 
SML0PLL,vcocal_freqselect_debug_h,0x50100134,0,(20:20),R,Output clock source setting for TDC
SML0PLL,vcocal_frqtdcncycles_debug_h,0x50100134,0,(21:24),R,Out Ncycles setting for TDC
SML0PLL,vcocal_tdcint_en_h,0x50100134,0,(25:25),R,Enable for TDC interface block that start tdc operation
SML0PLL,vcocal_sd_rdy_h,0x50100134,0,(26:26),R,Ready flag for the vcocal_nf regsiter to be sampled at the sigma-delta
SML0PLL,vcocal_settings_sel_h,0x50100134,0,(27:27),R,Selction for the mode of the pll setting 1: Calibration settings 0: Normal settings
SML0PLL,vcocal_state_h,0x50100134,0,(28:31),R,State register indicates the state of the vco cal block for debugging
SML0PLL,vcocal_iter_cnt_h,0x50100138,0,(0:9),R,Iteration counter value for debugging
SML0PLL,vcocal_sar_ls_done_h,0x50100138,0,(10:10),R,Vco cal done flag indicates the vco cal mode (only without the nfcalc) is done
SML0PLL,tdc_frqtdcerr_h,0x50100138,0,(11:11),R,Error flag indicates that the specified trials number has been exceeded without getting succcessful reaading from analog TDC
SML0PLL,tdc_ftdcreadingerrflag_h,0x50100138,0,(12:12),R,Error flag indicates that the input TDC reading value is incorrect (0 or leads to negative value after adding offset  or leads to integer part > 1 in the divison output)
SML0PLL,tdc_frqtdcexeedlmtflag_h,0x50100138,0,(13:13),R,Error flag indicates that the calculated delta_f_frqtdc exceeds the specified limit
SML0PLL,tdc_frqtdcreading_h,0x5010013C,0,(0:19),R,Output frequecny tdc reading without correction
SML0PLL,tdc_freqmeaurmentrdy_h,0x5010013C,0,(20:20),R,Output done flag for the freq mode
SML0PLL,tdc_dlytdcexeedlmtflag_h,0x5010013C,0,(21:21),R,Error flag indicates that the calculated delta_f_frqtdc exceeded the specified limit and the output has been staurated by the TDC interface
SML0PLL,tdc_dlytdcreadingerrflag_h,0x5010013C,0,(22:22),R,Error flag indicates that the calculated delta_f_frqtdc exceeded the specified limit and the output has been staurated by the TDC interface
SML0PLL,tdc_dlytdcreadingp0_h,0x50100140,0,(0:19),R,Delay mode tdc reading taken at PA_EN=0
SML0PLL,tdc_dlytdcreadingp1_h,0x50100144,0,(0:19),R,Delay mode tdc reading taken at PA_EN=1
SML0PLL,tdc_dlytdcreadingrdy_h,0x50100144,0,(20:20),R,Ready flag for the tdc reading output 
SML0PLL,tdc_deltafdlytdcavg_h,0x50100148,0,(0:24),R,The average value of 8 samples of delta_dlytdc
SML0PLL,tdc_deltafdlytdcp2p_h,0x5010014C,0,(0:25),R,The peak to peak value between the maximum and minimum of 8 samples of delta_dlytdc
SML0PLL,tdc_deltafdlytdcavg_toggle_h,0x5010014C,0,(26:26),R,A signal that toggles every 8 cycles to indicate that the average  of  8 samples of the delta delay and the peak to peak value  changes 
SML0PLL,tdc_lmacdltatdcreading_h,0x50100150,0,(0:20),R,The output of lmac mode which is the delta between two delay tdc readings  one taken at PA_EN=0 and other taken at PA_EN=1
SML0PLL,tdc_lmacreadingrdy_h,0x50100150,0,(21:21),R,Ready flag for the lmac mode reading (tdcint_lmacdltatdcreading_1v)
SML0PLL,tdc_delta_f_frqtdc_h,0x50100154,0,(0:29),R,Delta Frequency calculated  from the Frequecny Correction process
SML0PLL,tdc_delta_f_dlytdc_h,0x50100158,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process
SML0PLL,tdc_delta_f_dlytdc1_h,0x5010015C,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process (Reading 1)
SML0PLL,tdc_delta_f_dlytdc2_h,0x50100160,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process (Reading 2)
SML0PLL,tdc_delta_f_dlytdc3_h,0x50100164,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process (Reading 3)
SML0PLL,tdc_delta_f_dlytdc4_h,0x50100168,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process (Reading 4)
SML0PLL,tdc_delta_f_dlytdc5_h,0x5010016C,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process (Reading 5)
SML0PLL,tdc_delta_f_dlytdc6_h,0x50100170,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process (Reading 6)
SML0PLL,tdc_delta_f_dlytdc7_h,0x50100174,0,(0:24),R,Delta Delay calculated  from the Delay  Correction process (Reading 7)
SML0PLL,tdc_delta_freq_div_en_h,0x50100174,0,(25:25),R,Enable for the Delay  Correction process
SML0PLL,tdc_delta_freq_div_start_h,0x50100174,0,(26:26),R,Start signal  for the divider used in the  Delay  Correction process
SML0PLL,tdc_delta_freq_done_h,0x50100174,0,(27:27),R,Done signal  from the divider used in the  Delay  Correction process to indicate the end of the process
SML0PLL,tdc_dlytdcreading_corrected_h,0x50100178,0,(0:21),R,Corrected  delay reading after adding an offset
SML0PLL,tdc_dlytdcreading_bounded_h,0x5010017C,0,(0:12),R,Bounded  delay reading after removing an offset from the corrected reading
SML0PLL,tdc_interface_state_h,0x5010017C,0,(13:17),R,State of the TDC interface
SML0PLL,tdc_frqtdcreading_corrected_h,0x50100180,0,(0:20),R,Corrected  Frequency reading after adding an offset
SML0PLL,tdcint_divider_result_debug_0,0x50100184,0,(0:31),R,
SML0PLL,tdcint_divider_result_debug_1,0x50100188,0,(0:31),R,
SML0PLL,tdcint_divider_result_debug_2,0x5010018C,0,(0:2),R,
SML0PLL,tdcint_delta_f_dlytdc_temp_debug,0x5010018C,0,(3:31),R,
SML0PLL,tdcint_divider_result_truncated_debug,0x50100190,0,(0:22),R,
SML0PLL,tdcint_delta_f_frqtdc_temp_debug_0,0x50100194,0,(0:31),R,
SML0PLL,tdcint_delta_f_frqtdc_temp_debug_1,0x50100198,0,(0:19),R,
SML0PLL,tdcint_n,0x50100198,0,(20:28),R,
SML0PLL,tdcint_f,0x5010019C,0,(0:19),R,
SML0PLL,tdcint_n_loop_cnt_debug,0x501001A0,0,(0:14),R,
SML0PLL,tcdint_tdc_midpoint_factor_debug,0x501001A0,0,(15:29),R,
SML0PLL,atdc_tdcreading_1v,0x501001A4,0,(0:19),R,
SML0PLL,atdc_tdcreadingrdy_1v,0x501001A4,0,(20:20),R,
SML0PLL,tdcint_delta_dlytdc_cal_en_debug,0x501001A4,0,(21:21),R,
SML0PLL,tdcint_delta_freq_div_reset,0x501001A4,0,(22:22),R,
SML0PLL,sd_rdy,0x501001A4,0,(23:23),R,
SML0PLL,tdcint_atdcen_1v,0x501001A4,0,(24:24),R,
SML0PLL,tdcint_atdcsupplyen_1v,0x501001A4,0,(25:25),R,
SML0PLL,tdcint_atdcrstb_1v,0x501001A4,0,(26:26),R,
SML0PLL,tdcint_postdivrst_1v,0x501001A4,0,(27:27),R,
SML0PLL,tdcint_pausep,0x501001A4,0,(28:28),R,
SML0PLL,tdcint_bbwsdatap,0x501001A4,0,(29:29),R,
SML0PLL,tdcint_wait_cnt_debug,0x501001A8,0,(0:20),R,
SML0PLL,tdcint_iter_cnt_debug,0x501001A8,0,(21:24),R,
SML0PLL,plladjst_output_settings_31_00,0x501001AC,0,(0:31),R,digctrl_pll_lfr1_1v<4:0> digctrl_pll_lfr3_1v<4:0> digctrl_pll_lfc1_1v<6:0> digctrl_pll_lfc2_1v<7:0> digctrl_pll_lfc3_1v<6:0> digctrl_pll_vcovarbiassel_1v<1:0> digctrl_pll_icp_1v<3:0>
SML0PLL,plladjst_output_settings_37_32,0x501001B0,1,(0:5),R,digctrl_pll_lfr1_1v<4:0> digctrl_pll_lfr3_1v<4:0> digctrl_pll_lfc1_1v<6:0> digctrl_pll_lfc2_1v<7:0> digctrl_pll_lfc3_1v<6:0> digctrl_pll_vcovarbiassel_1v<1:0> digctrl_pll_icp_1v<3:0>
SML0PLL,plladjst_debug_plladjust_state,0x501001B0,0,(6:8),R,Debug signal for observing the state register
SML0PLL,plladjst_plladjustdone_1v,0x501001B0,1,(9:9),R,Done signal for the PLL Adjust block operation
SML0PLL,sd_output_h,0x501001B4,3,(0:28),R,Output of the sigma-delta for debugging
SML0PLL,vcocal_tdc_int_shifted_debug_rd_ls_h,0x501001B8,4,(0:31),R,
SML0PLL,vcocal_tdc_int_shifted_debug_rd_ms_h,0x501001BC,4,(0:18),R,Spare
SML0PLL,vcocal_tdc_reading_best_debug_rd_h,0x501001C0,4,(0:19),R,Spare
SML0PLL,vcocal_cfs_best_int_debug_rd_h,0x501001C0,4,(20:29),R,Spare
SML0PLL,vcocal_cfstdcreading_debug,0x501001C4,4,(0:19),R,Spare
SML0PLL,vcocal_cfs_offset_sign_rd_h,0x501001C4,1,(20:20),R,Spare
SML0PLL,vco_cal_fine_tune_rd_h,0x501001C4,1,(21:21),R,Spare
SML0PLL,vcocal_sd_rdy_ack_rd_h,0x501001C4,1,(22:22),R,Spare
SML0PLL,vcocal_sar_done_debug_rd_h,0x501001C4,1,(23:23),R,Spare
SML0PLL,vcocal_cal_setting_debug_rd_h,0x501001C4,1,(24:24),R,Spare
SML0PLL,vcocal_nftdcreading_debug,0x501001C8,8,(0:19),R,Spare
SML0PLL,spare_sml0pll_rdreg0,0x501001CC,9,(0:31),R,Spare
SML0PLL,spare_sml0pll_rdreg1,0x501001D0,10,(0:31),R,Spare
SML0PLL,spare_sml0pll_rdreg2,0x501001D4,11,(0:31),R,Spare
SML0PLL,spare_sml0pll_rdreg3,0x501001D8,11,(0:31),R,Spare
SML0PLL,spare_sml0pll_rdreg4,0x501001DC,11,(0:31),R,Spare
SML0PLL,Reserved,0x501001E0,12,(0:31),R,
SML0PLL,Reserved,0x501001E4,13,(0:31),R,
SML0RX,dcoc_ihithres_h,0x50104000,0,(0:11),R/W,High threshold for generating dcoc_nrmadj flag - Flag is asserted when adcavg is larger than this value - I Branch
SML0RX,dcoc_qhithres_h,0x50104000,0,(12:23),R/W,High threshold for generating dcoc_nrmadj flag - Flag is asserted when adcavg is larger than this value - Q Branch
SML0RX,dcoc_iadwereci_h,0x50104004,0,(0:14),R/W,Reciprocal of grain from VGA2 to the ADC used in DWE word calculations - I branch
SML0RX,dcoc_qadwereci_h,0x50104004,0,(15:29),R/W,Reciprocal of grain from VGA2 to the ADC used in DWE word calculations - Q branch
SML0RX,spare_sml0rx_otpdyn0,0x50104008,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_otpdyn1,0x5010400C,65535,(0:31),R/W,Spare
SML0RX,Reserved,0x50104010,0,(0:31),R/W,
SML0RX,Reserved,0x50104014,0,(0:31),R/W,
SML0RX,dcoc_adcavg_slowfiltrtsel_h,0x50104018,0,(0:1),R/W,Slow Filter Rate Select
SML0RX,dcoc_adcavg_slowfiltmuxsel_h,0x50104018,0,(2:2),R/W,Slow Filter Mux Select
SML0RX,bbagc_dcocholdwidth_h,0x50104018,1,(3:12),R/W,P2P hold time after DCOC busy (Rx Ctrl busy). ( the register in terms of  6.78 MHz cycles)
SML0RX,bbagc_deciminmaxwin_h,0x50104018,7,(13:18),R/W,Deci. out moving min-max window size (6.78 MHz cycles) lookup table (max value = 32)
SML0RX,bbagc_adcoutdel_h,0x50104018,16,(19:25),R/W,"ADC out delay  (9 MHz cycle accuracy)(0-->75) maximum value up 76 (43 ""internal"" + 33 ""external"") cycles"
SML0RX,bbagc_adcminmaxwin_h,0x50104018,10,(26:31),R/W,ADC out moving min-max window size (9 MHz cycles) lookup table (max value = 44)
SML0RX,bbagc_applyflghold_h,0x5010401C,1,(0:9),R/W,Hold time after BBAGC apply masking additional requests.        ( the register in terms of  6.78 MHz cycles)
SML0RX,bbagc_holdtimeout_h,0x5010401C,0,(10:21),R/W,"Hold time out ""maximum time before resample the Instantaneous signal"" (6.78 MHz clock cycles)"
SML0RX,spare_sml0rx_romdyn0,0x50104020,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_romdyn1,0x50104024,65535,(0:31),R/W,Spare
SML0RX,Reserved,0x50104028,0,(0:31),R/W,
SML0RX,Reserved,0x5010402C,0,(0:31),R/W,
SML0RX,spare_sml0rx_romdyn2,0x50104030,65535,(0:2),R/W,Spare
SML0RX,spare_sml0rx_romdyn3,0x50104034,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_romdyn4,0x50104038,65535,(0:31),R/W,Spare
SML0RX,Reserved,0x5010403C,0,(0:31),R/W,
SML0RX,Reserved,0x50104040,0,(0:31),R/W,
SML0RX,trgtphopt_bypass_h,0x50104044,0,(0:0),R/W,If set  will bypass the FSM in CE mode
SML0RX,dcoc_adcavg_fastfiltrtsel_h,0x50104044,0,(1:2),R/W,Fast Filter Rate Select
SML0RX,dcoc_firorder_sel_h,0x50104044,0,(3:3),R/W,FIR  filter order selector:                                                                                                                 0--> order=37                                                                                                                                           1--> order=7      
SML0RX,bbagc_ssmaxthres_h,0x50104044,2047,(4:15),R/W,Deci. out / ADC out single-side max threshold
SML0RX,bbagc_hithres_h,0x50104044,600,(16:27),R/W,Deci. out / ADC out / RSSI monitor hysteresis high threshold 
SML0RX,bbagc_lothres_h,0x50104048,164,(0:11),R/W,Deci. out / ADC out / RSSI monitor hysteresis low threshold
SML0RX,bbagc_noisethres_h,0x50104048,82,(12:23),R/W,Deci. out / ADC out / RSSI  corresponding to min. signal P2P (noise threshold) Default is Half sensitivity value (bbagclothres)
SML0RX,bbagc_gainstepthres0_h,0x5010404C,168,(0:11),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres1_h,0x5010404C,238,(12:23),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres2_h,0x50104050,336,(0:11),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres3_h,0x50104050,475,(12:23),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres4_h,0x50104054,672,(0:11),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres5_h,0x50104054,950,(12:23),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres6_h,0x50104058,1344,(0:11),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres7_h,0x50104058,1901,(12:23),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainstepthres8_h,0x5010405C,2675,(0:11),R/W,Gain step P2P monitor thresholds for P2P monitor comparators
SML0RX,bbagc_gainsteplut0_h,0x5010405C,3,(12:16),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut1_h,0x5010405C,2,(17:21),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut2_h,0x5010405C,1,(22:26),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut3_h,0x5010405C,0,(27:31),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut4_h,0x50104060,-1,(0:4),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut5_h,0x50104060,-2,(5:9),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut6_h,0x50104060,-3,(10:14),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut7_h,0x50104060,-4,(15:19),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut8_h,0x50104060,-5,(20:24),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_gainsteplut9_h,0x50104060,-6,(25:29),R/W,Gain step lookup table according to comparator outputs Default target value is 400 LSB p2p
SML0RX,bbagc_sssatstep_h,0x50104064,-7,(0:4),R/W,Gain step in case of single-side saturation flag
SML0RX,bbagc_vga1gainlut0_h,0x50104064,0,(5:8),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut1_h,0x50104064,1,(9:12),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut2_h,0x50104064,2,(13:16),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut3_h,0x50104064,3,(17:20),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut4_h,0x50104064,4,(21:24),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut5_h,0x50104064,5,(25:28),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut6_h,0x50104068,6,(0:3),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut7_h,0x50104068,7,(4:7),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut8_h,0x50104068,7,(8:11),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut9_h,0x50104068,7,(12:15),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut10_h,0x50104068,7,(16:19),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut11_h,0x50104068,7,(20:23),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut12_h,0x50104068,7,(24:27),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut13_h,0x50104068,7,(28:31),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut14_h,0x5010406C,7,(0:3),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut15_h,0x5010406C,7,(4:7),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut16_h,0x5010406C,7,(8:11),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga1gainlut17_h,0x5010406C,8,(12:15),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga2gainlut0_h,0x5010406C,0,(16:19),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut1_h,0x5010406C,0,(20:23),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut2_h,0x5010406C,0,(24:27),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut3_h,0x5010406C,0,(28:31),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut4_h,0x50104070,0,(0:3),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut5_h,0x50104070,0,(4:7),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut6_h,0x50104070,0,(8:11),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut7_h,0x50104070,0,(12:15),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut8_h,0x50104070,1,(16:19),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut9_h,0x50104070,2,(20:23),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut10_h,0x50104070,3,(24:27),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut11_h,0x50104070,4,(28:31),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut12_h,0x50104074,5,(0:3),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut13_h,0x50104074,6,(4:7),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut14_h,0x50104074,7,(8:11),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut15_h,0x50104074,8,(12:15),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut16_h,0x50104074,9,(16:19),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_vga2gainlut17_h,0x50104074,9,(20:23),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,bbagc_initvga1gain_h,0x50104074,7,(24:27),R/W,Initial VGA1 gain
SML0RX,bbagc_initvga2gain_h,0x50104074,7,(28:31),R/W,Initial VGA2 gain
SML0RX,bbagc_vga2gainsarval_h,0x50104078,0,(0:3),R/W,VGA2 gain forced value when dcocsardone = 0
SML0RX,trgtphopt_mode,0x50104078,0,(4:4),R/W,CE or RW mode. In CE mode  FSM will generate the settings for I and Q branched except is bypassed using trgtphopt_bypass_h register. In RW mode  the settings are from trgtphopt_phset_i_h and trgtphopt_phset_q_h registers respectively 0 -> CE mode 1 -> RW mode
SML0RX,trgtphopt_phset_i_h,0x50104078,0,(5:11),R/W,The The value of phase settings applied in I-branch in RW mode or when  FSM is bypassed in CE mode
SML0RX,trgtphopt_phset_q_h,0x50104078,0,(12:18),R/W,The The value of phase settings applied in Q-branch in RW mode or when  FSM is bypassed in CE mode
SML0RX,bbagc_ssmaxlohysthres_h,0x50104078,0,(19:30),R/W,Deci. out / ADC out single-side max threshold hysteresis low threshold 
SML0RX,bbagc_hiflaglohysthres_h,0x5010407C,0,(0:11),R/W,Deci. out / ADC out single-side max threshold hysteresis low threshold 
SML0RX,bbagc_loflaghihysthres_h,0x5010407C,164,(12:23),R/W,Deci. out / ADC out / RSSI monitor hysteresis high threshold
SML0RX,bbagc_noisehihysthres_h,0x50104080,0,(0:11),R/W,Deci. out / ADC out / RSSI  corresponding to min. signal P2P (noise threshold) Default is Half sensitivity value (bbagclothres)
SML0RX,bbagc_gainstephyst_h,0x50104080,0,(12:23),R/W,Gain step hysteresis
SML0RX,dcoc_firrstdel_h,0x50104080,3,(24:29),R/W,Delay after apply signal and before generating FIR reset signal
SML0RX,bbagc_vga1gainlut18_h,0x50104084,8,(0:3),R/W,VGA1 gain lookup table Gain is reduced (from initial value 7) only after VGA2 value reaches 0
SML0RX,bbagc_vga2gainlut18_h,0x50104084,10,(4:7),R/W,VGA2 gain lookup table Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced
SML0RX,reserved,0x50104084,0,(8:31),R/W,
SML0RX,spare_sml0rx_romdyn6,0x50104088,65535,(0:31),R/W,Spare
SML0RX,Reserved,0x5010408C,0,(0:31),R/W,
SML0RX,Reserved,0x50104090,0,(0:31),R/W,
SML0RX,Reserved,0x50104094,0,(0:31),R/W,
SML0RX,Reserved,0x50104098,0,(0:31),R/W,
SML0RX,dcoc_agmrecilut0_h,0x5010409C,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_agmrecilut1_h,0x501040A0,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres0_h,0x501040A0,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_agmrecilut2_h,0x501040A4,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres1_h,0x501040A4,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_agmrecilut3_h,0x501040A8,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres2_h,0x501040A8,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_agmrecilut4_h,0x501040AC,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres3_h,0x501040AC,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_agmrecilut5_h,0x501040B0,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres4_h,0x501040B0,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_agmrecilut6_h,0x501040B4,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres5_h,0x501040B4,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_agmrecilut7_h,0x501040B8,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres6_h,0x501040B8,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_agmrecilut8_h,0x501040BC,0,(0:19),R/W,Reciprocal of   grain from GM input to the C-DAC
SML0RX,dcoc_icswathres7_h,0x501040BC,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_icdac_circuits0_h,0x501040C0,0,(0:9),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_icdac_circuits1_h,0x501040C0,0,(10:19),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_icswathres8_h,0x501040C0,0,(20:31),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_icdac_circuits2_h,0x501040C4,0,(0:9),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_icdac_circuits3_h,0x501040C4,0,(10:19),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_iadc_circuits10_h,0x501040C4,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_icdac_circuits4_h,0x501040C8,0,(0:9),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_icdac_circuits5_h,0x501040C8,0,(10:19),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_qcswathres0_h,0x501040C8,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_icdac_circuits6_h,0x501040CC,0,(0:9),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_icdac_circuits7_h,0x501040CC,0,(10:19),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_qcswathres1_h,0x501040CC,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_icdac_circuits8_h,0x501040D0,0,(0:9),R/W,CDAC Circuits offest - I branch
SML0RX,dcoc_qcdac_circuits0_h,0x501040D0,0,(10:19),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcswathres2_h,0x501040D0,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_qcdac_circuits1_h,0x501040D4,0,(0:9),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcdac_circuits2_h,0x501040D4,0,(10:19),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcswathres3_h,0x501040D4,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_qcdac_circuits3_h,0x501040D8,0,(0:9),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcdac_circuits4_h,0x501040D8,0,(10:19),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcswathres4_h,0x501040D8,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_qcdac_circuits5_h,0x501040DC,0,(0:9),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcdac_circuits6_h,0x501040DC,0,(10:19),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcswathres5_h,0x501040DC,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_qcdac_circuits7_h,0x501040E0,0,(0:9),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcdac_circuits8_h,0x501040E0,0,(10:19),R/W,CDAC Circuits offest - Q branch
SML0RX,dcoc_qcswathres6_h,0x501040E0,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_agmlut0_h,0x501040E4,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x501040E4,0,(18:19),R/W,
SML0RX,dcoc_qcswathres7_h,0x501040E4,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_agmlut1_h,0x501040E8,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x501040E8,0,(18:19),R/W,
SML0RX,dcoc_qcswathres8_h,0x501040E8,0,(20:31),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_agmlut2_h,0x501040EC,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x501040EC,0,(18:19),R/W,
SML0RX,dcoc_qadc_circuits10_h,0x501040EC,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_agmlut3_h,0x501040F0,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x501040F0,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits0_h,0x501040F0,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_agmlut4_h,0x501040F4,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x501040F4,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits1_h,0x501040F4,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_agmlut5_h,0x501040F8,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x501040F8,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits2_h,0x501040F8,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_agmlut6_h,0x501040FC,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x501040FC,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits3_h,0x501040FC,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_agmlut7_h,0x50104100,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x50104100,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits4_h,0x50104100,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_agmlut8_h,0x50104104,0,(0:17),R/W,grain from GM input to the C-DAC
SML0RX,reserved,0x50104104,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits5_h,0x50104104,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_icswastep0_h,0x50104108,0,(0:8),R/W,SWA-C step - I branch
SML0RX,dcoc_icswastep1_h,0x50104108,0,(9:17),R/W,SWA-C step - I branch
SML0RX,reserved,0x50104108,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits6_h,0x50104108,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_icswastep2_h,0x5010410C,0,(0:8),R/W,SWA-C step - I branch
SML0RX,dcoc_icswastep3_h,0x5010410C,0,(9:17),R/W,SWA-C step - I branch
SML0RX,reserved,0x5010410C,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits7_h,0x5010410C,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_icswastep4_h,0x50104110,0,(0:8),R/W,SWA-C step - I branch
SML0RX,dcoc_icswastep5_h,0x50104110,0,(9:17),R/W,SWA-C step - I branch
SML0RX,reserved,0x50104110,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits8_h,0x50104110,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_icswastep6_h,0x50104114,0,(0:8),R/W,SWA-C step - I branch
SML0RX,dcoc_icswastep7_h,0x50104114,0,(9:17),R/W,SWA-C step - I branch
SML0RX,reserved,0x50104114,0,(18:19),R/W,
SML0RX,dcoc_iadc_circuits9_h,0x50104114,0,(20:31),R/W,ADC offest - I branch
SML0RX,dcoc_icswastep8_h,0x50104118,0,(0:8),R/W,SWA-C step - I branch
SML0RX,dcoc_qcswastep9_h,0x50104118,0,(9:17),R/W,SWA-C step - Q branch
SML0RX,reserved,0x50104118,0,(18:19),R/W,
SML0RX,dcoc_qadc_circuits0_h,0x50104118,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_qcswastep0_h,0x5010411C,0,(0:8),R/W,SWA-C step - Q branch
SML0RX,dcoc_qcswastep1_h,0x5010411C,0,(9:17),R/W,SWA-C step - Q branch
SML0RX,reserved,0x5010411C,0,(18:19),R/W,
SML0RX,dcoc_qadc_circuits1_h,0x5010411C,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_qcswastep2_h,0x50104120,0,(0:8),R/W,SWA-C step - Q branch
SML0RX,dcoc_qcswastep3_h,0x50104120,0,(9:17),R/W,SWA-C step - Q branch
SML0RX,reserved,0x50104120,0,(18:19),R/W,
SML0RX,dcoc_qadc_circuits2_h,0x50104120,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_qcswastep4_h,0x50104124,0,(0:8),R/W,SWA-C step - Q branch
SML0RX,dcoc_qcswastep5_h,0x50104124,0,(9:17),R/W,SWA-C step - Q branch
SML0RX,reserved,0x50104124,0,(18:19),R/W,
SML0RX,dcoc_qadc_circuits3_h,0x50104124,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_qcswastep6_h,0x50104128,0,(0:8),R/W,SWA-C step - Q branch
SML0RX,dcoc_qcswastep7_h,0x50104128,0,(9:17),R/W,SWA-C step - Q branch
SML0RX,reserved,0x50104128,0,(18:19),R/W,
SML0RX,dcoc_qadc_circuits4_h,0x50104128,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_qcswastep8_h,0x5010412C,0,(0:8),R/W,SWA-C step - Q branch
SML0RX,dcoc_icswastep9_h,0x5010412C,0,(9:17),R/W,SWA-C step - Q branch
SML0RX,reserved,0x5010412C,0,(18:19),R/W,
SML0RX,dcoc_qadc_circuits5_h,0x5010412C,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_qadc_circuits6_h,0x50104130,0,(0:11),R/W,ADC offest - Q branch
SML0RX,dcoc_ifdac_circuits10_h,0x50104130,0,(12:19),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_qadc_circuits7_h,0x50104130,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_qadc_circuits8_h,0x50104134,0,(0:11),R/W,ADC offest - Q branch
SML0RX,dcoc_qfdac_circuits10_h,0x50104134,0,(12:19),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_qadc_circuits9_h,0x50104134,0,(20:31),R/W,ADC offest - Q branch
SML0RX,dcoc_icswathres9_h,0x50104138,0,(0:11),R/W,SWA-C Threshold -  I branch
SML0RX,dcoc_icswastep10_h,0x50104138,0,(12:20),R/W,SWA-C step -  I branch
SML0RX,reserved,0x50104138,0,(21:21),R/W,
SML0RX,dcoc_iadbrlut0_h,0x5010413C,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits0_h,0x5010413C,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut1_h,0x50104140,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits1_h,0x50104140,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut2_h,0x50104144,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits2_h,0x50104144,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut3_h,0x50104148,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits3_h,0x50104148,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut4_h,0x5010414C,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits4_h,0x5010414C,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut5_h,0x50104150,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits5_h,0x50104150,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut6_h,0x50104154,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits6_h,0x50104154,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut7_h,0x50104158,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits7_h,0x50104158,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut8_h,0x5010415C,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits8_h,0x5010415C,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrlut9_h,0x50104160,0,(0:23),R/W,grain from GM input to the C-DAC - I branch
SML0RX,dcoc_ifdac_circuits9_h,0x50104160,0,(24:31),R/W,FDAC Circuits offest - I branch
SML0RX,dcoc_iadbrrecilut0_h,0x50104164,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits0_h,0x50104164,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut1_h,0x50104168,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits1_h,0x50104168,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut2_h,0x5010416C,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits2_h,0x5010416C,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut3_h,0x50104170,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits3_h,0x50104170,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut4_h,0x50104174,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits4_h,0x50104174,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut5_h,0x50104178,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits5_h,0x50104178,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut6_h,0x5010417C,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits6_h,0x5010417C,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut7_h,0x50104180,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits7_h,0x50104180,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut8_h,0x50104184,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits8_h,0x50104184,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_iadbrrecilut9_h,0x50104188,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,dcoc_qfdac_circuits9_h,0x50104188,0,(24:31),R/W,FDAC Circuits offest - Q branch
SML0RX,dcoc_qadbrlut0_h,0x5010418C,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x5010418C,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut1_h,0x50104190,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x50104190,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut2_h,0x50104194,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x50104194,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut3_h,0x50104198,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x50104198,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut4_h,0x5010419C,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x5010419C,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut5_h,0x501041A0,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041A0,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut6_h,0x501041A4,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041A4,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut7_h,0x501041A8,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041A8,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut8_h,0x501041AC,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041AC,0,(24:31),R/W,
SML0RX,dcoc_qadbrlut9_h,0x501041B0,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041B0,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut0_h,0x501041B4,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041B4,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut1_h,0x501041B8,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041B8,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut2_h,0x501041BC,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041BC,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut3_h,0x501041C0,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041C0,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut4_h,0x501041C4,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041C4,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut5_h,0x501041C8,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041C8,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut6_h,0x501041CC,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041CC,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut7_h,0x501041D0,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041D0,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut8_h,0x501041D4,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041D4,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut9_h,0x501041D8,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041D8,0,(24:31),R/W,
SML0RX,bbagc_rstonp2phold_h,0x501041DC,0,(0:0),R/W,Reset on p2p hold 
SML0RX,dcoc_iadbrlut10_h,0x501041DC,0,(1:24),R/W,grain from GM input to the C-DAC - I branch
SML0RX,reserved,0x501041DC,0,(25:31),R/W,
SML0RX,dcoc_qadbrlut10_h,0x501041E0,0,(0:23),R/W,grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041E0,0,(24:31),R/W,
SML0RX,dcoc_iadbrrecilut10_h,0x501041E4,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - I branch
SML0RX,reserved,0x501041E4,0,(24:31),R/W,
SML0RX,dcoc_qadbrrecilut10_h,0x501041E8,0,(0:23),R/W,Reciprocal of   grain from GM input to the C-DAC - Q branch
SML0RX,reserved,0x501041E8,0,(24:31),R/W,
SML0RX,dcoc_icswathres10_h,0x501041EC,0,(0:11),R/W,SWA-C Threshold - I branch
SML0RX,dcoc_qcswathres9_h,0x501041EC,0,(12:23),R/W,SWA-C Threshold - Q branch
SML0RX,reserved,0x501041EC,0,(24:31),R/W,
SML0RX,dcoc_qcswathres10_h,0x501041F0,0,(0:11),R/W,SWA-C Threshold - Q branch
SML0RX,dcoc_qcswastep10_h,0x501041F0,0,(12:20),R/W,SWA-C step - Q branch
SML0RX,reserved,0x501041F0,0,(21:31),R/W,
SML0RX,Reserved,0x501041F4,0,(0:31),R/W,
SML0RX,Reserved,0x501041F8,0,(0:31),R/W,
SML0RX,dcoc_adcavg_lpfcoeff00_h,0x501041FC,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff01_h,0x501041FC,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff02_h,0x50104200,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff03_h,0x50104200,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff04_h,0x50104204,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff05_h,0x50104204,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff06_h,0x50104208,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff07_h,0x50104208,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff08_h,0x5010420C,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff09_h,0x5010420C,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff10_h,0x50104210,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff11_h,0x50104210,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff12_h,0x50104214,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff13_h,0x50104214,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff14_h,0x50104218,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff15_h,0x50104218,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff16_h,0x5010421C,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff17_h,0x5010421C,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff18_h,0x50104220,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff19_h,0x50104220,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff20_h,0x50104224,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff21_h,0x50104224,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff22_h,0x50104228,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff23_h,0x50104228,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff24_h,0x5010422C,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff25_h,0x5010422C,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff26_h,0x50104230,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff27_h,0x50104230,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff28_h,0x50104234,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff29_h,0x50104234,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff30_h,0x50104238,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff31_h,0x50104238,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff32_h,0x5010423C,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff33_h,0x5010423C,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff34_h,0x50104240,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff35_h,0x50104240,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff36_h,0x50104244,0,(0:15),R/W,FIR  LPF coefficients 
SML0RX,dcoc_adcavg_lpfcoeff37_h,0x50104244,0,(16:31),R/W,FIR  LPF coefficients 
SML0RX,spare_sml0rx_dh0,0x50104248,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_dh1,0x5010424C,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_dh2,0x50104250,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_dh3,0x50104254,65535,(0:31),R/W,Spare
SML0RX,Reserved,0x50104258,0,(0:31),R/W,
SML0RX,Reserved,0x5010425C,0,(0:31),R/W,
SML0RX,Reserved,0x50104260,0,(0:31),R/W,
SML0RX,Reserved,0x50104264,0,(0:31),R/W,
SML0RX,rfagc_divset_h,0x50104268,0,(0:1),R/W,Clock division: 00 --> divider bypass ( ~ 13. 56 MHz) 01 --> divide by 2 ( ~ 6.78 Mz) 10 --> divide by 4 ( ~ 3.39 MHz) 11 --> divide by 8 ( ~ 1.68 MHz)
SML0RX,rfagc_settletrgt_h,0x50104268,0,(2:4),R/W,RF AGC settle target number of toggles (INC/DEC module): 000 --> flip detection 001 --> 1 toggles 010 --> 2 toggles 011 --> 4 toggles 100 -->  8 toggles 101 --> 16 toggles 110 --> 32 toggles 111 --> 32 toggles
SML0RX,trgtphopt_signinv_h,0x50104268,0,(5:5),R/W,Loop sign inversion
SML0RX,dcoc_qfswastep_h,0x50104268,9,(6:12),R/W,SWA-F Step - Q branch
SML0RX,dcoc_dwestopthres_h,0x50104268,47,(13:24),R/W,DWE stop threshold
SML0RX,dcoc_dwe_maxstep_h,0x50104268,5,(25:28),R/W,Maximum number of steps for DWE-M mode  0 -> one step
SML0RX,dcoc_icdacout_signinv_h,0x50104268,0,(29:29),R/W,Inverse the sign bit of DAC words before the latest output stage (C-DAC - I branch)
SML0RX,dcoc_qcdacout_signinv_h,0x50104268,0,(30:30),R/W,Inverse the sign bit of DAC words before the latest output stage (C-DAC - Q branch)
SML0RX,dcoc_ifdacout_signinv_h,0x50104268,0,(31:31),R/W,Inverse the sign bit of DAC words before the latest output stage (F-DAC - I branch)
SML0RX,dcoc_qfdacout_signinv_h,0x5010426C,0,(0:0),R/W,Inverse the sign bit of DAC words before the latest output stage (F-DAC - Q branch)
SML0RX,dcoc_infrm_dbrbyp_en_h,0x5010426C,0,(1:1),R/W,"0--> bypassing  the DBR calculations  (if the "" dcoc_infrm""  is  high).                                                 1--> enable the DBR calculations  (if the "" dcoc_infrm""  is  high).                         If  "" dcoc_infrm""  is  low the  DBR calculations alwayes be enabled."
SML0RX,dcoc_ovrld_highthrs_h,0x5010426C,2000,(2:13),R/W,High threshold for generating adcavg_ovrld flag - Flag is asserted when adcavg is larger than this value
SML0RX,dcoc_dbr_cdacovrldthrs_h,0x5010426C,510,(14:22),R/W,High threshold for generating cdcoc_ovrld flag - Flag is asserted when CDAC is larger than this value
SML0RX,dcoc_dbr_fdacmnrovrldthrs_h,0x5010426C,0,(23:29),R/W,High threshold for generating fdcoc_mnrovrld flag - Flag is asserted when FDAC is larger than this value
SML0RX,dcoc_loadcircuitsoffset_h,0x5010426C,0,(30:30),R/W,high--> cdac and fdac outputs will be holded to the circuits offsets values without need of apply signal . Low--> cdac and fdac outputs will be updated by the calculated values.
SML0RX,dcoc_dbr_fdacmjrovrldthrs_h,0x50104270,0,(0:6),R/W,High threshold for generating fdcoc_mjrld flag - Flag is asserted when FDAC is larger than this value
SML0RX,dcoc_stepcountfast_h,0x50104270,0,(7:14),R/W,Number of CLK cycles needed for single SAR-M step or single DWE-M Modes
SML0RX,dcoc_stepcountnrm_h,0x50104270,0,(15:25),R/W,Number of CLK cycles needed for single DWE-Single step
SML0RX,reserved,0x50104270,0,(26:26),R/W,
SML0RX,reserved,0x50104274,0,(0:11),R/W,
SML0RX,bbagc_decibbflginstsel_h,0x50104274,0,(12:12),R/W,Deci. out BB inst. flag select  (0 --> internal  1 --> other module / external)
SML0RX,bbagc_adcbbflginstsel_h,0x50104274,1,(13:13),R/W,ADC out BB inst. flag select  (0 --> internal  1 --> other module / external)
SML0RX,bbagc_adcoutavgwin_h,0x50104274,0,(14:15),R/W,ADC out moving average window size (log2 (window)) (9 MHz cycles) 0 --> no avg 1 ---> every 2 samples 2 ---> every 4 samples 3 ---> every 8 samples
SML0RX,bbagc_p2pestsel_h,0x50104274,1,(16:16),R/W,P2P estimate select  (0: Deci. filter out p2pest   1: ADC out p2pest)
SML0RX,bbagc_sssatflgsel_h,0x50104274,1,(17:17),R/W,Single-side saturation flag select  (0: from Deci. Filter out monitor   1: from ADC out p2p monitor)
SML0RX,bbagc_hiflgsel_h,0x50104274,1,(18:19),R/W,High flag select  (0: from Deci. Filter out monitor   1: from ADC out p2p monitor   2: from RSSI monitor)
SML0RX,bbagc_lorngflgsel_h,0x50104274,0,(20:21),R/W,Low-range flag select  (0: from Deci. Filter out monitor   1: from ADC out p2p monitor   2: from RSSI monitor)
SML0RX,reserved,0x50104274,0,(22:25),R/W,
SML0RX,bbagc_holdatreq_h,0x50104274,0,(26:26),R/W,BB AGC hold at request mode: BB AGC hold requested VGA setting once request flag is sent (bbagcnrmadj  bbagcovrld)
SML0RX,bbagc_mode_h,0x50104274,0,(27:28),R/W,00 --> Change either VGA 1 or  VGA 2 but not both (default) 01 --> Only change VGA 1 10 --> Only change VGA 2 11 --> Change either VGA 1 or VGA 2 or both
SML0RX,bbagc_frcreqmodeen_h,0x50104274,0,(29:29),R/W,Force request for certain gain settings (contingency  may be needed by higher layers)
SML0RX,bbagc_frcreqvga1gain_h,0x50104278,7,(0:3),R/W,Force request value VGA1 
SML0RX,bbagc_frcreqvga2gain_h,0x50104278,7,(4:7),R/W,Force request value VGA2
SML0RX,bbagc_seqofchng_re,0x50104278,0,(8:8),R/W,VGA1 and VGA2 sequence of change:   0 --> VGA2 Gain is reduced (from initial value 7) initially until it reaches 0  then VGA1 is reduced 1-->VGA1 Gain is reduced (from initial value 7) initially until it reaches 0  then VGA2 is reduced
SML0RX,bbagc_adcdownsample_factor,0x50104278,0,(9:10),R/W,Downsampling factor  (18 MHz cycle accuracy) :                                                                            0 --> average every 2 samples 1 ---> average every 4 samples 2 ---> average every 8 samples
SML0RX,spare_sml0rx_rom0,0x5010427C,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_rom1,0x50104280,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_rom2,0x50104284,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_rom3,0x50104288,65535,(0:31),R/W,Spare
SML0RX,Reserved,0x5010428C,0,(0:31),R/W,
SML0RX,Reserved,0x50104290,0,(0:31),R/W,
SML0RX,Reserved,0x50104294,0,(0:31),R/W,
SML0RX,Reserved,0x50104298,0,(0:31),R/W,
SML0RX,rfagc_gain_h,0x5010429C,0,(0:5),R,RF AGC Gain (Attenuator setting)
SML0RX,rfagc_frcgainen_h,0x5010429C,0,(6:6),R/W,"RF AGC Gain (Attenuator setting) force enable  selects the value of ""rfagc_frcgainval_d"" as the attenuator setting"
SML0RX,rfagc_frcgainval_h,0x5010429C,0,(7:12),R/W,"Forced RF AGC Gain (Attenuator setting) when ""rfagc_frcgainen_d"" is high"
SML0RX,reserved,0x5010429C,0,(13:26),R/W,
SML0RX,bwtune_enable_h,0x5010429C,0,(27:27),R/W,Active high enable signal
SML0RX,bwtune_trigger_h,0x5010429C,0,(28:28),R/W,Trigger BW Tuning operation - Rising edge trigger
SML0RX,bwtune_freqratiotyp_h,0x501042A0,33,(0:6),R/W,Defines the SAR operation threshold.
SML0RX,bwtune_freqratiohigh_h,0x501042A0,36,(7:13),R/W,Defines the upper value of the allowed error window
SML0RX,bwtune_freqratiolow_h,0x501042A0,30,(14:20),R/W,Defines the lower value of the allowed error window
SML0RX,bwtune_reloscrstdly_h,0x501042A0,4,(21:23),R/W,"Defines the delay between the ""reloscreset"" and ""relosctune"" in terms of ""ref_clk"" cycles"
SML0RX,bwtune_test_h,0x501042A0,0,(24:24),R/W,"If set  will the ""bwtune_relosc_clk_test"" instead of the input from analog"
SML0RX,bwtune_tuningword_h,0x501042A0,0,(25:29),R,The tuning word to be transferred manually to tune the capbank in the BBA
SML0RX,bwtune_fail_h,0x501042A0,0,(30:30),R,Failure flag
SML0RX,bwtune_done_h,0x501042A0,0,(31:31),R,Trigger indicates the end of operation.
SML0RX,reserved,0x501042A4,0,(0:29),R/W,
SML0RX,trgtphopt_failchecken_h,0x501042A4,0,(30:30),R/W,Target phase opt. failure check after algorithm terminates
SML0RX,trgtphopt_reset,0x501042A4,0,(31:31),R/W,Active high soft reset signal
SML0RX,trgtphopt_enable,0x501042A8,1,(0:0),R/W,Active high enable signal
SML0RX,reserved,0x501042A8,0,(1:13),R/W,
SML0RX,trgtphopt_phset_i_debug_h,0x501042A8,0,(14:20),R,The value of phase settings applied in I-branch
SML0RX,trgtphopt_phset_q_debug_h,0x501042A8,0,(21:27),R,The value of phase settings applied in Q-branch
SML0RX,dcoc_ifswastep_h,0x501042AC,9,(0:6),R/W,SWA-F Step - I branch
SML0RX,dcoc_adcavg_fastfiltrst_h,0x501042AC,0,(7:7),R/W,Fast Filter reset signal 
SML0RX,dcoc_adcavg_slowfiltrst_h,0x501042AC,0,(8:8),R/W,Slow Filter reset signal 
SML0RX,dcoc_clpfbypass_width_h,0x501042AC,3,(9:12),R/W,Coarse DAC LPF bypass signal width
SML0RX,dcoc_flpfbypass_width_h,0x501042AC,3,(13:16),R/W,Fine DAC LPF bypass signal width
SML0RX,dcoc_ireset,0x501042AC,0,(17:17),R/W,Soft active hih reset  - I Branch
SML0RX,dcoc_ienable,0x501042AC,1,(18:18),R/W,Active high enable signal - I Branch
SML0RX,dcoc_qreset,0x501042AC,0,(19:19),R/W,Soft active hih reset  - Q Branch
SML0RX,dcoc_qenable,0x501042AC,1,(20:20),R/W,Active high enable signal - Q Branch
SML0RX,reserved,0x501042B0,0,(0:16),R/W,
SML0RX,bbagc_reset,0x501042B0,0,(17:17),R/W,BB AGC block reset to initial state  (Active high ) - Initial state is hardcoded reset state
SML0RX,bbagc_enable,0x501042B0,1,(18:18),R/W,BB AGC block enable - active high signal
SML0RX,reserved,0x501042B0,0,(19:21),R/W,
SML0RX,bbagc_curvga1gainval_h,0x501042B0,0,(22:25),R,VGA 1 current setting
SML0RX,bbagc_curvga2gainval_h,0x501042B0,0,(26:29),R,VGA 2 current setting
SML0RX,bbagc_reqvga1gainval_h,0x501042B4,0,(0:3),R,VGA 1 requested setting
SML0RX,bbagc_reqvga2gainval_h,0x501042B4,0,(4:7),R,VGA 2 requested setting
SML0RX,bbagc_vga2gainval_clc_h,0x501042B4,0,(8:11),R,Calculated VGA2 gain setting before dcoc forcing
SML0RX,reserved,0x501042B4,0,(12:31),R/W,
SML0RX,reserved,0x501042B8,0,(0:16),R/W,
SML0RX,spare_sml0rx_reg0,0x501042BC,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_reg1,0x501042C0,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_reg2,0x501042C4,65535,(0:31),R/W,Spare
SML0RX,spare_sml0rx_reg3,0x501042C8,65535,(0:31),R/W,Spare
SML0RX,Reserved,0x501042CC,0,(0:31),R/W,
SML0RX,Reserved,0x501042D0,0,(0:31),R/W,
SML0RX,Reserved,0x501042D4,0,(0:31),R/W,
SML0RX,Reserved,0x501042D8,0,(0:31),R/W,
SML0RX,spare_sml0rx_rdreg0,0x501042DC,0,(0:31),R,Spare
SML0RX,spare_sml0rx_rdreg1,0x501042E0,0,(0:31),R,Spare
SML0RX,spare_sml0rx_rdreg2,0x501042E4,0,(0:31),R,Spare
SML0RX,spare_sml0rx_rdreg3,0x501042E8,0,(0:31),R,Spare
SML0RX,Reserved,0x501042EC,0,(0:31),R,
SML0RX,Reserved,0x501042F0,0,(0:31),R,
SML0RX,Reserved,0x501042F4,0,(0:31),R,
SML0RX,Reserved,0x501042F8,0,(0:31),R,
SML0TX,txldoctrl_txldosc_en,0x50102000,0,(0:0),R/W,Enable/Disable TX LDO Soft voltage Change (Up or Down) Mode
SML0TX,txldoctrl_txldosc_stpupsize,0x50102000,1,(1:3),R/W,"Control LDO output voltage step size from 0 to ""txldo_ctrlword"" during Soft Voltage Change Mode (for Voltage step-up only)"
SML0TX,txldoctrl_txldosc_stpuptime,0x50102000,1,(4:14),R/W,Control LDO output voltage step time during Soft Voltage Change Mode (define the wait between each step and the following one) (Number of Clock Cycles of 13.56 MHz)
SML0TX,Reserved,0x50102000,0,(15:15),R/W,
SML0TX,txldoctrl_txldostpdisch_en,0x50102000,0,(16:16),R/W,Enable/Disable TX LDO discharge switch during voltage step down (with or without soft change)
SML0TX,txldoctrl_txldosc_stpdownsize,0x50102000,1,(17:19),R/W,"Control LDO output voltage step size from ""txldo_ctrlword_n"" to ""txldo_ctrlword_m"" (n > m) during Soft voltage Change Mode (for Voltage step-down only)"
SML0TX,txldoctrl_txldodisch_stptime,0x50102000,1,(20:30),R/W,Control LDO output voltage step time during voltage step-down (with or without Soft Change Mode) (define the wait between each step and the following one) This value will be used to generate the wait period. (Number of Clock Cycles of 13.56 MHz)
SML0TX,Reserved,0x50102000,0,(31:31),R/W,
SML0TX,txldoctrl_txldostpup_scdis_stptime,0x50102004,1,(0:10),R/W,Wait Time during stepup mode while the soft change is disabled (Number of Clock Cycles of 13.56 MHz)
SML0TX,txldoctrl_txldostpdown_scdis_stptime,0x50102004,1,(11:22),R/W,Wait Time during step down mode while the soft change is disabled and either the full discahrge optionis set or not (the discharge time is included in this wait time)  (Number of Clock Cycles of 13.56 MHz)
SML0TX,spare_sml0tx_txldo_1,0x50102004,0,(23:31),R/W,
SML0TX,txldoctrl_txldofulldisch_en,0x50102008,0,(0:0),R/W,Enable/Disable TX LDO discharge switch during Power OFF state --> at LDO disable only
SML0TX,txldoctrl_txldofulldisch_pw,0x50102008,1,(1:15),R/W,Control the duration of discharge operation during Power OFF state This value will be used to generate the wait period.  (Number of Clock Cycles of 13.56 MHz)
SML0TX,txldoctrl_txldo_disable_stptime,0x50102008,1,(16:31),R/W,Wait Time after disabling the txldo either the full discahrge optionis set or not (the discharge time is included in this wait time)  (Number of Clock Cycles of 13.56 MHz)
SML0TX,txldoctrl_disswpulse_sc_stptime,0x5010200C,1,(0:10),R/W,Control the duration of discharge operation during Step Down This value will be used to generate the wait period.  (Number of Clock Cycles of 13.56 MHz)
SML0TX,spare_sml0tx_txldo_2,0x5010200C,0,(11:31),R/W,
SML0TX,txldoctrl_txldoilimctrl_en,0x50102010,0,(0:0),R/W,Enable/Disable the variable current limiting option
SML0TX,txldoctrl_txldoilimctrl_strt_en,0x50102010,0,(1:1),R/W,Enable/Disable the variable current limiting option during soft start mode
SML0TX,txldoctrl_txldoilim_default,0x50102010,1,(2:4),R/W,Used to store the default settings for the current limiter
SML0TX,txldoctrl_txldoilim_maxset,0x50102010,1,(5:7),R/W,Used to store the maximum available current limiter threshold --> can be used to speed up step-up operation if needed
SML0TX,spare_sml0tx_txldo_3,0x50102010,0,(8:31),R/W,
SML0TX,spare_sml0tx_txldo_4,0x50102014,65535,(0:31),R/W,
SML0TX,Reserved,0x50102018,0,(0:31),R/W,
SML0TX,Reserved,0x5010201C,0,(0:31),R/W,
SML0TX,Reserved,0x50102020,0,(0:31),R/W,
SML0TX,Reserved,0x50102024,0,(0:31),R/W,
SML0TX,Reserved,0x50102028,0,(0:31),R/W,
SML0TX,Reserved,0x5010202C,0,(0:31),R/W,
SML0TX,Reserved,0x50102030,0,(0:31),R/W,
SML0TX,Reserved,0x50102034,0,(0:31),R/W,
SML0TX,pactrl_bbws_en,0x50102038,0,(0:0),R/W,"Enable/Disable ""bb_data"" pulse shaping before passing to TRFWS"
SML0TX,pactrl_cdc_en,0x50102038,0,(1:1),R/W,Enable/Disable RF Carrier duty cycle control
SML0TX,Reserved,0x50102038,0,(2:3),R/W,
SML0TX,pactrl_pasftstrt_en,0x50102038,0,(4:4),R/W,Enable/Disable PA soft start feature
SML0TX,pactrl_pasftshtdwn_en,0x50102038,0,(5:5),R/W,Enable/Disable PA soft shutdown feature
SML0TX,Reserved,0x50102038,0,(6:7),R/W,
SML0TX,pactrl_qpsk_en,0x50102038,0,(8:8),R/W,Enable/Disable QPSK mode in CE LMAC
SML0TX,pactrl_bpsk_en,0x50102038,0,(9:9),R/W,Enable/Disable BPSK mode in CE LMAC
SML0TX,Reserved,0x50102038,0,(10:11),R/W,
SML0TX,pactrl_trws_en_normal,0x50102038,0,(12:12),R/W,Enable/Disable PA Rise time adjustement feature (For ASK) EOF valid with no psk enabled
SML0TX,pactrl_trws_en_eof,0x50102038,0,(13:13),R/W,Enable/Disable PA Rise time adjustement feature (For ASK) EOF valid with psk enabled
SML0TX,pactrl_trws_en_eofpsk,0x50102038,0,(14:14),R/W,Enable/Disable PA Rise time adjustement feature (For ASK) for ramping up
SML0TX,Reserved,0x50102038,0,(15:15),R/W,
SML0TX,pactrl_tfws_en_normal,0x50102038,0,(16:16),R/W,Enable/Disable PA Fall time adjustement feature (For ASK) EOF valid with no psk enabled
SML0TX,pactrl_tfws_en_eof,0x50102038,0,(17:17),R/W,Enable/Disable PA Fall time adjustement feature (For ASK) EOF valid with no psk enabled
SML0TX,pactrl_tfws_en_eofpsk,0x50102038,0,(18:18),R/W,Enable/Disable PA Fall time adjustement feature (For ASK) EOF valid with psk enabled
SML0TX,Reserved,0x50102038,0,(19:19),R/W,
SML0TX,pactrl_trws_en_rampup,0x50102038,0,(20:20),R/W,Enable/Disable PA Rise time adjustement after transmitting data
SML0TX,pactrl_trws_en_rampdwn,0x50102038,0,(21:21),R/W,Enable/Disable PA Rise time adjustement after transmitting data
SML0TX,pactrl_tfws_en_rampup,0x50102038,0,(22:22),R/W,Enable/Disable PA Fall time adjustement after transmitting data
SML0TX,pactrl_tfws_en_rampdwn,0x50102038,0,(23:23),R/W,Enable/Disable PA Fall time adjustement after transmitting data
SML0TX,Reserved,0x50102038,0,(24:31),R/W,
SML0TX,spare_sml0tx_paen,0x5010203C,0,(0:31),R/W,
SML0TX,Reserved,0x50102040,0,(0:31),R/W,
SML0TX,Reserved,0x50102044,0,(0:31),R/W,
SML0TX,Reserved,0x50102048,0,(0:31),R/W,
SML0TX,Reserved,0x5010204C,0,(0:31),R/W,
SML0TX,Reserved,0x50102050,0,(0:31),R/W,
SML0TX,Reserved,0x50102054,0,(0:31),R/W,
SML0TX,Reserved,0x50102058,0,(0:31),R/W,
SML0TX,Reserved,0x5010205C,0,(0:31),R/W,
SML0TX,pactrl_bbws_hipls_t1,0x50102060,0,(0:7),R/W,"Width of first High pulse of ""bbws_data"" during High ""bb_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,pactrl_bbws_hipls_t2,0x50102060,0,(8:12),R/W,"Width of Low pulse of ""bbws_data"" during High ""bb_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,pactrl_bbws_lopls_t1,0x50102060,0,(13:20),R/W,"Width of first Low pulse of ""bbws_data"" during Low ""bb_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,pactrl_bbws_lopls_t2,0x50102060,0,(21:25),R/W,"Width of High pulse of ""bbws_data"" during Low ""bb_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,pactrl_pll_tx_pause_delay_ctrl_hipls_t2,0x50102060,0,(26:31),R/W,
SML0TX,pactrl_pll_tx_pause_delay_ctrl_lopls_t2,0x50102064,0,(0:5),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_ctrl_hipls_t2,0x50102064,0,(6:11),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_ctrl_lopls_t2,0x50102064,0,(12:17),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_ctrl_hipls_t2,0x50102064,0,(18:23),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_ctrl_lopls_t2,0x50102064,0,(24:29),R/W,
SML0TX,Reserved,0x50102064,0,(30:31),R/W,
SML0TX,Reserved,0x50102068,0,(0:31),R/W,
SML0TX,Reserved,0x5010206C,0,(0:31),R/W,
SML0TX,Reserved,0x50102070,0,(0:31),R/W,
SML0TX,Reserved,0x50102074,0,(0:31),R/W,
SML0TX,Reserved,0x50102078,0,(0:31),R/W,
SML0TX,Reserved,0x5010207C,0,(0:31),R/W,
SML0TX,Reserved,0x50102080,0,(0:31),R/W,
SML0TX,Reserved,0x50102084,0,(0:31),R/W,
SML0TX,pactrl_pasftstrt_pctrl_stepsize,0x50102088,1,(0:2),R/W,"Control ""pa_nctrl_ws"" step size from 0 to ""pa_nctrl_onhi"" during Soft Start"
SML0TX,pactrl_pasftstrt_nctrl_stepsize,0x50102088,1,(3:5),R/W,"Control ""pa_pctrl_ws"" step size from 0 to """"pa_pctrl_onhi"" during Soft Start"
SML0TX,pactrl_pasftstrt_pctrl_steptime,0x50102088,0,(6:10),R/W,"Control ""pa_nctrl_ws"" step time during startup (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,pactrl_pasftstrt_nctrl_steptime,0x50102088,0,(11:15),R/W,"Control ""pa_pctrl_ws"" step time during startup (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,pactrl_pasftshtdwn_pctrl_stepsize,0x50102088,1,(16:18),R/W,"Control ""pa_nctrl_ws"" step size from 0 to ""pa_nctrl_onhi"" during Soft Shutdown"
SML0TX,pactrl_pasftshtdwn_nctrl_stepsize,0x50102088,1,(19:21),R/W,"Control ""pa_pctrl_ws"" step size from 0 to """"pa_pctrl_onhi"" during Soft Shutdown"
SML0TX,pactrl_pasftshtdwn_pctrl_steptime,0x50102088,0,(22:26),R/W,"Control ""pa_nctrl_ws"" step time during shutdown (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,pactrl_pasftshtdwn_nctrl_steptime,0x50102088,0,(27:31),R/W,"Control ""pa_pctrl_ws"" step time during shutdown (number of 1/2 clk cycles of 13.56MHz)"
SML0TX,spare_sml0tx_sftstrt_1,0x5010208C,0,(0:31),R/W,
SML0TX,spare_sml0tx_sftstrt_2,0x50102090,0,(0:31),R/W,
SML0TX,Reserved,0x50102094,0,(0:31),R/W,
SML0TX,Reserved,0x50102098,0,(0:31),R/W,
SML0TX,Reserved,0x5010209C,0,(0:31),R/W,
SML0TX,Reserved,0x501020A0,0,(0:31),R/W,
SML0TX,Reserved,0x501020A4,0,(0:31),R/W,
SML0TX,Reserved,0x501020A8,0,(0:31),R/W,
SML0TX,pactrl_cdc_hi_ratio,0x501020AC,8,(0:3),R/W,Control Carrier duty cycle during high level transmission  (in terms of 1/2 clock cycle of  8fc) 
SML0TX,pactrl_cdc_lo_ratio,0x501020AC,2,(4:7),R/W,Control Carrier duty cycle during low level transmission  (in terms of 1/2 clock cycle of  8fc) 
SML0TX,pactrl_cdc_inc_en,0x501020AC,0,(8:8),R/W,Enable for incrementing the duty cycle width during high bbws_data
SML0TX,pactrl_cdc_dec_en,0x501020AC,0,(9:9),R/W,Enable for deccrementing the duty cycle width during low bbws_data
SML0TX,spare_sml0tx_pacdc_1,0x501020AC,0,(10:15),R/W,
SML0TX,pactrl_cdc_hi_steps,0x501020AC,0,(16:20),R/W,Waiting time before incrementing the duty cycle width . Number of steps (in terms of 4 clock cycles of  8fc) 
SML0TX,pactrl_cdc_lo_steps,0x501020AC,0,(21:25),R/W,Waiting time before decrementing the duty cycle width . Number of steps (in terms of 4 clock cycles of  8fc) 
SML0TX,spare_sml0tx_pacdc_2,0x501020AC,0,(26:31),R/W,
SML0TX,spare_sml0tx_pacdc_3,0x501020B0,0,(0:31),R/W,
SML0TX,Reserved,0x501020B4,0,(0:31),R/W,
SML0TX,Reserved,0x501020B8,0,(0:31),R/W,
SML0TX,Reserved,0x501020BC,0,(0:31),R/W,
SML0TX,Reserved,0x501020C0,0,(0:31),R/W,
SML0TX,Reserved,0x501020C4,0,(0:31),R/W,
SML0TX,Reserved,0x501020C8,0,(0:31),R/W,
SML0TX,spare_sml0tx_dhdyn0,0x501020CC,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_dhdyn1,0x501020D0,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_dhdyn2,0x501020D4,65535,(0:31),R/W,Spare
SML0TX,spare_sml0tx_dhdyn3,0x501020D8,65535,(0:31),R/W,Spare
SML0TX,Reserved,0x501020DC,0,(0:31),R/W,
SML0TX,Reserved,0x501020E0,0,(0:31),R/W,
SML0TX,Reserved,0x501020E4,0,(0:31),R/W,
SML0TX,Reserved,0x501020E8,0,(0:31),R/W,
SML0TX,Reserved,0x501020EC,0,(0:31),R/W,
SML0TX,Reserved,0x501020F0,0,(0:31),R/W,
SML0TX,Reserved,0x501020F4,0,(0:31),R/W,
SML0TX,Reserved,0x501020F8,0,(0:31),R/W,
SML0TX,pactrl_nfcc_mode,0x501020FC,0,(0:0),R/W,Control inidcating NFCC mode (0 --> RW & 1 --> CE)
SML0TX,spare_sml0tx_topctrl_1,0x501020FC,0,(1:7),R/W,
SML0TX,pactrl_pll_tx_pause_delay_strt_mode,0x501020FC,0,(8:9),R/W,
SML0TX,pactrl_pll_tx_pause_delay_terminate_mode,0x501020FC,0,(10:11),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_strt_mode,0x501020FC,0,(12:13),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_terminate_mode,0x501020FC,0,(14:15),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_strt_mode,0x501020FC,0,(16:17),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_terminate_mode,0x501020FC,0,(18:19),R/W,
SML0TX,spare_sml0tx_topctrl_2,0x501020FC,0,(20:31),R/W,
SML0TX,spare_sml0tx_topctrl_3,0x50102100,0,(0:31),R/W,
SML0TX,Reserved,0x50102104,0,(0:31),R/W,
SML0TX,Reserved,0x50102108,0,(0:31),R/W,
SML0TX,pactrl_bbws_data_idle,0x5010210C,1,(0:0),R/W,Idle value of the bb data according to the technology
SML0TX,pactrl_pll_tx_pause_delay_idle,0x5010210C,1,(1:1),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_idle,0x5010210C,1,(2:2),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_idle,0x5010210C,1,(3:3),R/W,
SML0TX,spare_sml0tx_bbws_idle_1,0x5010210C,0,(4:31),R/W,
SML0TX,spare_sml0tx_bbws_idle_2,0x50102110,0,(0:31),R/W,
SML0TX,Reserved,0x50102114,0,(0:31),R/W,
SML0TX,spare_sml0tx_otpdyn0,0x50102118,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_otpdyn1,0x5010211C,65535,(0:31),R/W,Spare
SML0TX,Reserved,0x50102120,0,(0:31),R/W,
SML0TX,Reserved,0x50102124,0,(0:31),R/W,
SML0TX,spare_sml0tx_dh0,0x50102128,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_dh1,0x5010212C,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_dh2,0x50102130,65535,(0:31),R/W,Spare
SML0TX,spare_sml0tx_dh3,0x50102134,65535,(0:31),R/W,Spare
SML0TX,Reserved,0x50102138,0,(0:31),R/W,
SML0TX,Reserved,0x5010213C,0,(0:31),R/W,
SML0TX,Reserved,0x50102140,0,(0:31),R/W,
SML0TX,txldoctrl_predriver_ctrlword_threshold1,0x50102144,0,(0:4),R/W,Control word threshold 1 for the PreDriver LDO
SML0TX,txldoctrl_predriver_ctrlword_threshold2,0x50102144,0,(5:9),R/W,Control word threshold 2 for the PreDriver LDO 
SML0TX,txldoctrl_predriver_ctrlword_threshold3,0x50102144,0,(10:14),R/W,Control word threshold 3 for the PreDriver LDO 
SML0TX,Reserved,0x50102144,0,(15:15),R/W,
SML0TX,txldoctrl_predriver_ctrlword1,0x50102144,0,(16:18),R/W,Control word1 for the PreDriver LDO from Regfile
SML0TX,txldoctrl_predriver_ctrlword2,0x50102144,0,(19:21),R/W,Control word2 for the PreDriver LDO from Regfile
SML0TX,txldoctrl_predriver_ctrlword3,0x50102144,0,(22:24),R/W,Control word3 for the PreDriver LDO from Regfile
SML0TX,txldoctrl_predriver_ctrlword4,0x50102144,0,(25:27),R/W,Control word4 for the PreDriver LDO from Regfile
SML0TX,Reserved,0x50102144,0,(28:31),R/W,
SML0TX,spare_sml0tx_predriver,0x50102148,0,(0:31),R/W,
SML0TX,Reserved,0x5010214C,0,(0:31),R/W,
SML0TX,Reserved,0x50102150,0,(0:31),R/W,
SML0TX,spare_sml0tx_otp0,0x50102154,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_otp1,0x50102158,65535,(0:31),R/W,Spare
SML0TX,Reserved,0x5010215C,0,(0:31),R/W,
SML0TX,Reserved,0x50102160,0,(0:31),R/W,
SML0TX,txldoctrl_txldoss_en,0x50102164,1,(0:0),R/W,Enable/Disable TX LDO Soft Start Mode --> at LDO start-up only
SML0TX,Reserved,0x50102164,0,(1:3),R/W,
SML0TX,txldoctrl_txldoss_stpsize,0x50102164,1,(4:6),R/W,"Control LDO output voltage step size from 0 to ""txldo_ctrlword"" during Soft Start Mode"
SML0TX,Reserved,0x50102164,0,(7:7),R/W,
SML0TX,txldoctrl_txldoss_stptime,0x50102164,1,(8:18),R/W,Control LDO output voltage step time during SS (define the wait between each step and the following one)  (Number of Clock Cycles of 13.56 MHz)
SML0TX,Reserved,0x50102164,0,(19:19),R/W,
SML0TX,txldoctrl_txldoen_stptime,0x50102164,1,(20:30),R/W,Wait Time after the Enabling of the TXLDO without applying Soft Start (Number of Clock Cycles of 13.56 MHz)
SML0TX,Reserved,0x50102164,0,(31:31),R/W,
SML0TX,pactrl_rw_rampup_sft,0x50102168,0,(0:0),R/W,determine the ramping up in the RW mode after the data is invalid will be done by the trfws or the soft start/shutdown block
SML0TX,pactrl_ce_rampdwn_sft,0x50102168,0,(1:1),R/W,determine the ramping down in the CE mode after the data is invalid will be done by the trfws or the soft start/shutdown block
SML0TX,pactrl_ce_datavalid_sft,0x50102168,0,(2:2),R/W,determine the ramping  up in the CE mode after the data is valid will be done by the trfws or the soft start/shutdown block
SML0TX,pactrl_ce_sftstrt_bfr_data,0x50102168,0,(3:3),R/W,determine if required to softstart the PA before data during CE
SML0TX,pactrl_strt_cdc_ce_sftstrt,0x50102168,0,(4:4),R/W,Enable CDC during the soft start
SML0TX,Reserved,0x50102168,0,(5:7),R/W,
SML0TX,pactrl_txbbpusslct,0x50102168,1,(8:8),R/W,Select the out pause signal to PLL/CR
SML0TX,pactrl_txctrl_txdata_sel,0x50102168,1,(9:9),R/W,Select the data sent to the TX controller
SML0TX,pactrl_pskmod_sel,0x50102168,1,(10:10),R/W,
SML0TX,pactrl_rx_pause_data_sel_1,0x50102168,1,(11:11),R/W,Select the out of RX RFAGC first pause signal 
SML0TX,pactrl_rx_pause_data_sel_2,0x50102168,1,(12:12),R/W,Select the out of RX RFAGC second pause signal 
SML0TX,pactrl_pskmod_ce_data_valid_bpsk_high,0x50102168,2,(13:14),R/W,Pskmod value at CE mode when data is valid  the baseband data is high  and bpsk is enabled
SML0TX,pactrl_pskmod_ce_data_valid_bpsk_low,0x50102168,0,(15:16),R/W,Pskmod value at CE mode when data is valid  the baseband data is low  and bpsk is enabled
SML0TX,pactrl_pskmod_ce_data_valid_qpsk_high,0x50102168,1,(17:18),R/W,Pskmod value at CE mode when data is valid  the baseband data is high  and qpsk is enabled
SML0TX,pactrl_pskmod_ce_data_valid_qpsk_low,0x50102168,0,(19:20),R/W,Pskmod value at CE mode when data is valid  the baseband data is low  and qpsk is enabled
SML0TX,pactrl_pskmod_ce_data_valid,0x50102168,0,(21:22),R/W,Pskmod value at CE mode when data is valid  and neither  bpsk nor  qpsk is enabled
SML0TX,pactrl_pskmod_ce_data_invalid,0x50102168,0,(23:24),R/W,Pskmod value at CE mode when data isn't  valid
SML0TX,pactrl_pskmod_rw,0x50102168,0,(25:26),R/W,Pskmod value at RW mode
SML0TX,pactrl_pskmod_dly_ctrl,0x50102168,3,(27:30),R/W,Delay the PSK signal to align with TRFWS
SML0TX,Reserved,0x50102168,0,(31:31),R/W,
SML0TX,pactrl_cdc_bbdata_delay,0x5010216C,16,(0:5),R/W,determines the delay in number of clock cycles of 2fc for the bbws_data to be delayed fro the rfclkgating to be synchronized with the controls progating from the fifo to the PA
SML0TX,pactrl_cdc_fc_used,0x5010216C,3,(6:7),R/W,It determines which digtial clock is used  6fc or 8fc
SML0TX,pactrl_start_wr_address,0x5010216C,0,(8:12),R/W,The address of the register that ia the first to be written in when the fifo write enable is on
SML0TX,Reserved,0x5010216C,0,(13:15),R/W,
SML0TX,pactrl_start_rd_address,0x5010216C,16,(16:20),R/W,The address of the register that ia the first to be read from when the fifo read enable is on
SML0TX,Reserved,0x5010216C,0,(21:23),R/W,
SML0TX,pactrl_soft_change_wait,0x5010216C,0,(24:28),R/W,Wait time after the control words reach the target controls
SML0TX,Reserved,0x5010216C,0,(29:31),R/W,
SML0TX,pactrl_pll_tx_pause_start_delay,0x50102170,0,(0:3),R/W,
SML0TX,pactrl_pll_tx_pause_terminate_delay,0x50102170,0,(4:9),R/W,
SML0TX,pactrl_pll_tx_pause_op_delay,0x50102170,0,(10:13),R/W,
SML0TX,Reserved,0x50102170,0,(14:15),R/W,
SML0TX,pactrl_rx_pause_data_1_start_delay,0x50102170,0,(16:19),R/W,
SML0TX,pactrl_rx_pause_data_1_terminate_delay,0x50102170,0,(20:25),R/W,
SML0TX,pactrl_rx_pause_data_1_op_delay,0x50102170,0,(26:29),R/W,
SML0TX,Reserved,0x50102170,0,(30:31),R/W,
SML0TX,pactrl_rx_pause_data_2_start_delay,0x50102174,0,(0:3),R/W,
SML0TX,pactrl_rx_pause_data_2_terminate_delay,0x50102174,0,(4:9),R/W,
SML0TX,pactrl_rx_pause_data_2_op_delay,0x50102174,0,(10:13),R/W,
SML0TX,Reserved,0x50102174,0,(14:15),R/W,
SML0TX,pactrl_top_ctrl_wait,0x50102174,32,(16:21),R/W,
SML0TX,pactrl_cdc_terminate_delay,0x50102174,16,(22:27),R/W,
SML0TX,pactrl_cdc_start_delay,0x50102174,0,(28:31),R/W,
SML0TX,spare_sml0tx_rom0,0x50102178,0,(0:31),R/W,
SML0TX,spare_sml0tx_rom1,0x5010217C,0,(0:31),R/W,
SML0TX,spare_sml0tx_rom2,0x50102180,0,(0:31),R/W,
SML0TX,txldoctrl_en,0x50102184,1,(0:0),R/W,Enable/Disable TX LDO Controller
SML0TX,txldoctrl_rst,0x50102184,0,(1:1),R/W,Reset TX LDO controller
SML0TX,Reserved,0x50102184,0,(2:31),R/W,
SML0TX,txldoctrl_setapplied,0x50102188,0,(0:7),R,
SML0TX,txldoctrl_txldo_ctrlword,0x50102188,0,(8:15),R,
SML0TX,txldoctrl_predriver_ctrlword,0x50102188,0,(16:23),R,
SML0TX,txldoctrl_txldo_en,0x50102188,0,(24:24),R,
SML0TX,txldoctrl_predriver_en,0x50102188,0,(25:25),R,
SML0TX,txldoctrl_txldo_disswpulse,0x50102188,0,(26:26),R,
SML0TX,txldoctrl_txldo_ilimword,0x50102188,0,(27:29),R,
SML0TX,txldoctrl_txctrl_done,0x50102188,0,(30:30),R,
SML0TX,txldoctrl_txctrl_ack,0x50102188,0,(31:31),R,
SML0TX,sml0tx_txctrl_txldoctrl_mode,0x5010218C,0,(0:1),R,
SML0TX,sml0tx_txctrl_txldoctrlword,0x5010218C,0,(2:6),R,
SML0TX,sml0tx_txctrl_txldoctrl_newsetapplied,0x5010218C,0,(7:7),R,
SML0TX,txldoctrl_state_debug,0x5010218C,0,(8:15),R,TXLDO ctrl debugging state machine
SML0TX,txldoctrl_delta_set_debug,0x5010218C,0,(16:23),R,TX LDO ctrl delta set to define if  a stauration is required
SML0TX,sml0tx_thermal_protection_tx_ldo_rst,0x5010218C,0,(24:31),R,
SML0TX,spare_txldo_rd,0x50102190,0,(0:31),R,
SML0TX,txldoctrl_mode_test_sel,0x50102194,0,(0:0),R/W,Selects between the TXLDO Mode from SML1 and  testing TXLDO Mode coming from regfile for debugging 0: Normal  TXLDO  Mode from SML1 1: Testing TXLDO Mode
SML0TX,txldoctrl_mode_test,0x50102194,0,(1:2),R/W,Testing  TX LDO Mode from Regfile
SML0TX,Reserved,0x50102194,0,(3:7),R/W,
SML0TX,txldoctrl_txldoctrlword_test_sel,0x50102194,0,(8:8),R/W,Selects between the TXLDO   settings  from SML1 and  testing TXLDO Settings coming from regfile for debugging 0: Normal   TXLDO Settings from SML1 1: Testing  TXLDO Settings
SML0TX,txldoctrl_txldoctrlword_test,0x50102194,0,(9:13),R/W,Testing TX LDO voltage control settings from Regfile
SML0TX,Reserved,0x50102194,0,(14:15),R/W,
SML0TX,txldoctrl_newsetapplied_test_sel,0x50102194,0,(16:16),R/W,Selects between the TXLDO  new settings flag  from SML1 and  testing TXLDO new settings flag coming from regfile for debugging 0: Normal   TXLDO new settings flag from SML1 1: Testing  TXLDO new settings flag
SML0TX,txldoctrl_newsetapplied_test,0x50102194,0,(17:17),R/W,Testing Flag fromRegfile to inform TX LDO controller that new settings should be applied (useful for step up or down mode)
SML0TX,Reserved,0x50102194,0,(18:23),R/W,
SML0TX,txldo_ctrlword_test_sel,0x50102194,0,(24:24),R/W,Selects between the TXLDO settings from TXLDO controller and  testing TXLDO settings coming from regfile for debugging 0: Normal  TXLDO  settings from TXLDO controller 1: Testing TXLDO settings
SML0TX,txldo_ctrlword_test,0x50102194,0,(25:29),R/W,Testing  TX LDO Settings from Regfile
SML0TX,Reserved,0x50102194,0,(30:31),R/W,
SML0TX,txldo_en_test_sel,0x50102198,0,(0:0),R/W,Selects between the TXLDO Enable from Txldo Controller and  testing TXLDO Enable coming from regfile for debugging 0: Normal  TXLDO  Enable from TXLDO controller 1: Testing TXLDO Enable
SML0TX,txldo_en_test,0x50102198,0,(1:1),R/W,Testing  TX LDO Enable from Regfile
SML0TX,Reserved,0x50102198,0,(2:7),R/W,
SML0TX,txldo_disswpulse_test_sel,0x50102198,0,(8:8),R/W,Selects between the TXLDO Discharge pulse from TXLDO controller and  testing TXLDO  Discharge pulse coming from regfile for debugging 0: Normal  TXLDO   Discharge pulse from TXLDO controller 1: Testing TXLDO Discharge pulse
SML0TX,txldo_disswpulse_test,0x50102198,0,(9:9),R/W,Testing  TX LDO  Discharge pulse from Regfile
SML0TX,Reserved,0x50102198,0,(10:15),R/W,
SML0TX,txldo_ilimword_test_sel,0x50102198,0,(16:16),R/W,Selects between the Current Limiter control word  from TXLDO controller and  testing Current Limiter control word coming from regfile for debugging 0: Normal  Current Limiter control word from TXLDO controller 1: Testing Current Limiter control word
SML0TX,txldo_ilimword_test,0x50102198,0,(17:19),R/W,Testing  Current Limiter control word from Regfile
SML0TX,Reserved,0x50102198,0,(20:23),R/W,
SML0TX,txldo_predriver_ctrlword_test_sel,0x50102198,0,(24:24),R/W,Selects between the TXLDO settings from TXLDO controller and  testing Predriver LDO settings coming from regfile for debugging 0: Normal   Predriver LDO  settings from TXLDO controller 1: Testing  Predriver LDO settings
SML0TX,txldo_predriver_ctrlword_test,0x50102198,0,(25:27),R/W,Testing   Predriver LDO Settings from Regfile
SML0TX,Reserved,0x50102198,0,(28:31),R/W,
SML0TX,txldo_predriver_en_test_sel,0x5010219C,0,(0:0),R/W,Selects between the TXLDO Enable from Txldo Controller and  testing  Predriver LDO Enable coming from regfile for debugging 0: Normal   Predriver LDO Enable from TXLDO controller 1: Testing Predriver LDO Enable
SML0TX,txldo_predriver_en_test,0x5010219C,0,(1:1),R/W,Testing   Predriver LDO Enable from Regfile
SML0TX,spare_txldo_tst,0x5010219C,0,(2:31),R/W,
SML0TX,Reserved,0x501021A0,0,(0:31),R,
SML0TX,Reserved,0x501021A4,0,(0:31),R/W,
SML0TX,Reserved,0x501021A8,0,(0:31),R/W,
SML0TX,pactrl_rst,0x501021AC,0,(0:0),R/W,Reset PA controller
SML0TX,pactrl_en,0x501021AC,1,(1:1),R/W,Enable/Disable PA Controller
SML0TX,Reserved,0x501021AC,0,(2:7),R/W,
SML0TX,pactrl_bbws_data_rst,0x501021AC,0,(8:8),R/W,
SML0TX,pactrl_bbws_data_en,0x501021AC,1,(9:9),R/W,
SML0TX,Reserved,0x501021AC,0,(10:15),R/W,
SML0TX,pactrl_fdbk_mux_rst,0x501021AC,0,(16:16),R/W,
SML0TX,pactrl_fdbk_mux_en,0x501021AC,1,(17:17),R/W,
SML0TX,Reserved,0x501021AC,0,(18:23),R/W,
SML0TX,pactrl_fifo_rst,0x501021AC,0,(24:24),R/W,
SML0TX,pactrl_fifo_en,0x501021AC,1,(25:25),R/W,
SML0TX,Reserved,0x501021AC,0,(26:31),R/W,
SML0TX,pactrl_start_soft_shutdown_rst,0x501021B0,0,(0:0),R/W,
SML0TX,pactrl_start_soft_shutdown_en,0x501021B0,1,(1:1),R/W,
SML0TX,Reserved,0x501021B0,0,(2:7),R/W,
SML0TX,pactrl_top_ctrller_rst,0x501021B0,0,(8:8),R/W,
SML0TX,pactrl_top_ctrller_en,0x501021B0,1,(9:9),R/W,
SML0TX,Reserved,0x501021B0,0,(10:15),R/W,
SML0TX,pactrl_cdc_ctrl_rst,0x501021B0,0,(16:16),R/W,
SML0TX,pactrl_cdc_ctrl_en,0x501021B0,1,(17:17),R/W,
SML0TX,Reserved,0x501021B0,0,(18:23),R/W,
SML0TX,pactrl_trfws_rst,0x501021B0,0,(24:24),R/W,
SML0TX,pactrl_trfws_en,0x501021B0,1,(25:25),R/W,
SML0TX,Reserved,0x501021B0,0,(26:31),R/W,
SML0TX,pactrl_fifo_pointer_rst,0x501021B4,0,(0:0),R/W,
SML0TX,Reserved,0x501021B4,0,(1:31),R/W,
SML0TX,pactrl_bbws_start_test_sel,0x501021B8,0,(0:0),R/W,To select control signal to start coming from controller or regfile
SML0TX,pactrl_bbws_start_test,0x501021B8,0,(1:1),R/W,Control signal from regfile to start the baseband wave shaping operation 
SML0TX,pactrl_bbws_terminate_test_sel,0x501021B8,0,(2:2),R/W,To select control signal to terminate the bbws operation comign from contr
SML0TX,pactrl_bbws_terminate_test,0x501021B8,0,(3:3),R/W,Control signal from regfile to terminate the bbws operation  
SML0TX,pactrl_sft_change_en_test_sel,0x501021B8,0,(4:4),R/W,To select between sft_change_en from controller or from the regfile
SML0TX,pactrl_sft_change_en_test,0x501021B8,0,(5:5),R/W,Enable signal coming from regfile for debugging purpose
SML0TX,pactrl_sft_terminate_test_sel,0x501021B8,0,(6:6),R/W,To select between sft_terminate from controller or from the regfile
SML0TX,pactrl_sft_terminate_test,0x501021B8,0,(7:7),R/W,Terminate signal coming from regfile for debugging purpose
SML0TX,pactrl_sft_pctrl_ws_init_test_sel,0x501021B8,0,(8:8),R/W,To select between PMOS initial value from controller or from the regfile
SML0TX,pactrl_sft_pctrl_ws_init_test,0x501021B8,0,(9:12),R/W,PMOS Initial input coming from regfile for debugging purpose
SML0TX,pactrl_sft_pctrl_ws_target_test_sel,0x501021B8,0,(13:13),R/W,To select between PMOS target value from controller or from the regfile
SML0TX,pactrl_sft_pctrl_ws_target_test,0x501021B8,0,(14:17),R/W,PMOS Target input coming from regfile for debugging purpose
SML0TX,pactrl_sft_nctrl_ws_init_test_sel,0x501021B8,0,(18:18),R/W,To select between NMOS initial value from controller or from the regfile 
SML0TX,pactrl_sft_nctrl_ws_init_test,0x501021B8,0,(19:22),R/W,NMOS Initial input coming from regfile for debugging purpose 
SML0TX,pactrl_sft_nctrl_ws_target_test_sel,0x501021B8,0,(23:23),R/W,To select between NMOS target value from controller or from the regfile
SML0TX,pactrl_sft_nctrl_ws_target_test,0x501021B8,0,(24:27),R/W,NMOS Target input coming from regfile for debugging purpose
SML0TX,pactrl_cdc_start_test_sel,0x501021B8,0,(28:28),R/W,To select control signal to start from regfile or controller
SML0TX,pactrl_cdc_start_test,0x501021B8,0,(29:29),R/W,Control signal to start coming from regfile
SML0TX,pactrl_cdc_terminate_test_sel,0x501021B8,0,(30:30),R/W,To select control signal to terminate from regfile or controller
SML0TX,pactrl_cdc_terminate_test,0x501021B8,0,(31:31),R/W,Control signal to terminatecoming from regfile
SML0TX,pactrl_pa_en_test_sel,0x501021BC,0,(0:0),R/W,Selects Enable/Disable of PA comiing from regfile or controller
SML0TX,pactrl_pa_en_test,0x501021BC,0,(1:1),R/W,Enable/Disable of PA signal from regfile
SML0TX,pactrl_pa_pctrl_ws_test_sel,0x501021BC,0,(2:2),R/W,Selects PMOS strength control comiing from regfile or controller
SML0TX,pactrl_pa_pctrl_ws_test,0x501021BC,0,(3:6),R/W,PMOS strength control signal from regfile
SML0TX,pactrl_pa_nctrl_ws_test_sel,0x501021BC,0,(7:7),R/W,Selects PMOS strength control comiing from regfile or controller
SML0TX,pactrl_pa_nctrl_ws_test,0x501021BC,0,(8:11),R/W,NMOS strength control signal from regfile
SML0TX,pactrl_pskmod_test_sel,0x501021BC,0,(12:12),R/W,Selects Control phase of RF carrier inside PA coming from regfile or feedb
SML0TX,pactrl_pskmod_test,0x501021BC,0,(13:14),R/W,Control phase of RF carrier inside PA signal from regfile
SML0TX,pactrl_pll_tx_pause_test_sel,0x501021BC,0,(15:15),R/W,Selects Pause signal to PLL coming from regfile or feedback mux (PA CTRL)
SML0TX,pactrl_pll_tx_pause_test,0x501021BC,0,(16:16),R/W,Pause signal to PLL signal from regfile
SML0TX,pactrl_trfws_start_test_sel,0x501021BC,0,(17:17),R/W,To select between trfws_start from controller or from the regfile
SML0TX,pactrl_trfws_start_test,0x501021BC,0,(18:18),R/W,Start signal coming from regfile for debugging purpose
SML0TX,pactrl_trfws_terminate_test_sel,0x501021BC,0,(19:19),R/W,To select between trfws_terminate from controller or from the regfile
SML0TX,pactrl_trfws_terminate_test,0x501021BC,0,(20:20),R/W,Terminate signal coming from regfile for debugging purpose
SML0TX,pactrl_trfws_rampup_test_sel,0x501021BC,0,(21:21),R/W,To select between rampup signal from controller or from the regfile
SML0TX,pactrl_trfws_rampup_test,0x501021BC,0,(22:22),R/W,Rampup signal coming from regfile for debugging purpose
SML0TX,pactrl_trfws_rampdwn_test_sel,0x501021BC,0,(23:23),R/W,To select between Rampdown signal from controller or from the regfile
SML0TX,pactrl_trfws_rampdwn_test,0x501021BC,0,(24:24),R/W,Rampdown signal coming from regfile for debugging purpose
SML0TX,pactrl_eof_valid_test_sel,0x501021BC,0,(25:25),R/W,Selects eof valid coming from TX Encoder or regfile
SML0TX,pactrl_eof_valid_test,0x501021BC,0,(26:26),R/W,Eof valid coming from regfile
SML0TX,pactrl_trfws_pctrl_ws_init_test_sel,0x501021BC,0,(27:27),R/W,To select between PMOS initial value from controller or from the regfile
SML0TX,pactrl_trfws_pctrl_ws_init_test,0x501021BC,0,(28:31),R/W,PMOS Initial input coming from regfile for debugging purpose
SML0TX,pactrl_trfws_nctrl_ws_init_test_sel,0x501021C0,0,(0:0),R/W,To select between NMOS initial value from controller or from the regfile
SML0TX,pactrl_trfws_nctrl_ws_init_test,0x501021C0,0,(1:4),R/W,NMOS Initial input coming from regfile for debugging purpose
SML0TX,pactrl_data_valid_test_sel,0x501021C0,0,(5:5),R/W,Selects Data Valid coming from TX Encoder or regfile
SML0TX,pactrl_data_valid_test,0x501021C0,0,(6:6),R/W,Data Valid coming from regfile 
SML0TX,pactrl_bb_data_test_sel,0x501021C0,0,(7:7),R/W,Selects baseband data coming from TX Encoder or regfile
SML0TX,pactrl_bb_data_test,0x501021C0,0,(8:8),R/W,Baseband data coming from regfile
SML0TX,pactrl_bb_data_ws_test_sel,0x501021C0,0,(9:9),R/W,Selects baseband data coming from BBWS submodule or regfile
SML0TX,pactrl_bb_data_ws_test,0x501021C0,0,(10:10),R/W,Baseband data coming from regfile to bypass BBWS output
SML0TX,pactrl_rfclk_gating_test_sel,0x501021C0,0,(11:11),R/W,Selects rfclk gating from PA CTRL or regfile
SML0TX,pactrl_rfclk_gating_test,0x501021C0,0,(12:12),R/W,rfclk gating signal from regfile for debugging
SML0TX,pactrl_pll_tx_pause_delay_start_test_sel,0x501021C0,0,(13:13),R/W,
SML0TX,pactrl_pll_tx_pause_delay_start_test,0x501021C0,0,(14:14),R/W,
SML0TX,pactrl_pll_tx_pause_terminate_test_sel,0x501021C0,0,(15:15),R/W,
SML0TX,pactrl_pll_tx_pause_terminate_test,0x501021C0,0,(16:16),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_start_test_sel,0x501021C0,0,(17:17),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_start_test,0x501021C0,0,(18:18),R/W,
SML0TX,pactrl_rx_pause_data_1_terminate_test_sel,0x501021C0,0,(19:19),R/W,
SML0TX,pactrl_rx_pause_data_1_terminate_test,0x501021C0,0,(20:20),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_start_test_sel,0x501021C0,0,(21:21),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_start_test,0x501021C0,0,(22:22),R/W,
SML0TX,pactrl_rx_pause_data_2_terminate_test_sel,0x501021C0,0,(23:23),R/W,
SML0TX,pactrl_rx_pause_data_2_terminate_test,0x501021C0,0,(24:24),R/W,
SML0TX,pactrl_rx_pause_data_1_test_sel,0x501021C0,0,(25:25),R/W,
SML0TX,pactrl_rx_pause_data_1_test,0x501021C0,0,(26:26),R/W,
SML0TX,pactrl_rx_pause_data_2_test_sel,0x501021C0,0,(27:27),R/W,
SML0TX,pactrl_rx_pause_data_2_test,0x501021C0,0,(28:28),R/W,
SML0TX,pactrl_top_ctrl_fifo_en_test_sel,0x501021C0,0,(29:29),R/W,
SML0TX,pactrl_top_ctrl_fifo_en_test,0x501021C0,0,(30:30),R/W,
SML0TX,Reserved,0x501021C0,0,(31:31),R/W,
SML0TX,top_ctrller_state_debug,0x501021C4,0,(0:7),R,
SML0TX,bbws_state_debug,0x501021C4,0,(8:15),R,
SML0TX,cdc_state_debug,0x501021C4,0,(16:23),R,
SML0TX,sft_pctrl_state_debug,0x501021C4,0,(24:31),R,
SML0TX,sft_nctrl_state_debug,0x501021C8,0,(0:7),R,
SML0TX,trfws_pctrl_state_debug,0x501021C8,0,(8:15),R,
SML0TX,trfws_nctrl_state_debug,0x501021C8,0,(16:23),R,
SML0TX,pactrl_pll_tx_pause_delay_state,0x501021C8,0,(24:31),R,
SML0TX,pactrl_rx_pause_data_1_delay_state,0x501021CC,0,(0:7),R,
SML0TX,pactrl_rx_pause_data_2_delay_state,0x501021CC,0,(8:15),R,
SML0TX,rx_pause_data_1_debug,0x501021CC,0,(16:23),R,
SML0TX,rx_pause_data_2_debug,0x501021CC,0,(24:31),R,
SML0TX,sft_pctrl_ws_debug,0x501021D0,0,(0:7),R,PMOS strength control
SML0TX,sft_nctrl_ws_debug,0x501021D0,0,(8:15),R,NMOS strength control
SML0TX,pactrl_top_ctrl_pa_en_debug,0x501021D0,0,(16:23),R,Enable/Disable of PA
SML0TX,pactrl_rfclk_gating_debug,0x501021D0,0,(24:31),R,
SML0TX,trfws_pctrl_ws_debug,0x501021D4,0,(0:7),R,
SML0TX,trfws_nctrl_ws_debug,0x501021D4,0,(8:15),R,
SML0TX,pactrl_pa_en_fifo_debug,0x501021D4,0,(16:23),R,Enable/Disable of PA
SML0TX,pactrl_pskmod_fifo_debug,0x501021D4,0,(24:31),R, Control the phase of RF carrier inside PA
SML0TX,pactrl_pa_pctrl_ws_fifo_debug,0x501021D8,0,(0:7),R,PMOS strength control
SML0TX,pactrl_pa_nctrl_ws_fifo_debug,0x501021D8,0,(8:15),R,NMOS strength control
SML0TX,pactrl_pll_tx_pause_fifo_debug,0x501021D8,0,(16:23),R,Pause signal to PLL 
SML0TX,pactrl_rx_pause_data_1_fifo_debug,0x501021D8,0,(24:31),R,
SML0TX,pactrl_rx_pause_data_2_fifo_debug,0x501021DC,0,(0:7),R,
SML0TX,pactrl_data_valid,0x501021DC,0,(8:15),R,
SML0TX,pactrl_bb_data,0x501021DC,0,(16:23),R,
SML0TX,pactrl_eof_valid,0x501021DC,0,(24:31),R,
SML0TX,sml0tx_txctrl_pactrl_start,0x501021E0,0,(0:7),R,
SML0TX,sml0tx_txctrl_pactrl_shut,0x501021E0,0,(8:15),R,
SML0TX,sml0tx_txctrl_pactrl_change,0x501021E0,0,(16:23),R,
SML0TX,pactrl_txctrl_done,0x501021E0,0,(24:31),R,Indicate the end of PA operation 
SML0TX,pactrl_txctrl_change_done,0x501021E4,0,(0:7),R,Indicate the done for changing the PA settings 
SML0TX,pactrl_txctrl_data_done,0x501021E4,0,(8:15),R,Indicate PA controller is in the Data transmission phase 
SML0TX,pactrl_txctrl_ack,0x501021E4,0,(16:23),R,Ack that the Control signal is received 
SML0TX,pactrl_txctrl_txdata,0x501021E4,0,(24:31),R,The data sent to the TX controller
SML0TX,opmux_sel,0x501021E8,0,(0:7),R,
SML0TX,sml0tx_thermal_protection_pa_rst,0x501021E8,0,(8:15),R,
SML0TX,pactrl_trfws_done,0x501021E8,0,(16:23),R,TRFWS Done signal
SML0TX,sft_done_debug,0x501021E8,0,(24:31),R,To Flag soft start/shutdown operation is done
SML0TX,pactrl_cdc_done,0x501021EC,0,(0:7),R,CDC Done signal
SML0TX,pactrl_bbws_done,0x501021EC,0,(8:15),R,BBWS Done signal
SML0TX,pactrl_pll_tx_pause_delay_done,0x501021EC,0,(16:23),R,
SML0TX,pactrl_rx_pause_data_1_delay_done,0x501021EC,0,(24:31),R,
SML0TX,pactrl_rx_pause_data_2_delay_done,0x501021F0,0,(0:7),R,
SML0TX,fdbk_mux_pskmod_debug,0x501021F0,0,(8:15),R,
SML0TX,pll_tx_pause_debug,0x501021F0,0,(16:23),R,
SML0TX,bb_data_ws_debug,0x501021F0,0,(24:31),R,
SML0TX,pactrl_wr_cnt_debug,0x501021F4,0,(0:7),R,
SML0TX,pactrl_rd_cnt_debug,0x501021F4,0,(8:15),R,
SML0TX,pactrl_topctrl_pctrl_ws,0x501021F4,0,(16:23),R,
SML0TX,pactrl_topctrl_nctrl_ws,0x501021F4,0,(24:31),R,
SML0TX,sft_change_en_debug,0x501021F8,0,(0:7),R,
SML0TX,sft_terminate_debug,0x501021F8,0,(8:15),R,
SML0TX,cdc_start_debug,0x501021F8,0,(16:23),R,
SML0TX,cdc_terminate_debug,0x501021F8,0,(24:31),R,
SML0TX,trfws_start_debug,0x501021FC,0,(0:7),R,
SML0TX,trfws_terminate_debug,0x501021FC,0,(8:15),R,
SML0TX,bbws_start_debug,0x501021FC,0,(16:23),R,
SML0TX,bbws_terminate_debug,0x501021FC,0,(24:31),R,
SML0TX,fifo_en_debug,0x50102200,0,(0:7),R,
SML0TX,spare_pactrl_debug,0x50102200,0,(8:31),R,
SML0TX,Reserved,0x50102204,0,(0:31),R,
SML0TX,Reserved,0x50102208,0,(0:31),R/W,
SML0TX,Reserved,0x5010220C,0,(0:31),R/W,
SML0TX,Reserved,0x50102210,0,(0:31),R/W,
SML0TX,Reserved,0x50102214,0,(0:31),R/W,
SML0TX,pactrl_pll_tx_pause_delay_ctrl_hipls_t1,0x50102218,0,(0:5),R/W,
SML0TX,Reserved,0x50102218,0,(6:7),R/W,
SML0TX,pactrl_pll_tx_pause_delay_ctrl_lopls_t1,0x50102218,0,(8:13),R/W,
SML0TX,Reserved,0x50102218,0,(14:15),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_ctrl_hipls_t1,0x50102218,0,(16:21),R/W,
SML0TX,Reserved,0x50102218,0,(22:23),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_ctrl_lopls_t1,0x50102218,0,(24:29),R/W,
SML0TX,Reserved,0x50102218,0,(30:31),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_ctrl_hipls_t1,0x5010221C,0,(0:5),R/W,
SML0TX,Reserved,0x5010221C,0,(6:7),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_ctrl_lopls_t1,0x5010221C,0,(8:13),R/W,
SML0TX,Reserved,0x5010221C,0,(14:31),R/W,
SML0TX,Reserved,0x50102220,0,(0:31),R/W,
SML0TX,pactrl_pll_tx_pause_delay_strt,0x50102224,0,(0:0),R/W,
SML0TX,Reserved,0x50102224,0,(1:7),R/W,
SML0TX,pactrl_pll_tx_pause_delay_terminate,0x50102224,0,(8:8),R/W,
SML0TX,Reserved,0x50102224,0,(9:15),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_strt,0x50102224,0,(16:16),R/W,
SML0TX,Reserved,0x50102224,0,(17:23),R/W,
SML0TX,pactrl_rx_pause_data_1_delay_terminate,0x50102224,0,(24:24),R/W,
SML0TX,Reserved,0x50102224,0,(25:31),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_strt,0x50102228,0,(0:0),R/W,
SML0TX,Reserved,0x50102228,0,(1:7),R/W,
SML0TX,pactrl_rx_pause_data_2_delay_terminate,0x50102228,0,(8:8),R/W,
SML0TX,Reserved,0x50102228,0,(9:15),R/W,
SML0TX,pactrl_pll_tx_pause_duty_cycle_en,0x50102228,1,(16:16),R/W,
SML0TX,pactrl_rx_pause_data_1_duty_cycle_en,0x50102228,1,(17:17),R/W,
SML0TX,pactrl_rx_pause_data_2_duty_cycle_en,0x50102228,1,(18:18),R/W,
SML0TX,Reserved,0x50102228,0,(19:31),R/W,
SML0TX,sml0tx_idmux_rfseq_line_0,0x5010222C,0,(0:2),R/W,
SML0TX,Reserved,0x5010222C,0,(3:3),R/W,
SML0TX,sml0tx_idmux_rfseq_line_1,0x5010222C,0,(4:6),R/W,
SML0TX,Reserved,0x5010222C,0,(7:7),R/W,
SML0TX,sml0tx_idmux_rfseq_line_2,0x5010222C,0,(8:10),R/W,
SML0TX,Reserved,0x5010222C,0,(11:11),R/W,
SML0TX,sml0tx_idmux_rfseq_line_3,0x5010222C,0,(12:14),R/W,
SML0TX,Reserved,0x5010222C,0,(15:15),R/W,
SML0TX,sml0tx_dma_mode,0x5010222C,0,(16:18),R/W,
SML0TX,Reserved,0x5010222C,0,(19:31),R/W,
SML0TX,sml0tx_idmux_sel0,0x50102230,0,(0:1),R/W,
SML0TX,sml0tx_idmux_sel1,0x50102230,0,(2:3),R/W,
SML0TX,sml0tx_idmux_sel2,0x50102230,0,(4:5),R/W,
SML0TX,sml0tx_idmux_sel3,0x50102230,0,(6:7),R/W,
SML0TX,sml0tx_idmux_sel4,0x50102230,0,(8:9),R/W,
SML0TX,sml0tx_idmux_sel5,0x50102230,0,(10:11),R/W,
SML0TX,sml0tx_idmux_sel6,0x50102230,0,(12:13),R/W,
SML0TX,sml0tx_idmux_sel7,0x50102230,0,(14:15),R/W,
SML0TX,sml0tx_idmux_sel8,0x50102230,0,(16:17),R/W,
SML0TX,sml0tx_idmux_sel9,0x50102230,0,(18:19),R/W,
SML0TX,sml0tx_idmux_sel10,0x50102230,0,(20:21),R/W,
SML0TX,sml0tx_idmux_sel11,0x50102230,0,(22:23),R/W,
SML0TX,sml0tx_idmux_sel12,0x50102230,0,(24:25),R/W,
SML0TX,sml0tx_idmux_sel13,0x50102230,0,(26:27),R/W,
SML0TX,sml0tx_idmux_sel14,0x50102230,0,(28:29),R/W,
SML0TX,sml0tx_idmux_sel15,0x50102230,0,(30:31),R/W,
SML0TX,sml0tx_idmux_sel16,0x50102234,0,(0:1),R/W,
SML0TX,Reserved,0x50102234,0,(2:31),R/W,
SML0TX,sml0tx_idmux_en,0x50102238,0,(0:16),R/W,
SML0TX,Reserved,0x50102238,0,(17:31),R/W,
SML0TX,sml0tx_odmux_out1_sel,0x5010223C,1,(0:7),R/W,
SML0TX,sml0tx_odmux_out2_sel,0x5010223C,1,(8:15),R/W,
SML0TX,sml0tx_odmux_out3_sel,0x5010223C,1,(16:23),R/W,
SML0TX,sml0tx_odmux_out4_sel,0x5010223C,1,(24:31),R/W,
SML0TX,spare_sml0tx_reg0,0x50102240,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_reg1,0x50102244,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_reg2,0x50102248,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_reg3,0x5010224C,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_reg4,0x50102250,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_reg5,0x50102254,0,(0:31),R/W,Spare
SML0TX,spare_sml0tx_reg6,0x50102258,65535,(0:31),R/W,Spare
SML0TX,spare_sml0tx_reg7,0x5010225C,65535,(0:31),R/W,Spare
SML0TX,Reserved,0x50102260,0,(0:31),R/W,
SML0TX,Reserved,0x50102264,0,(0:31),R/W,
SML0TX,spare_sml0tx_rdreg0,0x50102268,0,(0:31),R,Spare
SML0TX,spare_sml0tx_rdreg1,0x5010226C,0,(0:31),R,Spare
SML0TX,spare_sml0tx_rdreg2,0x50102270,0,(0:31),R,Spare
SML0TX,spare_sml0tx_rdreg3,0x50102274,0,(0:31),R,Spare
SML0TX,spare_sml0tx_rdreg4,0x50102278,0,(0:31),R,Spare
SML0TX,spare_sml0tx_rdreg5,0x5010227C,0,(0:31),R,Spare
SML0TX,spare_sml0tx_rdreg6,0x50102280,65535,(0:31),R,Spare
SML0TX,spare_sml0tx_rdreg7,0x50102284,65535,(0:31),R,Spare
SML0TX,Reserved,0x50102288,0,(0:31),R,
SML0TX,Reserved,0x5010228C,0,(0:31),R,
STDBY,pll_xobuffresfbctrl_1vs,0x5010A000,0,(0:0),R/W,xo buff res fb ctrl
STDBY,pll_xobuffresctrl_1vs,0x5010A000,0,(1:3),R/W,Controling current limmiting in xo buffer through a prog. resistor at supply and gnd  10 Ohms at '111' and 646 Ohms at '000'
STDBY,pll_xoextxobuffresctrl_1vs,0x5010A000,0,(4:6),R/W,Controling current limmiting in external xo buffer through a prog. resistor at supply and gnd  10 Ohms at '111' and 646 Ohms at '000'
STDBY,spare_stdby_romdyn0,0x5010A004,65535,(0:31),R/W,Spare
STDBY,spare_stdby_romdyn1,0x5010A008,65535,(0:31),R/W,Spare
STDBY,Reserved,0x5010A00C,0,(0:31),R/W,
STDBY,Reserved,0x5010A010,0,(0:31),R/W,
STDBY,rxctrl_bbagc_load_default_en,0x5010A014,1,(0:0),R/W,Enable Loading the BBAGC defaults once the Active power domain is entered until the wakeup of the DSP which shall de-assert this signal before starting the operation
STDBY,spare_stndby_bbagc_ld,0x5010A014,0,(1:7),R/W,
STDBY,spare_stndby_sml1,0x5010A014,0,(8:30),R/W,
STDBY,spare_stdby_romdyn2,0x5010A018,65535,(0:31),R/W,Spare
STDBY,spare_stdby_romdyn3,0x5010A01C,65535,(0:31),R/W,Spare
STDBY,Reserved,0x5010A020,0,(0:31),R/W,
STDBY,Reserved,0x5010A024,0,(0:31),R/W,
STDBY,pll_xoprescdutycyclectrl_1vs,0x5010A028,0,(0:1),R/W,Controling duty cycle of frequency doubler output in prescaler.
STDBY,pll_xopreschighdutycycleen_1vs,0x5010A028,0,(2:2),R/W,Enabling high duty cycle for frequency double in prescaler.
STDBY,Reserved,0x5010A028,0,(3:31),R/W,
STDBY,stdbyclkgen_wkup_rx_clk_div,0x5010A02C,0,(0:9),R/W,Wakeup-RX Clock Division
STDBY,stdbyclkgen_poll_timer_clk_div,0x5010A02C,0,(10:19),R/W,Polling Timer Clock Division
STDBY,stdbyclkgen_swp_clk_div,0x5010A02C,3,(20:22),R/W,SWP Clock Division
STDBY,stdbyclkgen_wkup_rx_clk_div_sel,0x5010A02C,0,(23:23),R/W,Wakeup-RX Clock Division
STDBY,stdbyclkgen_poll_timer_clk_div_sel,0x5010A02C,0,(24:24),R/W,Polling Timer Clock Division
STDBY,stdbyclkgen_wkup_rx_clk_div_bypass_align,0x5010A02C,1,(25:25),R/W,Alignment Bypasses
STDBY,stdbyclkgen_poll_timer_clk_div_bypass_align,0x5010A02C,1,(26:26),R/W,Alignment Bypasses
STDBY,stdbyclkgen_swp_clk_div_bypass_align,0x5010A02C,1,(27:27),R/W,Alignment Bypasses
STDBY,Reserved,0x5010A02C,0,(28:31),R/W,
STDBY,marker_cnt_en,0x5010A030,1,(0:0),R/W,Marker Counter Enable
STDBY,marker_period,0x5010A030,47,(1:10),R/W,Marker Counter Period
STDBY,Reserved,0x5010A030,0,(11:31),R/W,
STDBY,actvclkgen_tdc_interface_clk_div_bypass_align_0,0x5010A034,0,(0:0),R/W,Alignment Bypasses
STDBY,actvclkgen_vco_cal_clk_div_bypass_align_0,0x5010A034,0,(1:1),R/W,Alignment Bypasses
STDBY,actvclkgen_pll_adjust_clk_div_bypass_align_0,0x5010A034,0,(2:2),R/W,Alignment Bypasses
STDBY,actvclkgen_pll_pause_monitor_clk_div_bypass_align_0,0x5010A034,0,(3:3),R/W,Alignment Bypasses
STDBY,actvclkgen_dcoc_fc_clk_div_bypass_align_0,0x5010A034,0,(4:4),R/W,Alignment Bypasses
STDBY,actvclkgen_dcoc_2fc_clk_div_bypass_align_0,0x5010A034,0,(5:5),R/W,Alignment Bypasses
STDBY,actvclkgen_dcoc_fir_clk_div_bypass_align_0,0x5010A034,0,(6:6),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_deci_clk_div_bypass_align_0,0x5010A034,0,(7:7),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_adc_div2_clk_div_bypass_align_0,0x5010A034,0,(8:8),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_deci_op_clk_div_bypass_align_0,0x5010A034,0,(9:9),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_adc_op_clk_div_bypass_align_0,0x5010A034,0,(10:10),R/W,Alignment Bypasses
STDBY,actvclkgen_trgtphopt_clk_div_bypass_align_0,0x5010A034,0,(11:11),R/W,Alignment Bypasses
STDBY,actvclkgen_rx_lpf_bw_clk_div_bypass_align_0,0x5010A034,0,(12:12),R/W,Alignment Bypasses
STDBY,actvclkgen_rfagc_clk_div_bypass_align_0,0x5010A034,0,(13:13),R/W,Alignment Bypasses
STDBY,actvclkgen_pa_ctrl_clk_div_bypass_align_0,0x5010A034,0,(14:14),R/W,Alignment Bypasses
STDBY,actvclkgen_pa_ctrl_cdc_clk_div_bypass_align_0,0x5010A034,0,(15:15),R/W,Alignment Bypasses
STDBY,actvclkgen_tx_ldo_ctrl_clk_div_bypass_align_0,0x5010A034,0,(16:16),R/W,Alignment Bypasses
STDBY,actvclkgen_sml1_clk_div_bypass_align_0,0x5010A034,0,(17:17),R/W,Alignment Bypasses
STDBY,actvclkgen_gpadc_conv_clk_div_bypass_align_0,0x5010A034,1,(18:18),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_subsys_clk_div_bypass_align_0,0x5010A034,0,(19:19),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_root_clk_div_bypass_align_0,0x5010A034,0,(20:20),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_apb3_clk_div_bypass_align_0,0x5010A034,0,(21:21),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_apb2_clk_div_bypass_align_0,0x5010A034,0,(22:22),R/W,Alignment Bypasses
STDBY,actvclkgen_uart_root_clk_div_bypass_align_0,0x5010A034,0,(23:23),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_timer_ref_clk_div_bypass_align_0,0x5010A034,0,(24:24),R/W,Alignment Bypasses
STDBY,actvclkgen_cli_root_clk_div_bypass_align_0,0x5010A034,0,(25:25),R/W,Alignment Bypasses
STDBY,actvclkgen_adc_root_clk_div_bypass_align_0,0x5010A034,0,(26:26),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_clk_div_bypass_align_0,0x5010A034,0,(27:27),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_apb0_clk_div_bypass_align_0,0x5010A034,0,(28:28),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_apb1_clk_div_bypass_align_0,0x5010A034,0,(29:29),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_spi_clk_div_bypass_align_0,0x5010A034,0,(30:30),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_i2c_fclk_div_bypass_align_0,0x5010A034,0,(31:31),R/W,Alignment Bypasses
STDBY,actvclkgen_tdc_interface_clk_div_bypass_align_1,0x5010A038,0,(0:0),R/W,Alignment Bypasses
STDBY,actvclkgen_vco_cal_clk_div_bypass_align_1,0x5010A038,0,(1:1),R/W,Alignment Bypasses
STDBY,actvclkgen_pll_adjust_clk_div_bypass_align_1,0x5010A038,0,(2:2),R/W,Alignment Bypasses
STDBY,actvclkgen_pll_pause_monitor_clk_div_bypass_align_1,0x5010A038,0,(3:3),R/W,Alignment Bypasses
STDBY,actvclkgen_dcoc_fc_clk_div_bypass_align_1,0x5010A038,0,(4:4),R/W,Alignment Bypasses
STDBY,actvclkgen_dcoc_2fc_clk_div_bypass_align_1,0x5010A038,0,(5:5),R/W,Alignment Bypasses
STDBY,actvclkgen_dcoc_fir_clk_div_bypass_align_1,0x5010A038,0,(6:6),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_deci_clk_div_bypass_align_1,0x5010A038,0,(7:7),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_adc_div2_clk_div_bypass_align_1,0x5010A038,0,(8:8),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_deci_op_clk_div_bypass_align_1,0x5010A038,0,(9:9),R/W,Alignment Bypasses
STDBY,actvclkgen_bb_agc_adc_op_clk_div_bypass_align_1,0x5010A038,0,(10:10),R/W,Alignment Bypasses
STDBY,actvclkgen_trgtphopt_clk_div_bypass_align_1,0x5010A038,0,(11:11),R/W,Alignment Bypasses
STDBY,actvclkgen_rx_lpf_bw_clk_div_bypass_align_1,0x5010A038,0,(12:12),R/W,Alignment Bypasses
STDBY,actvclkgen_rfagc_clk_div_bypass_align_1,0x5010A038,0,(13:13),R/W,Alignment Bypasses
STDBY,actvclkgen_pa_ctrl_clk_div_bypass_align_1,0x5010A038,0,(14:14),R/W,Alignment Bypasses
STDBY,actvclkgen_pa_ctrl_cdc_clk_div_bypass_align_1,0x5010A038,0,(15:15),R/W,Alignment Bypasses
STDBY,actvclkgen_tx_ldo_ctrl_clk_div_bypass_align_1,0x5010A038,0,(16:16),R/W,Alignment Bypasses
STDBY,actvclkgen_sml1_clk_div_bypass_align_1,0x5010A038,0,(17:17),R/W,Alignment Bypasses
STDBY,actvclkgen_gpadc_conv_clk_div_bypass_align_1,0x5010A038,1,(18:18),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_subsys_clk_div_bypass_align_1,0x5010A038,0,(19:19),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_root_clk_div_bypass_align_1,0x5010A038,0,(20:20),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_apb3_clk_div_bypass_align_1,0x5010A038,0,(21:21),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_apb2_clk_div_bypass_align_1,0x5010A038,0,(22:22),R/W,Alignment Bypasses
STDBY,actvclkgen_uart_root_clk_div_bypass_align_1,0x5010A038,0,(23:23),R/W,Alignment Bypasses
STDBY,actvclkgen_dsp_timer_ref_clk_div_bypass_align_1,0x5010A038,0,(24:24),R/W,Alignment Bypasses
STDBY,actvclkgen_cli_root_clk_div_bypass_align_1,0x5010A038,0,(25:25),R/W,Alignment Bypasses
STDBY,actvclkgen_adc_root_clk_div_bypass_align_1,0x5010A038,0,(26:26),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_clk_div_bypass_align_1,0x5010A038,0,(27:27),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_apb0_clk_div_bypass_align_1,0x5010A038,0,(28:28),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_apb1_clk_div_bypass_align_1,0x5010A038,0,(29:29),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_spi_clk_div_bypass_align_1,0x5010A038,0,(30:30),R/W,Alignment Bypasses
STDBY,actvclkgen_mcu_i2c_fclk_div_bypass_align_1,0x5010A038,0,(31:31),R/W,Alignment Bypasses
STDBY,wkuprx_td_rfdet_colavo,0x5010A03C,0,(0:8),R/W,Duration between Start and detection
STDBY,wkuprx_ton_rfdet,0x5010A03C,0,(9:23),R/W,Ton Duration for RF Detection
STDBY,Reserved,0x5010A03C,0,(24:31),R/W,
STDBY,wkuprx_toff_rfdet,0x5010A040,0,(0:14),R/W,Toff Duration for RF Detection
STDBY,wkuprx_thrs1_rfdet,0x5010A040,0,(15:29),R/W,Programmable minimum threshold for RF detection
STDBY,Reserved,0x5010A040,0,(30:31),R/W,
STDBY,wkuprx_thrs2_rfdet,0x5010A044,0,(0:14),R/W,Programmable maximum threshold for RF detection
STDBY,Reserved,0x5010A044,0,(15:31),R/W,
STDBY,i2cwkup_add1,0x5010A048,0,(0:6),R/W,I2C Wakeup Address 1
STDBY,i2cwkup_add1_en,0x5010A048,0,(7:7),R/W,I2C Wakeup Address 1 Enable
STDBY,i2cwkup_add2,0x5010A048,0,(8:14),R/W,I2C Wakeup Address 2
STDBY,i2cwkup_add2_en,0x5010A048,0,(15:15),R/W,I2C Wakeup Address 2 Enable
STDBY,i2cwkup_add3,0x5010A048,0,(16:22),R/W,I2C Wakeup Address 3
STDBY,i2cwkup_add3_en,0x5010A048,0,(23:23),R/W,I2C Wakeup Address 3 Enable
STDBY,i2cwkup_add4,0x5010A048,0,(24:30),R/W,I2C Wakeup Address 4
STDBY,i2cwkup_add4_en,0x5010A048,0,(31:31),R/W,I2C Wakeup Address 4 Enable
STDBY,pll_lfvdden_1vh_stdby_img,0x5010A04C,0,(0:0),R/W,Standby Images
STDBY,pll_lflockdeten_1vh_stdby_img,0x5010A04C,0,(1:1),R/W,Standby Images
STDBY,pll_vcobiascoreen_1vh_stdby_img,0x5010A04C,0,(2:2),R/W,Standby Images
STDBY,pll_vcoen_1vh_stdby_img,0x5010A04C,0,(3:3),R/W,Standby Images
STDBY,pll_vcobiasvdden_1vh_stdby_img,0x5010A04C,0,(4:4),R/W,Standby Images
STDBY,pll_vcopdivvdden_1vh_stdby_img,0x5010A04C,0,(5:5),R/W,Standby Images
STDBY,pll_vcofbdivvdden_1vh_stdby_img,0x5010A04C,0,(6:6),R/W,Standby Images
STDBY,pll_vcocorevdden_1vh_stdby_img,0x5010A04C,0,(7:7),R/W,Standby Images
STDBY,pll_vcocfsbuffvdden_1vh_stdby_img,0x5010A04C,0,(8:8),R/W,Standby Images
STDBY,pll_pfdcpvdden_1vh_stdby_img,0x5010A04C,0,(9:9),R/W,Standby Images
STDBY,pll_pfden_1vh_stdby_img,0x5010A04C,0,(10:10),R/W,Standby Images
STDBY,pll_cpen_1vh_stdby_img,0x5010A04C,0,(11:11),R/W,Standby Images
STDBY,pll_1stpdivcorevdden_1vh_stdby_img,0x5010A04C,0,(12:12),R/W,Standby Images
STDBY,pll_2ndpdivvdden_1vh_stdby_img,0x5010A04C,0,(13:13),R/W,Standby Images
STDBY,pll_pdivoutbuffvdden_1vh_stdby_img,0x5010A04C,0,(14:14),R/W,Standby Images
STDBY,pll_1stpdiven_1vh_stdby_img,0x5010A04C,0,(15:15),R/W,Standby Images
STDBY,pll_fbdivsdvdden_1vh_stdby_img,0x5010A04C,0,(16:16),R/W,Standby Images
STDBY,pll_fbdivcorevdden_1vh_stdby_img,0x5010A04C,0,(17:17),R/W,Standby Images
STDBY,pll_pbpden_1vh_stdby_img,0x5010A04C,0,(18:18),R/W,Standby Images
STDBY,pll_xocorevdden_1vs_stdby_img,0x5010A04C,0,(19:19),R/W,Standby Images
STDBY,pll_xobuffsvdden_1vs_stdby_img,0x5010A04C,0,(20:20),R/W,Standby Images
STDBY,pll_xoprescaleren_1vs_stdby_img,0x5010A04C,0,(21:21),R/W,Standby Images
STDBY,trx_rxfeclkcmpen_1vh_stdby_img,0x5010A04C,0,(22:22),R/W,Standby Images
STDBY,trx_rxfethrshcmphen_1vh_stdby_img,0x5010A04C,0,(23:23),R/W,Standby Images
STDBY,trx_rxfethrshcmpmen_1vh_stdby_img,0x5010A04C,0,(24:24),R/W,Standby Images
STDBY,trx_rxfethrshcmplen_1vh_stdby_img,0x5010A04C,0,(25:25),R/W,Standby Images
STDBY,trx_rxferefdacmen_1vh_stdby_img,0x5010A04C,0,(26:26),R/W,Standby Images
STDBY,trx_rxferefdachen_1vh_stdby_img,0x5010A04C,0,(27:27),R/W,Standby Images
STDBY,trx_rxferefdaclen_1vh_stdby_img,0x5010A04C,0,(28:28),R/W,Standby Images
STDBY,rfagcen_1vh_stdby_img,0x5010A04C,0,(29:29),R/W,Standby Images
STDBY,trx_rxclkgnen_1vs_stdby_img,0x5010A04C,0,(30:30),R/W,Standby Images
STDBY,trx_rxcmbfen_1vh_stdby_img,0x5010A04C,0,(31:31),R/W,Standby Images
STDBY,trx_rxmxren_1vh_stdby_img,0x5010A050,0,(0:0),R/W,Standby Images
STDBY,trx_rxmxrien_1vh_stdby_img,0x5010A050,0,(1:1),R/W,Standby Images
STDBY,trx_rxmxrqen_1vh_stdby_img,0x5010A050,0,(2:2),R/W,Standby Images
STDBY,trx_rxibbaen_1vh_stdby_img,0x5010A050,0,(3:3),R/W,Standby Images
STDBY,trx_rxqbbaen_1vh_stdby_img,0x5010A050,0,(4:4),R/W,Standby Images
STDBY,trx_adcrefbfen_1vh_stdby_img,0x5010A050,0,(5:5),R/W,Standby Images
STDBY,trx_rxpien_1vh_stdby_img,0x5010A050,0,(6:6),R/W,Standby Images
STDBY,trx_txpien_1vh_stdby_img,0x5010A050,0,(7:7),R/W,Standby Images
STDBY,trx_rxiadcen_1vh_stdby_img,0x5010A050,0,(8:8),R/W,Standby Images
STDBY,trx_rxqadcen_1vh_stdby_img,0x5010A050,0,(9:9),R/W,Standby Images
STDBY,trx_rxicdacen_1vh_stdby_img,0x5010A050,0,(10:10),R/W,Standby Images
STDBY,trx_rxifdacen_1vh_stdby_img,0x5010A050,0,(11:11),R/W,Standby Images
STDBY,trx_rxqcdacen_1vh_stdby_img,0x5010A050,0,(12:12),R/W,Standby Images
STDBY,trx_rxqfdacen_1vh_stdby_img,0x5010A050,0,(13:13),R/W,Standby Images
STDBY,trx_abpden_1vh_stdby_img,0x5010A050,0,(14:14),R/W,Standby Images
STDBY,trx_abpdoffsetdacen_1vh_stdby_img,0x5010A050,0,(15:15),R/W,Standby Images
STDBY,dc_dc_en_stdby_img,0x5010A050,0,(16:16),R/W,Standby Images
STDBY,ext_clk_request_stdby_img,0x5010A050,0,(17:17),R/W,Standby Images
STDBY,pwrctrl2spares_1vs_stdby_img,0x5010A050,0,(18:21),R/W,Standby Images
STDBY,pwrctrl3spares_1vs_stdby_img,0x5010A050,0,(22:25),R/W,Standby Images
STDBY,pll_xoen_1vs_stdby_img,0x5010A050,0,(26:26),R/W,Standby Images
STDBY,pll_xobypassen_1vs_stdby_img,0x5010A050,0,(27:27),R/W,Standby Images
STDBY,pll_xobiasen_1vs_stdby_img,0x5010A050,0,(28:28),R/W,Standby Images
STDBY,pll_xobuffen_1vs_stdby_img,0x5010A050,0,(29:29),R/W,Standby Images
STDBY,pll_xopllen_1vs_stdby_img,0x5010A050,0,(30:30),R/W,Standby Images
STDBY,pll_xotdcen_1vs_stdby_img,0x5010A050,0,(31:31),R/W,Standby Images
STDBY,pll_xopostdiven_1vs_stdby_img,0x5010A054,0,(0:0),R/W,Standby Images
STDBY,pll_xoprescmuxctrl_1vs_stdby_img,0x5010A054,0,(1:2),R/W,Standby Images
STDBY,pll_lfvdden_1vh_actvidle_img,0x5010A054,0,(3:3),R/W,Active Idle Images
STDBY,pll_lflockdeten_1vh_actvidle_img,0x5010A054,0,(4:4),R/W,Active Idle Images
STDBY,pll_vcobiascoreen_1vh_actvidle_img,0x5010A054,0,(5:5),R/W,Active Idle Images
STDBY,pll_vcoen_1vh_actvidle_img,0x5010A054,0,(6:6),R/W,Active Idle Images
STDBY,pll_vcobiasvdden_1vh_actvidle_img,0x5010A054,0,(7:7),R/W,Active Idle Images
STDBY,pll_vcopdivvdden_1vh_actvidle_img,0x5010A054,0,(8:8),R/W,Active Idle Images
STDBY,pll_vcofbdivvdden_1vh_actvidle_img,0x5010A054,0,(9:9),R/W,Active Idle Images
STDBY,pll_vcocorevdden_1vh_actvidle_img,0x5010A054,0,(10:10),R/W,Active Idle Images
STDBY,pll_vcocfsbuffvdden_1vh_actvidle_img,0x5010A054,0,(11:11),R/W,Active Idle Images
STDBY,pll_pfdcpvdden_1vh_actvidle_img,0x5010A054,0,(12:12),R/W,Active Idle Images
STDBY,pll_pfden_1vh_actvidle_img,0x5010A054,0,(13:13),R/W,Active Idle Images
STDBY,pll_cpen_1vh_actvidle_img,0x5010A054,0,(14:14),R/W,Active Idle Images
STDBY,pll_1stpdivcorevdden_1vh_actvidle_img,0x5010A054,0,(15:15),R/W,Active Idle Images
STDBY,pll_2ndpdivvdden_1vh_actvidle_img,0x5010A054,0,(16:16),R/W,Active Idle Images
STDBY,pll_pdivoutbuffvdden_1vh_actvidle_img,0x5010A054,0,(17:17),R/W,Active Idle Images
STDBY,pll_1stpdiven_1vh_actvidle_img,0x5010A054,0,(18:18),R/W,Active Idle Images
STDBY,pll_fbdivsdvdden_1vh_actvidle_img,0x5010A054,0,(19:19),R/W,Active Idle Images
STDBY,pll_fbdivcorevdden_1vh_actvidle_img,0x5010A054,0,(20:20),R/W,Active Idle Images
STDBY,pll_pbpden_1vh_actvidle_img,0x5010A054,0,(21:21),R/W,Active Idle Images
STDBY,pll_xocorevdden_1vs_actvidle_img,0x5010A054,0,(22:22),R/W,Active Idle Images
STDBY,pll_xobuffsvdden_1vs_actvidle_img,0x5010A054,0,(23:23),R/W,Active Idle Images
STDBY,pll_xoprescaleren_1vs_actvidle_img,0x5010A054,0,(24:24),R/W,Active Idle Images
STDBY,trx_rxfeclkcmpen_1vh_actvidle_img,0x5010A054,0,(25:25),R/W,Active Idle Images
STDBY,trx_rxfethrshcmphen_1vh_actvidle_img,0x5010A054,0,(26:26),R/W,Active Idle Images
STDBY,trx_rxfethrshcmpmen_1vh_actvidle_img,0x5010A054,0,(27:27),R/W,Active Idle Images
STDBY,trx_rxfethrshcmplen_1vh_actvidle_img,0x5010A054,0,(28:28),R/W,Active Idle Images
STDBY,trx_rxferefdacmen_1vh_actvidle_img,0x5010A054,0,(29:29),R/W,Active Idle Images
STDBY,trx_rxferefdachen_1vh_actvidle_img,0x5010A054,0,(30:30),R/W,Active Idle Images
STDBY,trx_rxferefdaclen_1vh_actvidle_img,0x5010A054,0,(31:31),R/W,Active Idle Images
STDBY,rfagcen_1vh_actvidle_img,0x5010A058,0,(0:0),R/W,Active Idle Images
STDBY,trx_rxclkgnen_1vs_actvidle_img,0x5010A058,0,(1:1),R/W,Active Idle Images
STDBY,trx_rxcmbfen_1vh_actvidle_img,0x5010A058,0,(2:2),R/W,Active Idle Images
STDBY,trx_rxmxren_1vh_actvidle_img,0x5010A058,0,(3:3),R/W,Active Idle Images
STDBY,trx_rxmxrien_1vh_actvidle_img,0x5010A058,0,(4:4),R/W,Active Idle Images
STDBY,trx_rxmxrqen_1vh_actvidle_img,0x5010A058,0,(5:5),R/W,Active Idle Images
STDBY,trx_rxibbaen_1vh_actvidle_img,0x5010A058,0,(6:6),R/W,Active Idle Images
STDBY,trx_rxqbbaen_1vh_actvidle_img,0x5010A058,0,(7:7),R/W,Active Idle Images
STDBY,trx_adcrefbfen_1vh_actvidle_img,0x5010A058,0,(8:8),R/W,Active Idle Images
STDBY,trx_rxpien_1vh_actvidle_img,0x5010A058,0,(9:9),R/W,Active Idle Images
STDBY,trx_txpien_1vh_actvidle_img,0x5010A058,0,(10:10),R/W,Active Idle Images
STDBY,trx_rxiadcen_1vh_actvidle_img,0x5010A058,0,(11:11),R/W,Active Idle Images
STDBY,trx_rxqadcen_1vh_actvidle_img,0x5010A058,0,(12:12),R/W,Active Idle Images
STDBY,trx_rxicdacen_1vh_actvidle_img,0x5010A058,0,(13:13),R/W,Active Idle Images
STDBY,trx_rxifdacen_1vh_actvidle_img,0x5010A058,0,(14:14),R/W,Active Idle Images
STDBY,trx_rxqcdacen_1vh_actvidle_img,0x5010A058,0,(15:15),R/W,Active Idle Images
STDBY,trx_rxqfdacen_1vh_actvidle_img,0x5010A058,0,(16:16),R/W,Active Idle Images
STDBY,trx_abpden_1vh_actvidle_img,0x5010A058,0,(17:17),R/W,Active Idle Images
STDBY,trx_abpdoffsetdacen_1vh_actvidle_img,0x5010A058,0,(18:18),R/W,Active Idle Images
STDBY,dc_dc_en_actvidle_img,0x5010A058,0,(19:19),R/W,Active Idle Images
STDBY,ext_clk_request_actvidle_img,0x5010A058,0,(20:20),R/W,Active Idle Images
STDBY,pwrctrl2spares_1vs_actvidle_img,0x5010A058,0,(21:24),R/W,Active Idle Images
STDBY,Reserved,0x5010A058,0,(25:25),R/W,
STDBY,pwrctrl3spares_1vs_actvidle_img,0x5010A058,0,(26:29),R/W,Active Idle Images
STDBY,pll_xoen_1vs_actvidle_img,0x5010A058,0,(30:30),R/W,Active Idle Images
STDBY,pll_xobypassen_1vs_actvidle_img,0x5010A058,0,(31:31),R/W,Active Idle Images
STDBY,pll_xobiasen_1vs_actvidle_img,0x5010A05C,0,(0:0),R/W,Active Idle Images
STDBY,pll_xobuffen_1vs_actvidle_img,0x5010A05C,0,(1:1),R/W,Active Idle Images
STDBY,pll_xopllen_1vs_actvidle_img,0x5010A05C,0,(2:2),R/W,Active Idle Images
STDBY,pll_xotdcen_1vs_actvidle_img,0x5010A05C,0,(3:3),R/W,Active Idle Images
STDBY,pll_xopostdiven_1vs_actvidle_img,0x5010A05C,0,(4:4),R/W,Active Idle Images
STDBY,pll_xoprescmuxctrl_1vs_actvidle_img,0x5010A05C,0,(5:6),R/W,Active Idle Images
STDBY,actvclkgen_dsp_subsys_clk_div_actvidle_img,0x5010A05C,0,(7:9),R/W,Active Idle Images
STDBY,actvclkgen_mcu_clk_div_actvidle_img,0x5010A05C,0,(10:12),R/W,Active Idle Images
STDBY,m0_clk_en_actvidle_img,0x5010A05C,1,(13:13),R/W,Active Idle Images
STDBY,dsp_clk_en_actvidle_img,0x5010A05C,1,(14:14),R/W,Active Idle Images
STDBY,actvclkgen_dsp_m0_hclk_div_ratio_actvidle_img,0x5010A05C,0,(15:16),R/W,Active Idle Images
STDBY,dsp_subset_clk_en_actvidle_img,0x5010A05C,0,(17:17),R/W,Active Idle Images
STDBY,m0_subset_clk_en_actvidle_img,0x5010A05C,0,(18:18),R/W,Active Idle Images
STDBY,pll_lfvdden_1vh_actvpoll_img,0x5010A05C,1,(19:19),R/W,Active Poll Images
STDBY,pll_lflockdeten_1vh_actvpoll_img,0x5010A05C,1,(20:20),R/W,Active Poll Images
STDBY,pll_vcobiascoreen_1vh_actvpoll_img,0x5010A05C,1,(21:21),R/W,Active Poll Images
STDBY,pll_vcoen_1vh_actvpoll_img,0x5010A05C,1,(22:22),R/W,Active Poll Images
STDBY,pll_vcobiasvdden_1vh_actvpoll_img,0x5010A05C,1,(23:23),R/W,Active Poll Images
STDBY,pll_vcopdivvdden_1vh_actvpoll_img,0x5010A05C,1,(24:24),R/W,Active Poll Images
STDBY,pll_vcofbdivvdden_1vh_actvpoll_img,0x5010A05C,1,(25:25),R/W,Active Poll Images
STDBY,pll_vcocorevdden_1vh_actvpoll_img,0x5010A05C,1,(26:26),R/W,Active Poll Images
STDBY,pll_vcocfsbuffvdden_1vh_actvpoll_img,0x5010A05C,1,(27:27),R/W,Active Poll Images
STDBY,pll_pfdcpvdden_1vh_actvpoll_img,0x5010A05C,1,(28:28),R/W,Active Poll Images
STDBY,pll_pfden_1vh_actvpoll_img,0x5010A05C,1,(29:29),R/W,Active Poll Images
STDBY,pll_cpen_1vh_actvpoll_img,0x5010A05C,1,(30:30),R/W,Active Poll Images
STDBY,pll_1stpdivcorevdden_1vh_actvpoll_img,0x5010A05C,1,(31:31),R/W,Active Poll Images
STDBY,pll_2ndpdivvdden_1vh_actvpoll_img,0x5010A060,1,(0:0),R/W,Active Poll Images
STDBY,pll_pdivoutbuffvdden_1vh_actvpoll_img,0x5010A060,1,(1:1),R/W,Active Poll Images
STDBY,pll_1stpdiven_1vh_actvpoll_img,0x5010A060,1,(2:2),R/W,Active Poll Images
STDBY,pll_fbdivsdvdden_1vh_actvpoll_img,0x5010A060,1,(3:3),R/W,Active Poll Images
STDBY,pll_fbdivcorevdden_1vh_actvpoll_img,0x5010A060,1,(4:4),R/W,Active Poll Images
STDBY,pll_pbpden_1vh_actvpoll_img,0x5010A060,0,(5:5),R/W,Active Poll Images
STDBY,pll_xocorevdden_1vs_actvpoll_img,0x5010A060,1,(6:6),R/W,Active Poll Images
STDBY,pll_xobuffsvdden_1vs_actvpoll_img,0x5010A060,1,(7:7),R/W,Active Poll Images
STDBY,pll_xoprescaleren_1vs_actvpoll_img,0x5010A060,1,(8:8),R/W,Active Poll Images
STDBY,trx_rxfeclkcmpen_1vh_actvpoll_img,0x5010A060,1,(9:9),R/W,Active Poll Images
STDBY,trx_rxfethrshcmphen_1vh_actvpoll_img,0x5010A060,0,(10:10),R/W,Active Poll Images
STDBY,trx_rxfethrshcmpmen_1vh_actvpoll_img,0x5010A060,0,(11:11),R/W,Active Poll Images
STDBY,trx_rxfethrshcmplen_1vh_actvpoll_img,0x5010A060,0,(12:12),R/W,Active Poll Images
STDBY,trx_rxferefdacmen_1vh_actvpoll_img,0x5010A060,1,(13:13),R/W,Active Poll Images
STDBY,trx_rxferefdachen_1vh_actvpoll_img,0x5010A060,1,(14:14),R/W,Active Poll Images
STDBY,trx_rxferefdaclen_1vh_actvpoll_img,0x5010A060,1,(15:15),R/W,Active Poll Images
STDBY,rfagcen_1vh_actvpoll_img,0x5010A060,1,(16:16),R/W,Active Poll Images
STDBY,trx_rxclkgnen_1vs_actvpoll_img,0x5010A060,0,(17:17),R/W,Active Poll Images
STDBY,trx_rxcmbfen_1vh_actvpoll_img,0x5010A060,1,(18:18),R/W,Active Poll Images
STDBY,trx_rxmxren_1vh_actvpoll_img,0x5010A060,1,(19:19),R/W,Active Poll Images
STDBY,trx_rxmxrien_1vh_actvpoll_img,0x5010A060,1,(20:20),R/W,Active Poll Images
STDBY,trx_rxmxrqen_1vh_actvpoll_img,0x5010A060,1,(21:21),R/W,Active Poll Images
STDBY,trx_rxibbaen_1vh_actvpoll_img,0x5010A060,1,(22:22),R/W,Active Poll Images
STDBY,trx_rxqbbaen_1vh_actvpoll_img,0x5010A060,1,(23:23),R/W,Active Poll Images
STDBY,trx_adcrefbfen_1vh_actvpoll_img,0x5010A060,1,(24:24),R/W,Active Poll Images
STDBY,trx_rxpien_1vh_actvpoll_img,0x5010A060,1,(25:25),R/W,Active Poll Images
STDBY,trx_txpien_1vh_actvpoll_img,0x5010A060,1,(26:26),R/W,Active Poll Images
STDBY,trx_rxiadcen_1vh_actvpoll_img,0x5010A060,1,(27:27),R/W,Active Poll Images
STDBY,trx_rxqadcen_1vh_actvpoll_img,0x5010A060,1,(28:28),R/W,Active Poll Images
STDBY,trx_rxicdacen_1vh_actvpoll_img,0x5010A060,1,(29:29),R/W,Active Poll Images
STDBY,trx_rxifdacen_1vh_actvpoll_img,0x5010A060,1,(30:30),R/W,Active Poll Images
STDBY,trx_rxqcdacen_1vh_actvpoll_img,0x5010A060,1,(31:31),R/W,Active Poll Images
STDBY,trx_rxqfdacen_1vh_actvpoll_img,0x5010A064,1,(0:0),R/W,Active Poll Images
STDBY,trx_abpden_1vh_actvpoll_img,0x5010A064,0,(1:1),R/W,Active Poll Images
STDBY,trx_abpdoffsetdacen_1vh_actvpoll_img,0x5010A064,0,(2:2),R/W,Active Poll Images
STDBY,dc_dc_en_actvpoll_img,0x5010A064,1,(3:3),R/W,Active Poll Images
STDBY,ext_clk_request_actvpoll_img,0x5010A064,0,(4:4),R/W,Active Poll Images
STDBY,pwrctrl2spares_1vs_actvpoll_img,0x5010A064,0,(5:8),R/W,Active Poll Images
STDBY,pwrctrl3spares_1vs_actvpoll_img,0x5010A064,0,(9:12),R/W,Active Poll Images
STDBY,pll_xoen_1vs_actvpoll_img,0x5010A064,1,(13:13),R/W,Active Poll Images
STDBY,pll_xobypassen_1vs_actvpoll_img,0x5010A064,0,(14:14),R/W,Active Poll Images
STDBY,pll_xobiasen_1vs_actvpoll_img,0x5010A064,1,(15:15),R/W,Active Poll Images
STDBY,pll_xobuffen_1vs_actvpoll_img,0x5010A064,1,(16:16),R/W,Active Poll Images
STDBY,pll_xopllen_1vs_actvpoll_img,0x5010A064,1,(17:17),R/W,Active Poll Images
STDBY,pll_xotdcen_1vs_actvpoll_img,0x5010A064,1,(18:18),R/W,Active Poll Images
STDBY,pll_xopostdiven_1vs_actvpoll_img,0x5010A064,0,(19:19),R/W,Active Poll Images
STDBY,pll_xoprescmuxctrl_1vs_actvpoll_img,0x5010A064,0,(20:21),R/W,Active Poll Images
STDBY,actvclkgen_dsp_subsys_clk_div_actvpoll_img,0x5010A064,0,(22:24),R/W,Active Poll Images
STDBY,actvclkgen_mcu_clk_div_actvpoll_img,0x5010A064,0,(25:27),R/W,Active Poll Images
STDBY,m0_clk_en_actvpoll_img,0x5010A064,1,(28:28),R/W,Active Poll Images
STDBY,dsp_clk_en_actvpoll_img,0x5010A064,1,(29:29),R/W,Active Poll Images
STDBY,actvclkgen_dsp_m0_hclk_div_ratio_actvpoll_img,0x5010A064,0,(30:31),R/W,Active Poll Images
STDBY,dsp_subset_clk_en_actvpoll_img,0x5010A068,0,(0:0),R/W,Active Poll Images
STDBY,m0_subset_clk_en_actvpoll_img,0x5010A068,0,(1:1),R/W,Active Poll Images
STDBY,pll_lfvdden_1vh_actvlisten_img,0x5010A068,1,(2:2),R/W,Active Listen Images
STDBY,pll_lflockdeten_1vh_actvlisten_img,0x5010A068,1,(3:3),R/W,Active Listen Images
STDBY,pll_vcobiascoreen_1vh_actvlisten_img,0x5010A068,1,(4:4),R/W,Active Listen Images
STDBY,pll_vcoen_1vh_actvlisten_img,0x5010A068,1,(5:5),R/W,Active Listen Images
STDBY,pll_vcobiasvdden_1vh_actvlisten_img,0x5010A068,1,(6:6),R/W,Active Listen Images
STDBY,pll_vcopdivvdden_1vh_actvlisten_img,0x5010A068,1,(7:7),R/W,Active Listen Images
STDBY,pll_vcofbdivvdden_1vh_actvlisten_img,0x5010A068,1,(8:8),R/W,Active Listen Images
STDBY,pll_vcocorevdden_1vh_actvlisten_img,0x5010A068,1,(9:9),R/W,Active Listen Images
STDBY,pll_vcocfsbuffvdden_1vh_actvlisten_img,0x5010A068,1,(10:10),R/W,Active Listen Images
STDBY,pll_pfdcpvdden_1vh_actvlisten_img,0x5010A068,1,(11:11),R/W,Active Listen Images
STDBY,pll_pfden_1vh_actvlisten_img,0x5010A068,1,(12:12),R/W,Active Listen Images
STDBY,pll_cpen_1vh_actvlisten_img,0x5010A068,1,(13:13),R/W,Active Listen Images
STDBY,pll_1stpdivcorevdden_1vh_actvlisten_img,0x5010A068,1,(14:14),R/W,Active Listen Images
STDBY,pll_2ndpdivvdden_1vh_actvlisten_img,0x5010A068,1,(15:15),R/W,Active Listen Images
STDBY,pll_pdivoutbuffvdden_1vh_actvlisten_img,0x5010A068,1,(16:16),R/W,Active Listen Images
STDBY,pll_1stpdiven_1vh_actvlisten_img,0x5010A068,1,(17:17),R/W,Active Listen Images
STDBY,pll_fbdivsdvdden_1vh_actvlisten_img,0x5010A068,1,(18:18),R/W,Active Listen Images
STDBY,pll_fbdivcorevdden_1vh_actvlisten_img,0x5010A068,1,(19:19),R/W,Active Listen Images
STDBY,pll_pbpden_1vh_actvlisten_img,0x5010A068,1,(20:20),R/W,Active Listen Images
STDBY,pll_xocorevdden_1vs_actvlisten_img,0x5010A068,1,(21:21),R/W,Active Listen Images
STDBY,pll_xobuffsvdden_1vs_actvlisten_img,0x5010A068,1,(22:22),R/W,Active Listen Images
STDBY,pll_xoprescaleren_1vs_actvlisten_img,0x5010A068,1,(23:23),R/W,Active Listen Images
STDBY,trx_rxfeclkcmpen_1vh_actvlisten_img,0x5010A068,1,(24:24),R/W,Active Listen Images
STDBY,trx_rxfethrshcmphen_1vh_actvlisten_img,0x5010A068,0,(25:25),R/W,Active Listen Images
STDBY,trx_rxfethrshcmpmen_1vh_actvlisten_img,0x5010A068,0,(26:26),R/W,Active Listen Images
STDBY,trx_rxfethrshcmplen_1vh_actvlisten_img,0x5010A068,0,(27:27),R/W,Active Listen Images
STDBY,trx_rxferefdacmen_1vh_actvlisten_img,0x5010A068,1,(28:28),R/W,Active Listen Images
STDBY,trx_rxferefdachen_1vh_actvlisten_img,0x5010A068,1,(29:29),R/W,Active Listen Images
STDBY,trx_rxferefdaclen_1vh_actvlisten_img,0x5010A068,1,(30:30),R/W,Active Listen Images
STDBY,rfagcen_1vh_actvlisten_img,0x5010A068,1,(31:31),R/W,Active Listen Images
STDBY,trx_rxclkgnen_1vs_actvlisten_img,0x5010A06C,1,(0:0),R/W,Active Listen Images
STDBY,trx_rxcmbfen_1vh_actvlisten_img,0x5010A06C,1,(1:1),R/W,Active Listen Images
STDBY,trx_rxmxren_1vh_actvlisten_img,0x5010A06C,1,(2:2),R/W,Active Listen Images
STDBY,trx_rxmxrien_1vh_actvlisten_img,0x5010A06C,1,(3:3),R/W,Active Listen Images
STDBY,trx_rxmxrqen_1vh_actvlisten_img,0x5010A06C,0,(4:4),R/W,Active Listen Images
STDBY,trx_rxibbaen_1vh_actvlisten_img,0x5010A06C,1,(5:5),R/W,Active Listen Images
STDBY,trx_rxqbbaen_1vh_actvlisten_img,0x5010A06C,0,(6:6),R/W,Active Listen Images
STDBY,trx_adcrefbfen_1vh_actvlisten_img,0x5010A06C,1,(7:7),R/W,Active Listen Images
STDBY,trx_rxpien_1vh_actvlisten_img,0x5010A06C,1,(8:8),R/W,Active Listen Images
STDBY,trx_txpien_1vh_actvlisten_img,0x5010A06C,1,(9:9),R/W,Active Listen Images
STDBY,trx_rxiadcen_1vh_actvlisten_img,0x5010A06C,1,(10:10),R/W,Active Listen Images
STDBY,trx_rxqadcen_1vh_actvlisten_img,0x5010A06C,0,(11:11),R/W,Active Listen Images
STDBY,trx_rxicdacen_1vh_actvlisten_img,0x5010A06C,1,(12:12),R/W,Active Listen Images
STDBY,trx_rxifdacen_1vh_actvlisten_img,0x5010A06C,1,(13:13),R/W,Active Listen Images
STDBY,trx_rxqcdacen_1vh_actvlisten_img,0x5010A06C,0,(14:14),R/W,Active Listen Images
STDBY,trx_rxqfdacen_1vh_actvlisten_img,0x5010A06C,0,(15:15),R/W,Active Listen Images
STDBY,trx_abpden_1vh_actvlisten_img,0x5010A06C,1,(16:16),R/W,Active Listen Images
STDBY,trx_abpdoffsetdacen_1vh_actvlisten_img,0x5010A06C,0,(17:17),R/W,Active Listen Images
STDBY,dc_dc_en_actvlisten_img,0x5010A06C,1,(18:18),R/W,Active Listen Images
STDBY,ext_clk_request_actvlisten_img,0x5010A06C,0,(19:19),R/W,Active Listen Images
STDBY,pwrctrl2spares_1vs_actvlisten_img,0x5010A06C,0,(20:23),R/W,Active Listen Images
STDBY,pwrctrl3spares_1vs_actvlisten_img,0x5010A06C,0,(24:27),R/W,Active Listen Images
STDBY,pll_xoen_1vs_actvlisten_img,0x5010A06C,1,(28:28),R/W,Active Listen Images
STDBY,pll_xobypassen_1vs_actvlisten_img,0x5010A06C,0,(29:29),R/W,Active Listen Images
STDBY,pll_xobiasen_1vs_actvlisten_img,0x5010A06C,1,(30:30),R/W,Active Listen Images
STDBY,pll_xobuffen_1vs_actvlisten_img,0x5010A06C,1,(31:31),R/W,Active Listen Images
STDBY,pll_xopllen_1vs_actvlisten_img,0x5010A070,1,(0:0),R/W,Active Listen Images
STDBY,pll_xotdcen_1vs_actvlisten_img,0x5010A070,1,(1:1),R/W,Active Listen Images
STDBY,pll_xopostdiven_1vs_actvlisten_img,0x5010A070,0,(2:2),R/W,Active Listen Images
STDBY,pll_xoprescmuxctrl_1vs_actvlisten_img,0x5010A070,0,(3:4),R/W,Active Listen Images
STDBY,actvclkgen_dsp_subsys_clk_div_actvlisten_img,0x5010A070,0,(5:7),R/W,Active Listen Images
STDBY,actvclkgen_mcu_clk_div_actvlisten_img,0x5010A070,0,(8:10),R/W,Active Listen Images
STDBY,m0_clk_en_actvlisten_img,0x5010A070,1,(11:11),R/W,Active Listen Images
STDBY,dsp_clk_en_actvlisten_img,0x5010A070,1,(12:12),R/W,Active Listen Images
STDBY,actvclkgen_dsp_m0_hclk_div_ratio_actvlisten_img,0x5010A070,0,(13:14),R/W,Active Listen Images
STDBY,dsp_subset_clk_en_actvlisten_img,0x5010A070,0,(15:15),R/W,Active Listen Images
STDBY,m0_subset_clk_en_actvlisten_img,0x5010A070,0,(16:16),R/W,Active Listen Images
STDBY,Reserved,0x5010A070,0,(17:31),R/W,
STDBY,pactrl_pctrl_off,0x5010A074,0,(0:3),R/W,
STDBY,pactrl_nctrl_off,0x5010A074,15,(4:7),R/W,
STDBY,pactrl_pskmod,0x5010A074,0,(8:9),R/W,
STDBY,pactrl_pa_en,0x5010A074,0,(10:10),R/W,
STDBY,pactrl_pll_tx_pause,0x5010A074,0,(11:11),R/W,
STDBY,pactrl_rfclk_gating,0x5010A074,1,(12:12),R/W,
STDBY,pactrl_rx_pause_data_1,0x5010A074,0,(13:13),R/W,
STDBY,pactrl_rx_pause_data_2,0x5010A074,0,(14:14),R/W,
STDBY,pactrl_op_mux_sel,0x5010A074,0,(15:15),R/W,
STDBY,pactrl_op_mux_sel_bypass,0x5010A074,0,(16:16),R/W,
STDBY,digctrl_trx_txpaen_bypass,0x5010A074,0,(17:17),R/W,
STDBY,digctrl_pll_bbwsdata_bypass,0x5010A074,0,(18:18),R/W,
STDBY,digctrl_trx_txparfclkgtng_bypass,0x5010A074,0,(19:19),R/W,
STDBY,digctrl_trx_txpapctrl_bypass,0x5010A074,0,(20:20),R/W,
STDBY,digctrl_trx_txpanctrl_bypass,0x5010A074,0,(21:21),R/W,
STDBY,digctrl_trx_txpskmode_bypass,0x5010A074,0,(22:22),R/W,
STDBY,digctrl_trx_rxfefrccealm_bypass,0x5010A074,0,(23:23),R/W,
STDBY,digctrl_trx_rxclkgnspdup_bypass,0x5010A074,0,(24:24),R/W,
STDBY,sml1_spares,0x5010A074,0,(25:31),R/W,
STDBY,spare_stdby_rom15,0x5010A078,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom16,0x5010A07C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom17,0x5010A080,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom18,0x5010A084,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom19,0x5010A088,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom20,0x5010A08C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom21,0x5010A090,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom22,0x5010A094,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom23,0x5010A098,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom24,0x5010A09C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom25,0x5010A0A0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom26,0x5010A0A4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom27,0x5010A0A8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom28,0x5010A0AC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom29,0x5010A0B0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom30,0x5010A0B4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_rom31,0x5010A0B8,65535,(0:31),R/W,Spare
STDBY,Reserved,0x5010A0BC,0,(0:31),R/W,
STDBY,Reserved,0x5010A0C0,0,(0:31),R/W,
STDBY,Reserved,0x5010A0C4,0,(0:31),R/W,
STDBY,Reserved,0x5010A0C8,0,(0:31),R/W,
STDBY,Reserved,0x5010A0CC,0,(0:31),R/W,
STDBY,pll_xofsuen_1vs,0x5010A0D0,1,(0:0),R/W,Enabling Fast Start Up through noise injection and current boosting.
STDBY,pll_xofsuvcoen_1vs,0x5010A0D0,1,(1:1),R/W,Enabling FSU VCO for Noise injection Phase.
STDBY,pll_xofsuibiasgmboost_1vs,0x5010A0D0,0,(2:2),R/W,Doubling the reference current of FSU constant gm bias.
STDBY,pll_xoibiasssctrl_1vs,0x5010A0D0,10,(3:9),R/W,Controling xo core current programmability in steady state mode  max current=560uA at 11111 and at max ref current.
STDBY,pll_xoibiasfsuctrl_1vs,0x5010A0D0,127,(10:16),R/W,Controling xo core current programmability in fast start up mode.
STDBY,pll_xoibiasgmboost_1vs,0x5010A0D0,5,(17:19),R/W,Controling the reference current of XO constant gm bias  000=6uA to 89uA at 111.
STDBY,pll_xofsuinjrampctrl_1vs,0x5010A0D0,7,(20:22),R/W,Controling chirp oscillator ramp  111: slowest & 000: Fastest.
STDBY,pll_xofsucomprefctrl_1vs,0x5010A0D0,6,(23:26),R/W,Controling comparator reference voltage (when to disable the Chirp noise injection)  000= 589mV to 897mV at 111 (default: 709mV).
STDBY,pll_xofsukvco_1vs,0x5010A0D0,11,(27:30),R/W,Controling chirp oscillator KVCO and center frequency control  1000(8)= Min. freq and 1111(15)=Max. frec.
STDBY,pll_xofsuvcobuffs_1vs,0x5010A0D4,1,(0:3),R/W,Controling the strength of chirp buffers to limit crystal over drive.
STDBY,pll_xofsusudonecntr_1vs,0x5010A0D4,15,(4:7),R/W,Controling the number of  Xtal cycles before disabling VCO and Comparator.
STDBY,pll_xofsusettlecntr_1vs,0x5010A0D4,15,(8:11),R/W,Controling the number of  Xtal cycles before sending a flag of frequency settling to digital and after all FSU sequence and xo bias switching is done.
STDBY,pll_xofsuibiascntr_1vs,0x5010A0D4,15,(12:18),R/W,Controling the number of  Xtal cycles after start up done flag to set the XO bias current to its steady state value.
STDBY,pll_xofsueniboostonly_1vs,0x5010A0D4,0,(19:19),R/W,Enabling Fast Start Up through current boosting only.
STDBY,trx_rxsnglenden_1vs,0x5010A0D4,0,(20:20),R/W,Control to define RX connectivity (0 --> differential  1--> single ended)
STDBY,spare_stdby_dh0,0x5010A0D8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh1,0x5010A0DC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh2,0x5010A0E0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh3,0x5010A0E4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh4,0x5010A0E8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh5,0x5010A0EC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh6,0x5010A0F0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh7,0x5010A0F4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh8,0x5010A0F8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh9,0x5010A0FC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh10,0x5010A100,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh11,0x5010A104,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh12,0x5010A108,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh13,0x5010A10C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh14,0x5010A110,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh15,0x5010A114,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh16,0x5010A118,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh17,0x5010A11C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh18,0x5010A120,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh19,0x5010A124,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh20,0x5010A128,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh21,0x5010A12C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh22,0x5010A130,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh23,0x5010A134,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh24,0x5010A138,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh25,0x5010A13C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh26,0x5010A140,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh27,0x5010A144,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh28,0x5010A148,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh29,0x5010A14C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh30,0x5010A150,65535,(0:31),R/W,Spare
STDBY,spare_stdby_dh31,0x5010A154,65535,(0:31),R/W,Spare
STDBY,Reserved,0x5010A158,0,(0:31),R/W,
STDBY,Reserved,0x5010A15C,0,(0:31),R/W,
STDBY,Reserved,0x5010A160,0,(0:31),R/W,
STDBY,Reserved,0x5010A164,0,(0:31),R/W,
STDBY,pll_xoclktsten_1vs,0x5010A168,0,(0:0),R/W,Testing xo signal through prescaler.
STDBY,pll_xofsucompouttsten_1vs,0x5010A168,0,(1:1),R/W,Testing fsu comparator out voltage.
STDBY,pll_xofsucompreftsten_1vs,0x5010A168,0,(2:2),R/W,Testing fsu comparator refrence voltage.
STDBY,pll_xofsurampgentsten_1vs,0x5010A168,0,(3:3),R/W,Testing fsu ramp signal.
STDBY,pll_xofsusudoneflagtsten_1vs,0x5010A168,0,(4:4),R/W,Testing fsu start up done counter's out.
STDBY,pll_xoibiasswitchflagtsten_1vs,0x5010A168,0,(5:5),R/W,Testing fsu bias switch counter's out.
STDBY,pll_xofsusettledoneflagtsten_1vs,0x5010A168,0,(6:6),R/W,Testing fsu settle done counter's out.
STDBY,pll_xofsudelayentsten_1vs,0x5010A168,0,(7:7),R/W,Testing the delayed version of FSU en.
STDBY,pll_xobiaststen_1vs,0x5010A168,0,(8:8),R/W,Testing xo bias reference current (IR drop) through the test mux.
STDBY,pll_xoextpauseen_1vs,0x5010A168,0,(9:9),R/W,xo ext pause en
STDBY,wkuprx_reset,0x5010A168,0,(10:10),R/W,Wakeup-RX Reset
STDBY,wkuprx_en,0x5010A168,1,(11:11),R/W,Wakeup-RX Enable
STDBY,wkuprx_start,0x5010A168,0,(12:12),R/W,Wakeup-RX Start
STDBY,wkuprx_start_sel,0x5010A168,0,(13:13),R/W,Wakeup-RX Start Selector
STDBY,wkuprx_cont_sel,0x5010A168,0,(14:14),R/W,Wakeup-RX Control Selector
STDBY,wkuprx_opr_sel,0x5010A168,0,(15:15),R/W,Wakeup-RX Operation Selector
STDBY,wkuprx_mod_sel,0x5010A168,0,(16:16),R/W,Wakeup-RX Mode Selector
STDBY,wkrx_debug_start,0x5010A168,0,(17:17),R/W,Wakeup-RX Debug Start
STDBY,wkrx_debug_oprsel,0x5010A168,0,(18:18),R/W,Wakeup-RX Debug Operation Select
STDBY,i2cwkup_ack_sel,0x5010A168,0,(19:19),R/W,I2C Wakeup ACK Selector
STDBY,stdbyclkgen_wkup_rx_clk_en,0x5010A168,0,(20:20),R/W,Wakeup-RX Clock Enable
STDBY,stdbyclkgen_wkup_rx_clk_en_sel,0x5010A168,0,(21:21),R/W,Wakeup-RX Clock Enable MUX Selector
STDBY,stdbyclkgen_poll_timer_clk_en,0x5010A168,0,(22:22),R/W,Polling Timer Clock Enable
STDBY,stdbyclkgen_poll_timer_clk_en_sel,0x5010A168,0,(23:23),R/W,Polling Timer Clock Enable MUX Selector
STDBY,stdbyclkgen_swp_clk_en,0x5010A168,0,(24:24),R/W,SWP Clock Enable
STDBY,stdbyclkgen_swp_clk_en_sel,0x5010A168,0,(25:25),R/W,SWP Clock Enable MUX Selector
STDBY,stdbyclkgen_wkup_rx_clk_div_reset,0x5010A168,0,(26:26),R/W,Resets
STDBY,stdbyclkgen_poll_timer_clk_div_reset,0x5010A168,0,(27:27),R/W,Resets
STDBY,stdbyclkgen_swp_clk_div_reset,0x5010A168,0,(28:28),R/W,Resets
STDBY,stdbyclkgen_wkup_rx_clk_div_samp_hold,0x5010A168,0,(29:29),R/W,Sampling Holds
STDBY,stdbyclkgen_poll_timer_clk_div_samp_hold,0x5010A168,0,(30:30),R/W,Sampling Holds
STDBY,stdbyclkgen_swp_clk_div_samp_hold,0x5010A168,0,(31:31),R/W,Sampling Holds
STDBY,dc_dc_en_sel,0x5010A16C,0,(0:0),R/W,Selector between pwrctrl/SML1 for DC-DC Enable
STDBY,ext_clk_request_sel,0x5010A16C,0,(1:1),R/W,Selector between pwrctrl/SML1 for EXT Clock Request
STDBY,xtal_osc_ctrl_sel,0x5010A16C,0,(2:2),R/W,Selector between pwrctrl/SML1 for XTAL Clock 
STDBY,dsp_runstall,0x5010A16C,1,(3:3),R/W,DSP Runstall
STDBY,wkup_cct_wkupccten,0x5010A16C,0,(4:4),R/W,Wakeup Circuit Enable
STDBY,wkup_cct_wkupcct_debuggingmode,0x5010A16C,0,(5:5),R/W,Wakeup Circuit Debugging Mode Enable
STDBY,vbat_low_wkup_halt,0x5010A16C,0,(6:6),R/W,Halt Wakeup when VBAT is low
STDBY,wkup_cct_spimasteren,0x5010A16C,0,(7:7),R/W,SPI Master Wakeup Enable
STDBY,wkup_cct_spislaveen,0x5010A16C,0,(8:8),R/W,SPI Slave Wakeup Enable
STDBY,wkup_cct_i2c_i3c_en,0x5010A16C,0,(9:9),R/W,I2C/I3C Wakeup Enable
STDBY,wkup_cct_gpio0aotriggertype,0x5010A16C,0,(10:10),R/W,GPIO0 AO Trigger Type
STDBY,wkup_cct_gpio0aoedgeleveltype,0x5010A16C,0,(11:11),R/W,GPIO0 AO Edge/Level Type
STDBY,wkup_cct_gpio0aoen,0x5010A16C,0,(12:12),R/W,GPIO 0AO Wakeup Enable
STDBY,wkup_cct_gpio1aotriggertype,0x5010A16C,0,(13:13),R/W,GPIO1 AO Trigger Type
STDBY,wkup_cct_gpio1aoedgeleveltype,0x5010A16C,0,(14:14),R/W,GPIO1 AO Edge/Level Type
STDBY,wkup_cct_gpio1aoen,0x5010A16C,0,(15:15),R/W,GPIO1 AO Wakeup Enable
STDBY,wkup_cct_gpio0triggertype,0x5010A16C,0,(16:16),R/W,GPIO0 Trigger Type
STDBY,wkup_cct_gpio0edgeleveltype,0x5010A16C,0,(17:17),R/W,GPIO0 Edge/Level Type
STDBY,wkup_cct_gpio0en,0x5010A16C,0,(18:18),R/W,GPIO0 Wakeup Enable
STDBY,wkup_cct_gpio1triggertype,0x5010A16C,0,(19:19),R/W,GPIO1 Trigger Type
STDBY,wkup_cct_gpio1edgeleveltype,0x5010A16C,0,(20:20),R/W,GPIO1 Edge/Level Type
STDBY,wkup_cct_gpio1en,0x5010A16C,0,(21:21),R/W,GPIO1 Wakeup Enable
STDBY,wkup_cct_vbatmontriggertype,0x5010A16C,0,(22:22),R/W,VBAT Monitor Trigger Type
STDBY,wkup_cct_vbatmonedgeleveltype,0x5010A16C,1,(23:23),R/W,VBAT Monitor Edge/Level Type
STDBY,wkup_cct_vbatmonen,0x5010A16C,0,(24:24),R/W,VBAT Monitor Wakeup Enable
STDBY,wkup_cct_vddhiomontriggertype,0x5010A16C,0,(25:25),R/W,VDDHIO Monitor Trigger Type
STDBY,wkup_cct_vddhiomonedgeleveltype,0x5010A16C,0,(26:26),R/W,VDDHIO Monitor Edge/Level Type
STDBY,wkup_cct_vddhiomonen,0x5010A16C,0,(27:27),R/W,VDDHIO Monitor Wakeup Enable
STDBY,wkup_cct_swpen,0x5010A16C,0,(28:28),R/W,SWP Wakeup Enable
STDBY,wkup_cct_wakeuprxen,0x5010A16C,0,(29:29),R/W,Wakeup-RX Wakeup Enable
STDBY,wkup_cct_polltimeren,0x5010A16C,0,(30:30),R/W,Polling Timer Wakeup Enable
STDBY,Reserved,0x5010A16C,0,(31:31),R/W,
STDBY,pollcnt_reset,0x5010A170,0,(0:0),R/W,Polling Timer Reset
STDBY,pollcnt_en,0x5010A170,1,(1:1),R/W,Polling Timer Enable
STDBY,pollcnt_start,0x5010A170,0,(2:2),R/W,Polling Timer Start
STDBY,pollcnt_debugging_mode,0x5010A170,0,(3:3),R/W,Polling Timer Debugging Mode Enable
STDBY,i2cwkp_addr_sel,0x5010A170,0,(4:4),R/W,I2C Wakeup Address Selector
STDBY,Reserved,0x5010A170,0,(5:31),R/W,
STDBY,pollcnt_listenduration,0x5010A174,0,(0:30),R/W,Listen Duration (counts) of the polling loop
STDBY,Reserved,0x5010A174,0,(31:31),R/W,
STDBY,xtmem_ocdhaltonreset,0x5010A178,0,(0:0),R/W,
STDBY,bm_remap,0x5010A178,0,(1:1),R/W,
STDBY,rxclkgen_sel,0x5010A178,1,(2:2),R/W,
STDBY,ecorevnum,0x5010A178,0,(3:6),R/W,
STDBY,Reserved,0x5010A178,0,(7:31),R/W,
STDBY,stdbydmux_out1_sel,0x5010A17C,0,(0:7),R/W,
STDBY,stdbydmux_out2_sel,0x5010A17C,0,(8:15),R/W,
STDBY,stdbydmux_out3_sel,0x5010A17C,1,(16:23),R/W,
STDBY,stdbydmux_out4_sel,0x5010A17C,0,(24:31),R/W,
STDBY,spare_stdby_reg2,0x5010A180,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg3,0x5010A184,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg4,0x5010A188,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg5,0x5010A18C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg6,0x5010A190,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg7,0x5010A194,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg8,0x5010A198,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg9,0x5010A19C,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg10,0x5010A1A0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg11,0x5010A1A4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg12,0x5010A1A8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg13,0x5010A1AC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg14,0x5010A1B0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg15,0x5010A1B4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg16,0x5010A1B8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg17,0x5010A1BC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg18,0x5010A1C0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg19,0x5010A1C4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg20,0x5010A1C8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg21,0x5010A1CC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg22,0x5010A1D0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg23,0x5010A1D4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg24,0x5010A1D8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg25,0x5010A1DC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg26,0x5010A1E0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg27,0x5010A1E4,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg28,0x5010A1E8,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg29,0x5010A1EC,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg30,0x5010A1F0,65535,(0:31),R/W,Spare
STDBY,spare_stdby_reg31,0x5010A1F4,65535,(0:31),R/W,Spare
STDBY,Reserved,0x5010A1F8,0,(0:31),R/W,
STDBY,Reserved,0x5010A1FC,0,(0:31),R/W,
STDBY,wkup_cct_wkpsources,0x5010A200,0,(0:11),R,Wakeup Sources detected in Standby
STDBY,wkup_cct_1stwkpsource,0x5010A200,0,(12:23),R,First wakeup source detected in standby
STDBY,wakeup_detect,0x5010A200,0,(24:24),R,Flag indicating that a wakeup source has been detetcted
STDBY,no_src_flag,0x5010A200,0,(25:25),R,Error flag to enable all wakeup sources in case M0 didn't enable any wakeup source before sleeping
STDBY,vddhio_flag,0x5010A200,0,(26:26),R,VDDHIO flag indicating whether VDDHIO went low while M0 is sleeping
STDBY,Reserved,0x5010A200,0,(27:31),R/W,
STDBY,wkup_cct_livewkpsources,0x5010A204,0,(0:11),R,"The ""live"" state of the wakeup sources  so M0 can see all wakeup sources detected in STDBY"
STDBY,Reserved,0x5010A204,0,(12:31),R/W,
STDBY,poll_cnt_polling_count,0x5010A208,0,(0:30),R,"The ""live"" value of the counter"
STDBY,poll_cnt_polling_timeout,0x5010A208,0,(31:31),R,Flag indicating that the polling timer has reached the assigned listen duration
STDBY,wkrx_debug_ovf,0x5010A20C,0,(0:0),R,Ripple counter overflow flag (debug mode)
STDBY,wkrx_debug_count,0x5010A20C,0,(1:15),R,Debug signal for input RF signal clock
STDBY,Reserved,0x5010A20C,0,(16:31),R/W,
STDBY,i2cwkup_interrupt,0x5010A210,0,(0:0),R,I2C Wakeup Interrupt
STDBY,i2cwkup_temp_address,0x5010A210,0,(1:7),R,
STDBY,i2cwkup_addr_pins,0x5010A210,0,(8:9),R,
STDBY,i2cwkup_start_reg,0x5010A210,0,(10:16),R,
STDBY,i2cwkup_stop_reg,0x5010A210,0,(17:18),R,
STDBY,i2cwkup_packet_in,0x5010A210,0,(19:20),R,
STDBY,puptype,0x5010A210,0,(21:22),R,puptype
STDBY,sampled_marker_period,0x5010A214,0,(0:9),R,Sampled Marker Period
STDBY,Reserved,0x5010A214,0,(10:31),R/W,
STDBY,pll_lfvdden_1vh,0x5010A218,0,(0:0),R,
STDBY,pll_lflockdeten_1vh,0x5010A218,0,(1:1),R,
STDBY,pll_vcobiascoreen_1vh,0x5010A218,0,(2:2),R,
STDBY,pll_vcoen_1vh,0x5010A218,0,(3:3),R,
STDBY,pll_vcobiasvdden_1vh,0x5010A218,0,(4:4),R,
STDBY,pll_vcopdivvdden_1vh,0x5010A218,0,(5:5),R,
STDBY,pll_vcofbdivvdden_1vh,0x5010A218,0,(6:6),R,
STDBY,pll_vcocorevdden_1vh,0x5010A218,0,(7:7),R,
STDBY,pll_vcocfsbuffvdden_1vh,0x5010A218,0,(8:8),R,
STDBY,pll_pfdcpvdden_1vh,0x5010A218,0,(9:9),R,
STDBY,pll_pfden_1vh,0x5010A218,0,(10:10),R,
STDBY,pll_cpen_1vh,0x5010A218,0,(11:11),R,
STDBY,pll_1stpdivcorevdden_1vh,0x5010A218,0,(12:12),R,
STDBY,pll_2ndpdivvdden_1vh,0x5010A218,0,(13:13),R,
STDBY,pll_pdivoutbuffvdden_1vh,0x5010A218,0,(14:14),R,
STDBY,pll_1stpdiven_1vh,0x5010A218,0,(15:15),R,
STDBY,pll_fbdivsdvdden_1vh,0x5010A218,0,(16:16),R,
STDBY,pll_fbdivcorevdden_1vh,0x5010A218,0,(17:17),R,
STDBY,pll_pbpden_1vh,0x5010A218,0,(18:18),R,
STDBY,pll_xocorevdden_1vs,0x5010A218,0,(19:19),R,
STDBY,pll_xobuffsvdden_1vs,0x5010A218,0,(20:20),R,
STDBY,pll_xoprescaleren_1vs,0x5010A218,0,(21:21),R,
STDBY,trx_rxfeclkcmpen_1vh,0x5010A218,0,(22:22),R,
STDBY,trx_rxfethrshcmphen_1vh,0x5010A218,0,(23:23),R,
STDBY,trx_rxfethrshcmpmen_1vh,0x5010A218,0,(24:24),R,
STDBY,trx_rxfethrshcmplen_1vh,0x5010A218,0,(25:25),R,
STDBY,trx_rxferefdacmen_1vh,0x5010A218,0,(26:26),R,
STDBY,trx_rxferefdachen_1vh,0x5010A218,0,(27:27),R,
STDBY,trx_rxferefdaclen_1vh,0x5010A218,0,(28:28),R,
STDBY,rfagcen_1vh,0x5010A218,0,(29:29),R,
STDBY,trx_rxclkgnen_1vs,0x5010A218,0,(30:30),R,
STDBY,trx_rxcmbfen_1vh,0x5010A218,0,(31:31),R,
STDBY,trx_rxmxren_1vh,0x5010A21C,0,(0:0),R,
STDBY,trx_rxmxrien_1vh,0x5010A21C,0,(1:1),R,
STDBY,trx_rxmxrqen_1vh,0x5010A21C,0,(2:2),R,
STDBY,trx_rxibbaen_1vh,0x5010A21C,0,(3:3),R,
STDBY,trx_rxqbbaen_1vh,0x5010A21C,0,(4:4),R,
STDBY,trx_adcrefbfen_1vh,0x5010A21C,0,(5:5),R,
STDBY,trx_rxpien_1vh,0x5010A21C,0,(6:6),R,
STDBY,trx_txpien_1vh,0x5010A21C,0,(7:7),R,
STDBY,trx_rxiadcen_1vh,0x5010A21C,0,(8:8),R,
STDBY,trx_rxqadcen_1vh,0x5010A21C,0,(9:9),R,
STDBY,trx_rxicdacen_1vh,0x5010A21C,0,(10:10),R,
STDBY,trx_rxifdacen_1vh,0x5010A21C,0,(11:11),R,
STDBY,trx_rxqcdacen_1vh,0x5010A21C,0,(12:12),R,
STDBY,trx_rxqfdacen_1vh,0x5010A21C,0,(13:13),R,
STDBY,trx_abpden_1vh,0x5010A21C,0,(14:14),R,
STDBY,trx_abpdoffsetdacen_1vh,0x5010A21C,0,(15:15),R,
STDBY,dc_dc_en,0x5010A21C,0,(16:16),R,
STDBY,ext_clk_request,0x5010A21C,0,(17:17),R,
STDBY,pwrctrl2spares_1vs,0x5010A21C,0,(18:21),R,
STDBY,pwrctrl3spares_1vs,0x5010A21C,0,(22:25),R,
STDBY,pll_xoen_1vs_out,0x5010A21C,0,(26:26),R,
STDBY,pll_xobypassen_1vs_out,0x5010A21C,0,(27:27),R,
STDBY,pll_xobiasen_1vs_out,0x5010A21C,0,(28:28),R,
STDBY,pll_xobuffen_1vs_out,0x5010A21C,0,(29:29),R,
STDBY,pll_xopllen_1vs,0x5010A21C,0,(30:30),R,
STDBY,pll_xotdcen_1vs,0x5010A21C,0,(31:31),R,
STDBY,pll_xopostdiven_1vs,0x5010A220,0,(0:0),R,
STDBY,pll_xoprescmuxctrl_1vs,0x5010A220,0,(1:2),R,
STDBY,actvclkgen_dsp_subsys_clk_div,0x5010A220,0,(3:5),R,
STDBY,actvclkgen_mcu_clk_div,0x5010A220,0,(6:8),R,
STDBY,actvclkgen_dsp_m0_hclk_div_ratio,0x5010A220,0,(9:10),R,
STDBY,dsp_subset_clk_en,0x5010A220,0,(11:11),R,
STDBY,m0_subset_clk_en,0x5010A220,0,(12:12),R,
STDBY,pactrl_pctrl_off_mux,0x5010A220,0,(13:16),R,
STDBY,pactrl_nctrl_off_mux,0x5010A220,0,(17:20),R,
STDBY,digctrl_trx_txpapctrl_1vh,0x5010A220,0,(21:24),R,
STDBY,digctrl_trx_txpanctrl_1vh,0x5010A220,0,(25:28),R,
STDBY,digctrl_trx_txpskmode_1vh,0x5010A220,0,(29:30),R,
STDBY,spare_stdby_rdreg4,0x5010A224,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg5,0x5010A228,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg6,0x5010A22C,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg7,0x5010A230,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg8,0x5010A234,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg9,0x5010A238,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg10,0x5010A23C,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg11,0x5010A240,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg12,0x5010A244,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg13,0x5010A248,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg14,0x5010A24C,65535,(0:31),R,Spare
STDBY,spare_stdby_rdreg15,0x5010A250,65535,(0:31),R,Spare
STDBY,Reserved,0x5010A254,0,(0:31),R/W,
STDBY,Reserved,0x5010A258,0,(0:31),R/W,
SML1,txctrl_pactrl_pctrl_onhieof,0x50106000,0,(0:3),R/W,Control Ron of PMOS device during TRFWS when eof valid =1 & BPSK = 0 & QPSK=0
SML1,txctrl_pactrl_nctrl_onhieof,0x50106000,0,(4:7),R/W,Control Ron of NMOS device during TRFWS when eof valid =1 & BPSK = 0 & QPSK=0
SML1,txctrl_pactrl_pctrl_onloeof,0x50106000,0,(8:11),R/W,Control Ron of PMOS device during TRFWS when eof valid =1 & BPSK = 0 & QPSK=0
SML1,txctrl_pactrl_nctrl_onloeof,0x50106000,0,(12:15),R/W,Control Ron of NMOS device during TRFWS when eof valid =1 & BPSK = 0 & QPSK=0
SML1,txctrl_pactrl_pctrl_onhipsk,0x50106000,0,(16:19),R/W,Control Ron of PMOS device during TRFWS when eof valid =1 & (BPSK = 1 OR QPSK=1)
SML1,txctrl_pactrl_nctrl_onhipsk,0x50106000,0,(20:23),R/W,Control Ron of NMOS device during TRFWS when eof valid =1 & (BPSK = 1 OR QPSK=1)
SML1,txctrl_pactrl_pctrl_onlopsk,0x50106000,0,(24:27),R/W,Control Ron of PMOS device during TRFWS when eof valid =1 & (BPSK = 1 OR QPSK=1)
SML1,txctrl_pactrl_nctrl_onlopsk,0x50106000,0,(28:31),R/W,Control Ron of NMOS device during TRFWS when eof valid =1 & (BPSK = 1 OR QPSK=1)
SML1,spare_txctrl_eof1,0x50106004,0,(0:31),R/W,
SML1,Reserved,0x50106008,0,(0:31),R/W,
SML1,txctrl_pactrl_pctrl_onhi,0x5010600C,0,(0:3),R/W,Control Ron of PMOS device during PA on mode (either High BB or CW)
SML1,txctrl_pactrl_nctrl_onhi,0x5010600C,0,(4:7),R/W,Control Ron of NMOS device during PA on mode (either High BB or CW)
SML1,txctrl_pactrl_pctrl_onlo,0x5010600C,0,(8:11),R/W,Control Ron of PMOS device during PA ON mode for Low BB only
SML1,txctrl_pactrl_nctrl_onlo,0x5010600C,0,(12:15),R/W,Control Ron of NMOS device during PA ON mode for Low BB only
SML1,txctrl_pactrl_trws_pctrl_stepsize1,0x5010600C,1,(16:19),R/W,"Control ""pa_nctrl_ws"" step size from ""pa_nctrl_onlo"" to ""pa_nctrl_onhi""  during rising edge of ""bbws_data"" as long as current nctrl < trws_nctrlthrshld"
SML1,txctrl_pactrl_trws_nctrl_stepsize1,0x5010600C,1,(20:23),R/W,"Control ""pa_pctrl_ws"" step size from ""pa_pctrl_onlo"" to ""pa_pctrl_onhi""  during rising edge of ""bbws_data""  as long as current pctrl < trws_pctrlthrshld"
SML1,txctrl_pactrl_trws_pctrl_stepsize2,0x5010600C,1,(24:27),R/W,"Control ""pa_nctrl_ws"" step size from ""pa_nctrl_onlo"" to ""pa_nctrl_onhi""  during rising edge of ""bbws_data""  as long as current nctrl â‰?trws_nctrlthrshld"
SML1,txctrl_pactrl_trws_nctrl_stepsize2,0x5010600C,1,(28:31),R/W,"Control ""pa_pctrl_ws"" step size from ""pa_pctrl_onlo"" to ""pa_pctrl_onhi""  during rising edge of ""bbws_data""  as long as current pctrl â‰?trws_pctrlthrshld"
SML1,txctrl_pactrl_tfws_pctrl_stepsize1,0x50106010,1,(0:3),R/W,"Control ""pa_nctrl_ws"" step size from ""pa_nctrl_onhi"" to ""pa_nctrl_onlo""  during falling edge of ""bbws_data"" as long as current nctrl < tfws_nctrlthrshld"
SML1,txctrl_pactrl_tfws_nctrl_stepsize1,0x50106010,1,(4:7),R/W,"Control ""pa_pctrl_ws"" step size from ""pa_pctrl_onhi"" to ""pa_pctrl_onlo""  during falling edge of ""bbws_data"" as long as current pctrl < tfws_pctrlthrshld"
SML1,txctrl_pactrl_tfws_pctrl_stepsize2,0x50106010,1,(8:11),R/W,"Control ""pa_nctrl_ws"" step size from ""pa_nctrl_onhi"" to ""pa_nctrl_onlo""  during falling edge of ""bbws_data""  as long as current nctrl â‰?tfws_nctrlthrshld"
SML1,txctrl_pactrl_tfws_nctrl_stepsize2,0x50106010,1,(12:15),R/W,"Control ""pa_pctrl_ws"" step size from ""pa_pctrl_onhi"" to ""pa_pctrl_onlo""  during falling edge of ""bbws_data""  as long as current pctrl â‰?tfws_pctrlthrshld"
SML1,txctrl_pactrl_trws_pctrlthrshld,0x50106010,8,(16:19),R/W,Programmable threshold for Nctrl during rising edge wave shaping to switch between trws_nctrrl_stepsize1 & trws_nctrrl_stepsize2
SML1,txctrl_pactrl_trws_nctrlthrshld,0x50106010,8,(20:23),R/W,Programmable threshold for Pctrl during rising edge wave shaping to switch between trws_pctrrl_stepsize1 & trws_pctrrl_stepsize2
SML1,txctrl_pactrl_tfws_pctrlthrshld,0x50106010,8,(24:27),R/W,Programmable threshold for Nctrl during falling edge wave shaping to switch between tfws_nctrrl_stepsize1 & tfws_nctrrl_stepsize2
SML1,txctrl_pactrl_tfws_nctrlthrshld,0x50106010,8,(28:31),R/W,Programmable threshold for Pctrl during falling edge wave shaping to switch between tfws_pctrrl_stepsize1 & tfws_pctrrl_stepsize2
SML1,txctrl_pactrl_trws_pctrl_steptime,0x50106014,0,(0:4),R/W,"Control ""pa_nctrl_ws"" step time at rising edge of ""bbws_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML1,txctrl_pactrl_trws_nctrl_steptime,0x50106014,0,(5:9),R/W,"Control ""pa_pctrl_ws"" step time at rising edge of ""bbws_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML1,txctrl_pactrl_tfws_pctrl_steptime,0x50106014,0,(10:14),R/W,"Control ""pa_nctrl_ws"" step time at falling edge of ""bbws_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML1,txctrl_pactrl_tfws_nctrl_steptime,0x50106014,0,(15:19),R/W,"Control ""pa_pctrl_ws"" step time at falling edge of ""bbws_data"" (number of 1/2 clk cycles of 13.56MHz)"
SML1,spare_pa_strength_trfws_1,0x50106014,0,(20:31),R/W,
SML1,spare_pa_strength_trfws_dhdyn0,0x50106018,0,(0:31),R/W,
SML1,spare_pa_strength_trfws_dhdyn1,0x5010601C,0,(0:31),R/W,
SML1,spare_pa_strength_trfws_dhdyn2,0x50106020,65535,(0:31),R/W,
SML1,spare_pa_strength_trfws_dhdyn3,0x50106024,65535,(0:31),R/W,
SML1,Reserved,0x50106028,0,(0:31),R/W,
SML1,Reserved,0x5010602C,65535,(0:31),R/W,
SML1,Reserved,0x50106030,65535,(0:31),R/W,
SML1,Reserved,0x50106034,0,(0:31),R/W,
SML1,Reserved,0x50106038,0,(0:31),R/W,
SML1,rxctrl_rfagc_chng_confg_post_mdmdtctfrm,0x5010603C,0,(0:0),R/W,Enable changing the configuration after a modem had detetced a frame
SML1,rxctrl_dcoc_chng_confg_post_mdmdtctfrm,0x5010603C,0,(1:1),R/W,Enable changing the configuration after a modem had detetced a frame
SML1,Reserved,0x5010603C,0,(2:3),R/W,
SML1,rxctrl_rfagc_mdmdtctfrm_block_en,0x5010603C,1,(4:4),R/W,Enable to Block RF AGC apply after the modem had detected a frame
SML1,rxctrl_dcoc_mdmdtctfrm_block_en,0x5010603C,0,(5:5),R/W,Enable to Block DCOC apply after the modem had detected a frame
SML1,rxctrl_bbagc_mdmdtctfrm_block_en,0x5010603C,0,(6:6),R/W,Enable to Block BBAGC apply after the modem had detected a frame
SML1,rxctrl_txctrl_mdmdtctfrm_block_en,0x5010603C,1,(7:7),R/W,Enable to Block TX Ctrl apply after the modem had detected a frame
SML1,rxctrl_rfagc_jump_to_urgent_en,0x5010603C,1,(8:8),R/W,Enable skiping the RFAGC while waiting for the Modem approval in case of DCOC urgent request was  detected and jump to the start of the DCOC urgent apply(start of DCOC flow)
SML1,rxctrl_dcoc_jump_to_urgent_en,0x5010603C,1,(9:9),R/W,Enable skiping the DCOC normal request while waiting for the Modem approval in case of DCOC urgent request was detected and jump to the DCOC urgent request modem hanshaking mode
SML1,rxctrl_bbagc_jump_to_urgent_en,0x5010603C,1,(10:10),R/W,Enable skiping the BBAGC while waiting for the Modem approval in case of DCOC urgent request was  detected and jump to the start of the DCOC urgent apply(start of DCOC flow)
SML1,rxctrl_txctrl_jump_to_urgent_en,0x5010603C,1,(11:11),R/W,Enable skiping the TXCTRL while waiting for the Modem approval in case of DCOC urgent request was  detected and jump to the start of the DCOC urgent apply(start of DCOC flow)
SML1,mdm_rxctrl_frmdtctd_rfagc_od_sel_sof,0x5010603C,0,(12:12),R/W,Define the mode of Modem detected frame to Block the RFAGC either start of frame(the modem is sure that this  is a frame and remians high to end of the operation) or Energy detection (the modem had detected an enegry (entry point) yet it is not forsure a frame so it may go low again )
SML1,mdm_rxctrl_frmdtctd_dcoc_od_sel_sof,0x5010603C,0,(13:13),R/W,Define the mode of Modem detected frame to Block the DCOC either start of frame(the modem is sure that this  is a frame and remians high to end of the operation) or Energy detection (the modem had detected an enegry (entry point) yet it is not forsure a frame so it may go low again )
SML1,mdm_rxctrl_frmdtctd_dcoc_infrm_sel_sof,0x5010603C,0,(14:14),R/W,Define the mode of Modem detected frame for the DCOC Inframe either start of frame(the modem is sure that this  is a frame and remians high to end of the operation) or Energy detection (the modem had detected an enegry (entry point) yet it is not forsure a frame so it may go low again )
SML1,mdm_rxctrl_frmdtctd_bbagc_od_sel_sof,0x5010603C,0,(15:15),R/W,Define the mode of Modem detected frame to Block the BBAGC either start of frame(the modem is sure that this  is a frame and remians high to end of the operation) or Energy detection (the modem had detected an enegry (entry point) yet it is not forsure a frame so it may go low again )
SML1,mdm_rxctrl_frmdtctd_bbagc_infrm_sel_sof,0x5010603C,0,(16:16),R/W,Define the mode of Modem detected frame for the BBAGC Inframe either start of frame(the modem is sure that this  is a frame and remians high to end of the operation) or Energy detection (the modem had detected an enegry (entry point) yet it is not forsure a frame so it may go low again )
SML1,mdm_rxctrl_frmdtctd_txctrl_sel_sof,0x5010603C,0,(17:17),R/W,Define the mode of Modem detected frame to Block the TXCTRL either start of frame(the modem is sure that this  is a frame and remians high to end of the operation) or Energy detection (the modem had detected an enegry (entry point) yet it is not forsure a frame so it may go low again )
SML1,spare_sml1_rom_dyn0,0x5010603C,0,(18:31),R/W,
SML1,spare_sml1_rom_dyn1,0x50106040,0,(0:31),R/W,
SML1,rxctrl_rfagc_cdac_overlaod_mdm_req_inframe,0x50106044,1,(0:1),R/W,Modem handshaking mode in case of RFAGC Coarse DAC overloaded request after the Modem had detected a frame 0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_rfagc_hilowflag_mdm_req_inframe,0x50106044,1,(2:3),R/W,Modem handshaking mode in case of  RFAGC High/Low flag request after the Modem had detected a frame 0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_rfagc_err_mdm_req_inframe,0x50106044,1,(4:5),R/W,Modem handshaking mode in case of RFAGC Error request after the Modem had detected a frame 0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,Reserved,0x50106044,0,(6:7),R/W,
SML1,rxctrl_dcoc_urgent_mdm_req_inframe,0x50106044,1,(8:9),R/W,Modem handshaking mode in case of DOCO Urgent request after the Modem had detected a frame  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_dcoc_normal_mdm_req_inframe,0x50106044,1,(10:11),R/W,Modem handshaking mode in case of DCOC Normal request after the Modem had detected a frame  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_dcoc_err_mdm_req_inframe,0x50106044,1,(12:13),R/W,Modem handshaking mode in case of DCOC Error request after the Modem had detected a frame  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,Reserved,0x50106044,0,(14:15),R/W,
SML1,rxctrl_bbagc_normal_mdm_req_inframe,0x50106044,1,(16:17),R/W,Modem handshaking mode in case of BBAGC normal request after the Modem had detected a frame 0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_bbagc_err_mdm_req_inframe,0x50106044,1,(18:19),R/W,Modem handshaking mode in case of BBAGC Error request after the Modem had detected a frame 0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_txctrl_adjust_mdm_req_inframe,0x50106044,1,(20:21),R/W,Modem handshaking mode in case of TXCtrl adjust request after the Modem had detected a frame 0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,spare_sml1_rom_dyn2,0x50106044,0,(22:31),R/W,
SML1,spare_sml1_rom_dyn3,0x50106048,0,(0:31),R/W,
SML1,rxctrl_od_lst_op,0x5010604C,0,(0:7),R/W,Last operation in OD mode 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl 4 -> Return to idle
SML1,rxctrl_lst_op_exit,0x5010604C,0,(8:8),R/W,Exit upon detecting the TX serilaizer block signal without performing the last loop operation
SML1,rxctrl_lst_op_force_en,0x5010604C,0,(9:9),R/W,Force the Last operation in OD mode without cheking a trigger
SML1,rxctrl_lst_op_force_sel,0x5010604C,0,(10:11),R/W, Last Forced operation in OD mode  0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl 4 -> Return to idle
SML1,rxctrl_cnt_ctrl_lst_op,0x5010604C,0,(12:27),R/W,Controls of the Apply & deadzone contengincey counters  when going to the Last operation Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,spare_sml1_rom_dyn4,0x5010604C,0,(28:31),R/W,
SML1,spare_sml1_rom_dyn5,0x50106050,0,(0:31),R/W,
SML1,rxctrl_rfagc_wait_after_apply,0x50106054,0,(0:16),R/W,Time to wait after RF AGC apply (5ms @ 13.56)
SML1,Reserved,0x50106054,0,(17:31),R/W,
SML1,rxctrl_txctrl_wait_after_apply,0x50106058,10,(0:16),R/W,Time to wait after TXCTRL apply (5ms @ 13.56)
SML1,Reserved,0x50106058,0,(17:31),R/W,
SML1,rxctrl_rfagc_wait_after_error,0x5010605C,0,(0:16),R/W,Time to wait after RF AGC apply with error (5ms @ 13.56)
SML1,Reserved,0x5010605C,0,(17:31),R/W,
SML1,rxctrl_dcoc_wait_after_error,0x50106060,10,(0:16),R/W,Time to wait after DCOC AGC apply with error (5ms @ 13.56)
SML1,Reserved,0x50106060,0,(17:31),R/W,
SML1,rxctrl_bbagc_wait_after_error,0x50106064,10,(0:16),R/W,Time to wait after BBAGC apply with error (5ms @ 13.56)
SML1,Reserved,0x50106064,0,(17:31),R/W,
SML1,rxctrl_rfagc_time_after_trigger,0x50106068,0,(0:16),R/W,Time to wait  after a conidtion is triggering a RFAGC apply (4.4 us @13.56 MHz)
SML1,Reserved,0x50106068,0,(17:31),R/W,
SML1,rxctrl_dcoc_time_after_trigger,0x5010606C,0,(0:16),R/W,Time to wait  after a conidtion is triggering a DCOC apply (4.4 us @13.56 MHz)
SML1,Reserved,0x5010606C,0,(17:31),R/W,
SML1,rxctrl_bbagc_time_after_trigger,0x50106070,0,(0:16),R/W,Time to wait  after a conidtion is triggering a BBAGC apply (4.4 us @13.56 MHz)
SML1,Reserved,0x50106070,0,(17:31),R/W,
SML1,rxctrl_txctrl_time_after_trigger,0x50106074,0,(0:16),R/W,Time to wait  after a conidtion is triggering a TXCTRL apply (4.4 us @13.56 MHz)
SML1,spare_sml1_rom_dyn6,0x50106074,0,(17:31),R/W,
SML1,rxctrl_bbagc_dcoc_en,0x50106078,1,(0:0),R/W,Enable DCOC during BBAGC apply
SML1,rxctrl_bbagc_dcoc_chng_confg_after_err,0x50106078,1,(1:1),R/W,Change DCOC mode after after error
SML1,rxctrl_bbagc_dcoc_mode_after_err,0x50106078,0,(2:4),R/W,Mode control  000 -> SAR-M 001 -> DWE-S 010 -> DWE-M 011 -> GCTA 100 -> SWA-C 101 -> SWA-F
SML1,rxctrl_bbagc_dcoc_chng_confg_post_mdmdtctfrm,0x50106078,0,(5:5),R/W,Enable changing DCOC  configuration after a modem had detetced a frame
SML1,rxctrl_bbagc_dcoc_mode_post_mdmdctfrm,0x50106078,0,(6:8),R/W,Mode control  000 -> SAR-M 001 -> DWE-S 010 -> DWE-M 011 -> GCTA 100 -> SWA-C 101 -> SWA-F
SML1,rxctrl_bbagc_dcoc_mode_pre_mdmdctfrm,0x50106078,0,(9:11),R/W,Mode control  000 -> SAR-M 001 -> DWE-S 010 -> DWE-M 011 -> GCTA 100 -> SWA-C 101 -> SWA-F
SML1,rxctrl_bbagc_dcoc_order,0x50106078,0,(12:12),R/W,Define whether to start BBAGC first or DCOC  0 -> BBAGC 1- > DCOC first
SML1,rxctrl_bbagc_dcoc_wait_time,0x50106078,10,(13:18),R/W,Time between applying BBAGC and DCOC or vice versa (4.4 us @13.56 MHz)
SML1,rxctrl_bbagc_rfagc_mntr,0x50106078,1,(19:19),R/W,Enable the RF AGC Monitoring during BBAGC
SML1,rxctrl_bbagc_rfagc_sync_time,0x50106078,10,(20:25),R/W,Time to wait after setting RF agc confgurations or sampling the Hi/Low flags
SML1,rxctrl_bbagc_rfagc_mntr_order,0x50106078,0,(26:26),R/W,Define whether to start RF AGC monitor first or BBAGC 0 -> RF AGC Monitor first 1- > DCOC first
SML1,rxctrl_bbagc_rfagc_mntr_dcoc_order,0x50106078,0,(27:29),R/W,Order of  RfAGC monitor   DCOC and BBAGC 000 -> RF AGC  DCOC  BBAGC 001 -> RF AGC  BB AGC   DCOC 010 -> BBAGC  RF AGC  DCOC 011 -> BBAGC  DCOC  RF AGC 100 -> DCOC  RF AGC  BB AGC 101 -> DCOC  BB AGC   RF AGC
SML1,rxctrl_bbagc_busy_mode,0x50106078,0,(30:30),R/W,Busy for BBAGC mode 0 -> Busy at all loops except BBAGC 1 -> Busy at all loops
SML1,Reserved,0x50106078,0,(31:31),R/W,
SML1,rxctrl_bbagc_dcoc_recalc_wait_time,0x5010607C,10,(0:5),R/W,Time to wait after recalculation before apply (4.4 us @13.56 MHz)
SML1,rxctrl_bbagc_rfagc_mntr_wait_time,0x5010607C,10,(6:11),R/W,Time between applying RF AGC and BBAGC or vice versa (4.4 us @13.56 MHz)
SML1,rxctrl_bbagc_rfagc_mntr_dcoc_first_wait,0x5010607C,10,(12:17),R/W,Time to wait after applying first operation (4.4 us @13.56 MHz)
SML1,rxctrl_bbagc_rfagc_mntr_dcoc_second_wait,0x5010607C,10,(18:23),R/W,Time to wait after applying second operation (4.4 us @13.56 MHz)
SML1,Reserved,0x5010607C,0,(24:31),R/W,
SML1,rxctrl_bbagc_dcoc_conf_settling_time,0x50106080,10,(0:16),R/W,Time to wait after setting the modes and other configurations for DCOC (5us @13.56 MHz)
SML1,Reserved,0x50106080,0,(17:31),R/W,
SML1,txctrl_od_loop_cnt_dn_settle,0x50106084,0,(0:0),R/W,Count the settling from a Done independent on the loops
SML1,txctrl_od_loop_cnt_dn_settle_en,0x50106084,0,(1:1),R/W,enable counting the settling windows from the cnt done instead of loop done
SML1,txctrl_od_loop_settle_wait_mode,0x50106084,0,(2:2),R/W,Settle Blind Zone wait mode 0-> Normal Count 1 -> Numbe of Loops Done
SML1,Reserved,0x50106084,0,(3:7),R/W,
SML1,txctrl_od_loop_settle_wait,0x50106084,0,(8:24),R/W,Either Time to wait when detecting the loop had settled (5 ms @13.56 MHz) or Number of Loops windows to wait
SML1,Reserved,0x50106084,0,(25:31),R/W,
SML1,txctrl_od_loop_cnt_dn_rxctrl,0x50106088,0,(0:0),R/W,Count the RX Ctrl fssi update window  from a Done independent on the loops
SML1,txctrl_od_loop_rxctrl_busy_wait_mode,0x50106088,0,(1:1),R/W,Rx Ctrl busy Blind Zone wait mode 0-> Normal Count 1 -> Numbe of Loops Done
SML1,txctrl_od_loop_cnt_dn_rxctrl_mode,0x50106088,0,(2:3),R/W,Mode of  counting the RX ctrl fssi update windows from the cnt done instead of loop done 0 -> count from Regfile Done  1- > count from Fssi Done 2-> Count from loop done
SML1,Reserved,0x50106088,0,(4:7),R/W,
SML1,txctrl_od_loop_rxctrl_busy_wait,0x50106088,0,(8:24),R/W,Either Time to wait when detecting Rx Ctrl busy  (5 ms @13.56 MHz) or Number of Loops windows to wait
SML1,Reserved,0x50106088,0,(25:31),R/W,
SML1,txctrl_od_loop_cnt_dn_frst_mdmdtctfrm,0x5010608C,0,(0:0),R/W,Count the First  Modem Detected frame update window  from a Done independent on the loops
SML1,txctrl_od_loop_fssi_rx_frst_dtct_wait_mode,0x5010608C,0,(1:1),R/W,Mode of  counting the First Modem Detected frame update windows from the cnt done instead of loop done 0 -> count from Regfile Done  1- > count from Fssi Done 2-> Count from loop done
SML1,txctrl_od_loop_cnt_dn_frst_mdmdtctfrm_mode,0x5010608C,0,(2:3),R/W,Mode of  counting the First Modem Detected frame update windows from the cnt done instead of loop done 0 -> count from Regfile Done  1- > count from Fssi Done 2-> Count from loop done
SML1,Reserved,0x5010608C,0,(4:7),R/W,
SML1,txctrl_od_loop_fssi_rx_frst_dtct_wait,0x5010608C,0,(8:24),R/W,First time the Modem detect the frame wait mode 0-> Normal Count 1 -> Numbe of Loops Done
SML1,Reserved,0x5010608C,0,(25:31),R/W,
SML1,txctrl_od_loop_cnt_dn_mdmdtctfrm,0x50106090,0,(0:0),R/W,Count the Modem Detected frame update window  from a Done independent on the loops
SML1,txctrl_od_loop_fssi_rx_mdmchk_wait_mode,0x50106090,0,(1:1),R/W,Modem checking Blind Zone wait mode  0-> Normal Count 1 -> Numbe of Loops Done
SML1,txctrl_od_loop_cnt_dn_mdmdtctfrm_mode,0x50106090,0,(2:3),R/W,Mode of  counting the Modem Detected frame update windows from the cnt done instead of loop done 0 -> count from Regfile Done  1- > count from Fssi Done 2-> Count from loop done
SML1,Reserved,0x50106090,0,(4:7),R/W,
SML1,txctrl_od_loop_fssi_rx_mdmchk_wait,0x50106090,0,(8:24),R/W,Time to wait before rechecking that modem didnâ€™t detect a frame (5 ms @13.56 MHz)
SML1,Reserved,0x50106090,0,(25:31),R/W,
SML1,txctrl_od_loop_cnt_dn_frst_tx,0x50106094,0,(0:0),R/W,Count the First  TX serializer  update window  from a Done independent on the loops
SML1,txctrl_od_loop_fssi_tx_frst_dtct_wait_mode,0x50106094,0,(1:1),R/W,First time the Data valid had been detected wait mode 0-> Normal Count 1 -> Numbe of Loops Done
SML1,txctrl_od_loop_cnt_dn_frst_tx_mode,0x50106094,0,(2:3),R/W,Mode of  counting the TX serializer update windows from the cnt done instead of loop done 0 -> count from Regfile Done  1- > count from Fssi Done 2-> Count from loop done
SML1,Reserved,0x50106094,0,(4:7),R/W,
SML1,txctrl_od_loop_fssi_tx_frst_dtct_wait,0x50106094,0,(8:24),R/W,First time the Data valid had been detected wait mode 0-> Normal Count 1 -> Numbe of Loops Done
SML1,Reserved,0x50106094,0,(25:31),R/W,
SML1,txctrl_od_loop_settle_apply_wait,0x50106098,0,(0:16),R/W,Either Time to wait when detecting the loop had settled (5 ms @13.56 MHz) or Number of Loops windows to wait
SML1,spare_sml1_rom_dyn7,0x50106098,0,(17:31),R/W,
SML1,fssi_wait,0x5010609C,3,(0:2),R/W,
SML1,Reserved,0x5010609C,0,(3:7),R/W,
SML1,fssi_sat_mux_mode,0x5010609C,0,(8:13),R/W,
SML1,Reserved,0x5010609C,0,(14:15),R/W,
SML1,fssi_bypass_mux_mode,0x5010609C,0,(16:16),R/W,
SML1,spare_sml1_rom_dyn8,0x5010609C,0,(17:31),R/W,
SML1,fssi_start,0x501060A0,0,(0:0),R/W,
SML1,Reserved,0x501060A0,0,(1:7),R/W,
SML1,fssi_start_mode,0x501060A0,0,(8:9),R/W,
SML1,spare_sml1_rom_dyn9,0x501060A0,0,(10:31),R/W,
SML1,spare_sml1_romdyn0,0x501060A4,0,(0:31),R/W,Spare
SML1,spare_sml1_romdyn1,0x501060A8,0,(0:31),R/W,Spare
SML1,spare_sml1_romdyn2,0x501060AC,65535,(0:31),R/W,Spare
SML1,spare_sml1_romdyn3,0x501060B0,65535,(0:31),R/W,Spare
SML1,Reserved,0x501060B4,0,(0:31),R/W,
SML1,Reserved,0x501060B8,0,(0:31),R/W,
SML1,txctrl_od_loop_fssi_rx_mdmdtctdfrm_wait,0x501060BC,0,(0:16),R/W,Time to wait before rechecking that modem didnâ€™t detect a frame (5 ms @13.56 MHz)
SML1,spare_mdm_txctrl_image_23,0x501060BC,0,(17:31),R/W,
SML1,fssi_sclfctr,0x501060C0,0,(0:9),R/W,Scaling fatcor for the caluclated output ( change in field strength)
SML1,spare_sml1_otpdyn0,0x501060C0,65535,(10:31),R/W,Spare
SML1,spare_sml1_otpdyn1,0x501060C4,65535,(0:31),R/W,Spare
SML1,Reserved,0x501060C8,0,(0:31),R/W,
SML1,Reserved,0x501060CC,0,(0:31),R/W,
SML1,spare_sml1_dh0,0x501060D0,0,(0:31),R/W,Spare
SML1,spare_sml1_dh1,0x501060D4,0,(0:31),R/W,Spare
SML1,spare_sml1_dh2,0x501060D8,65535,(0:31),R/W,Spare
SML1,spare_sml1_dh3,0x501060DC,65535,(0:31),R/W,Spare
SML1,Reserved,0x501060E0,0,(0:31),R/W,
SML1,Reserved,0x501060E4,0,(0:31),R/W,
SML1,Reserved,0x501060E8,0,(0:31),R/W,
SML1,lpcd_detune_shft_val,0x501060EC,0,(0:3),R/W,Indicates the shift value which ranges from 0 to 10
SML1,lpcd_detune_no_of_samples,0x501060EC,0,(4:13),R/W,The number of samples required must be taken from 0 to 1023
SML1,Reserved,0x501060EC,0,(14:15),R/W,
SML1,spare_sml1_lpcd_config_1,0x501060EC,0,(16:31),R/W,Spare
SML1,lpcd_detune_no_of_edges,0x501060F0,0,(0:14),R/W,The number of edges that indicates how much time the sampling process will wait and it ranges from 1 to 20480
SML1,spare_sml1_lpcd_config_2,0x501060F0,0,(15:31),R/W,
SML1,rfcol_initial_wait,0x501060F4,0,(0:14),R/W,Initial Sense Window value in RF Collision avoidance mode
SML1,Reserved,0x501060F4,0,(15:15),R/W,
SML1,rfcol_tssi_period,0x501060F4,0,(16:25),R/W,Waiting time till Samplin any fssi calculator Result
SML1,Reserved,0x501060F4,0,(26:31),R/W,
SML1,rfcol_rnd_period,0x501060F8,0,(0:12),R/W,Period added to the initial sense window mutilpe times depending on the random number  in RF Collision avoidance mode
SML1,Reserved,0x501060F8,0,(13:15),R/W,
SML1,rfcol_rfexist_wndw,0x501060F8,0,(16:31),R/W,RF Detection Sense Window
SML1,rfcol_wkuprx_ton,0x501060FC,0,(0:14),R/W,the duration of wkup_en high level  for RF collision Avoidance from Regfile
SML1,Reserved,0x501060FC,0,(15:15),R/W,
SML1,rfcol_wkuprx_toff,0x501060FC,0,(16:30),R/W,the duration of wkup_en low level  for RF collision Avoidance  from Regfile
SML1,Reserved,0x501060FC,0,(31:31),R/W,
SML1,rfcol_rfexist_field_wkup_hithreshold,0x50106100,0,(0:14),R/W,RF Detection High threshold (Reused in both operating modes)
SML1,Reserved,0x50106100,0,(15:15),R/W,
SML1,rfcol_rfexist_field_wkup_lothreshold,0x50106100,0,(16:30),R/W,RF Detection Low threshold (Wake Up Reciever)
SML1,Reserved,0x50106100,0,(31:31),R/W,
SML1,rfcol_rfavod_field_wkup_hithreshold0,0x50106104,0,(0:14),R/W,RFCollision Avoidance High threshold0 (Reused in both operating modes)
SML1,Reserved,0x50106104,0,(15:15),R/W,
SML1,rfcol_rfavod_field_wkup_hithreshold1,0x50106104,0,(16:30),R/W,RFCollision Avoidance High threshold1 (Reused in both operating modes)
SML1,Reserved,0x50106104,0,(31:31),R/W,
SML1,rfcol_rfavod_field_wkup_hithreshold2,0x50106108,0,(0:14),R/W,RFCollision Avoidance High threshold1 (Reused in both operating modes)
SML1,Reserved,0x50106108,0,(15:15),R/W,
SML1,rfcol_rfavod_field_wkup_hithreshold3,0x50106108,0,(16:30),R/W,RFCollision Avoidance High threshold1 (Reused in both operating modes)
SML1,Reserved,0x50106108,0,(31:31),R/W,
SML1,rfcol_rfavod_field_wkup_lothreshold0,0x5010610C,0,(0:14),R/W,RFCollision Avoidance Low threshold0  (Wake Up Reciever)
SML1,Reserved,0x5010610C,0,(15:15),R/W,
SML1,rfcol_rfavod_field_wkup_lothreshold1,0x5010610C,0,(16:30),R/W,RFCollision Avoidance Low threshold1 (Wake Up Reciever)
SML1,Reserved,0x5010610C,0,(31:31),R/W,
SML1,rfcol_rfavod_field_wkup_lothreshold2,0x50106110,0,(0:14),R/W,RFCollision Avoidance Low threshold2  (Wake Up Reciever)
SML1,Reserved,0x50106110,0,(15:15),R/W,
SML1,rfcol_rfavod_field_wkup_lothreshold3,0x50106110,0,(16:30),R/W,RFCollision Avoidance Low threshold3  (Wake Up Reciever)
SML1,Reserved,0x50106110,0,(31:31),R/W,
SML1,rfcol_rfexist_cnt_hithreshold,0x50106114,0,(0:14),R/W,RF Detection counter high  threshold countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106114,0,(15:15),R/W,
SML1,rfcol_rfexist_cnt_lothreshold,0x50106114,0,(16:30),R/W,RF Detection counter low  threshold countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106114,0,(31:31),R/W,
SML1,rfcol_rfexist_field_hithreshold,0x50106118,0,(0:15),R/W,RF Detection High threshold (Reused in both operating modes)
SML1,rfcol_rfavod_field_hithreshold0,0x50106118,0,(16:31),R/W,RFCollision Avoidance High threshold0 (Reused in both operating modes)
SML1,rfcol_rfavod_field_hithreshold1,0x5010611C,0,(0:15),R/W,RFCollision Avoidance High threshold1 (Reused in both operating modes)
SML1,rfcol_rfavod_field_hithreshold2,0x5010611C,0,(16:31),R/W,RFCollision Avoidance High threshold1 (Reused in both operating modes)
SML1,rfcol_rfavod_field_hithreshold3,0x50106120,0,(0:15),R/W,RFCollision Avoidance High threshold1 (Reused in both operating modes)
SML1,Reserved,0x50106120,0,(16:31),R/W,
SML1,rfcol_rfavod_cnt_hithreshold0,0x50106124,0,(0:14),R/W,RFCollision Avoidance Counter high threshold 0 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106124,0,(15:15),R/W,
SML1,rfcol_rfavod_cnt_hithreshold1,0x50106124,0,(16:30),R/W,RFCollision Avoidance Counter high threshold 1 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106124,0,(31:31),R/W,
SML1,rfcol_rfavod_cnt_hithreshold2,0x50106128,0,(0:14),R/W,RFCollision Avoidance Counter high threshold  2 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106128,0,(15:15),R/W,
SML1,rfcol_rfavod_cnt_hithreshold3,0x50106128,0,(16:30),R/W,RFCollision Avoidance Counter high threshold 3 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106128,0,(31:31),R/W,
SML1,rfcol_rfavod_cnt_lothreshold0,0x5010612C,0,(0:14),R/W,RFCollision Avoidance Counter low threshold 0 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x5010612C,0,(15:15),R/W,
SML1,rfcol_rfavod_cnt_lothreshold1,0x5010612C,0,(16:30),R/W,RFCollision Avoidance Counter  low threshold 1 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x5010612C,0,(31:31),R/W,
SML1,rfcol_rfavod_cnt_lothreshold2,0x50106130,0,(0:14),R/W,RFCollision Avoidance Counter  low threshold  2 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106130,0,(15:15),R/W,
SML1,rfcol_rfavod_cnt_lothreshold3,0x50106130,0,(16:30),R/W,RFCollision Avoidance Counter  low threshold 3 countig the number of times the field strength exceeds the high threshold
SML1,Reserved,0x50106130,0,(31:31),R/W,
SML1,fssi_rfagc_gain_inc0,0x50106134,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp0,0x50106134,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc1,0x50106138,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp1,0x50106138,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc2,0x5010613C,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp2,0x5010613C,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc3,0x50106140,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp3,0x50106140,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc4,0x50106144,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp4,0x50106144,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc5,0x50106148,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp5,0x50106148,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc6,0x5010614C,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp6,0x5010614C,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc7,0x50106150,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp7,0x50106150,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc8,0x50106154,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp8,0x50106154,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc9,0x50106158,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp9,0x50106158,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc10,0x5010615C,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp10,0x5010615C,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc11,0x50106160,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp11,0x50106160,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc12,0x50106164,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp12,0x50106164,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc13,0x50106168,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp13,0x50106168,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc14,0x5010616C,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp14,0x5010616C,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc15,0x50106170,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp15,0x50106170,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc16,0x50106174,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp16,0x50106174,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc17,0x50106178,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp17,0x50106178,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc18,0x5010617C,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp18,0x5010617C,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc19,0x50106180,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp19,0x50106180,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc20,0x50106184,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp20,0x50106184,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc21,0x50106188,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp21,0x50106188,0,(22:31),R/W,
SML1,fssi_cordic_gain,0x5010618C,0,(0:12),R/W,Cordic gain for the cordic  amplitude correction 
SML1,spare_sml1_otp32,0x5010618C,0,(13:31),R/W,
SML1,txctrl_txldoctrl_word,0x50106190,0,(0:4),R/W,Target control word for TX LDO
SML1,spare_sml1_txldo_word,0x50106190,0,(5:7),R/W,
SML1,txctrl_pi_cntrl_word,0x50106190,0,(8:14),R/W,Control Word going to PI
SML1,spare_sml1_pi_word,0x50106190,0,(15:15),R/W,
SML1,spare_sml1_txldoctrl_pi_word,0x50106190,0,(16:31),R/W,Spare
SML1,fssi_rfagc_gain_inc22,0x50106194,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp22,0x50106194,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc23,0x50106198,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp23,0x50106198,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc24,0x5010619C,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp24,0x5010619C,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc25,0x501061A0,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp25,0x501061A0,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc26,0x501061A4,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp26,0x501061A4,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc27,0x501061A8,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp27,0x501061A8,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc28,0x501061AC,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp28,0x501061AC,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc29,0x501061B0,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp29,0x501061B0,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc30,0x501061B4,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp30,0x501061B4,0,(22:31),R/W,
SML1,fssi_rfagc_gain_inc31,0x501061B8,0,(0:21),R/W,RF AGC gain + 1 (LUT)
SML1,spare_sml1_otp31,0x501061B8,0,(22:31),R/W,
SML1,spare_sml1_otp33,0x501061BC,0,(0:31),R/W,
SML1,txctrl_pactrl_rfclk_gating_on_wait,0x501061C0,0,(0:7),R/W,
SML1,txctrl_pactrl_rfclk_gating_off_wait,0x501061C0,0,(8:15),R/W,
SML1,txctrl_gating_value_bfr_opera_wait,0x501061C0,0,(16:23),R/W,
SML1,txctrl_gating_value_aftr_opera_wait,0x501061C0,0,(24:31),R/W,
SML1,txctrl_pactrl_shut_wait,0x501061C4,0,(0:15),R/W,
SML1,txctrl_pactrl_start_wait,0x501061C4,0,(16:31),R/W,
SML1,txctrl_pactrl_rfclk_gating_bypass,0x501061C8,0,(0:0),R/W,
SML1,Reserved,0x501061C8,0,(1:7),R/W,
SML1,txctrl_pactrl_rfclk_gating,0x501061C8,0,(8:8),R/W,Select the start  whether 0 -> From Regfile 1 -> From GPIO
SML1,Reserved,0x501061C8,0,(9:15),R/W,
SML1,txctrl_pactrl_rfclk_sel,0x501061C8,0,(16:16),R/W,
SML1,Reserved,0x501061C8,0,(17:31),R/W,
SML1,lpcd_txi_ch_sel,0x501061CC,0,(0:1),R/W,
SML1,Reserved,0x501061CC,0,(2:7),R/W,
SML1,pllctrl_temp_ch_sel,0x501061CC,0,(8:9),R/W,
SML1,Reserved,0x501061CC,0,(10:31),R/W,
SML1,fssi_iadcout_path_inv,0x501061D0,0,(0:0),R/W,
SML1,fssi_qadcout_path_inv,0x501061D0,0,(1:1),R/W,
SML1,Reserved,0x501061D0,0,(2:7),R/W,
SML1,fssi_ifdac_path_inv,0x501061D0,0,(8:8),R/W,
SML1,fssi_qfdac_path_inv,0x501061D0,0,(9:9),R/W,
SML1,Reserved,0x501061D0,0,(10:15),R/W,
SML1,fssi_op_phase_inv,0x501061D0,0,(16:16),R/W,
SML1,Reserved,0x501061D0,0,(17:19),R/W,
SML1,fssi_phase_offset,0x501061D0,0,(20:28),R/W,
SML1,Reserved,0x501061D0,0,(29:31),R/W,
SML1,rxctrl_hiflg_inv_mode,0x501061D4,0,(0:0),R/W,
SML1,rxctrl_lwflg_inv_mode,0x501061D4,1,(1:1),R/W,
SML1,Reserved,0x501061D4,0,(2:7),R/W,
SML1,spare_sml1_rom0,0x501061D4,0,(8:31),R/W,Spare
SML1,spare_sml1_rom1,0x501061D8,0,(0:31),R/W,Spare
SML1,spare_sml1_rom2,0x501061DC,0,(0:31),R/W,Spare
SML1,spare_sml1_rom3,0x501061E0,0,(0:31),R/W,Spare
SML1,spare_sml1_rom4,0x501061E4,0,(0:31),R/W,Spare
SML1,spare_sml1_rom5,0x501061E8,65535,(0:31),R/W,Spare
SML1,spare_sml1_rom6,0x501061EC,65535,(0:31),R/W,Spare
SML1,Reserved,0x501061F0,0,(0:31),R/W,
SML1,Reserved,0x501061F4,0,(0:31),R/W,
SML1,Reserved,0x501061F8,0,(0:31),R/W,
SML1,Reserved,0x501061FC,0,(0:31),R/W,
SML1,pllctrl_en,0x50106200,1,(0:0),R/W,Enable PLL Ctrl
SML1,Reserved,0x50106200,0,(1:7),R/W,
SML1,pllctrl_rst,0x50106200,0,(8:8),R/W,Reset of PLL Controller
SML1,Reserved,0x50106200,0,(9:31),R/W,
SML1,lpcd_detune_rst,0x50106204,0,(0:0),R/W,Synchronous Reset
SML1,Reserved,0x50106204,0,(1:7),R/W,
SML1,lpcd_detune_en,0x50106204,1,(8:8),R/W,Enable/Disable of lpcd detune
SML1,Reserved,0x50106204,0,(9:31),R/W,
SML1,rfcol_rst,0x50106208,0,(0:0),R/W,Synchronous Reset
SML1,Reserved,0x50106208,0,(1:7),R/W,
SML1,rfcol_en,0x50106208,1,(8:8),R/W,Enable/Disable(hold) RF Collision Avoidance blocK
SML1,Reserved,0x50106208,0,(9:31),R/W,
SML1,fssi_reset,0x5010620C,0,(0:0),R/W,Synchronous Reset
SML1,Reserved,0x5010620C,0,(1:7),R/W,
SML1,fssi_enable,0x5010620C,1,(8:8),R/W,Enable of fssi calculator
SML1,Reserved,0x5010620C,0,(9:31),R/W,
SML1,thermal_protection_en,0x50106210,1,(0:0),R/W,Enable/Disable of thermal protection error
SML1,Reserved,0x50106210,0,(1:7),R/W,
SML1,thermal_protection_rst,0x50106210,0,(8:8),R/W,Synchronous Reset
SML1,Reserved,0x50106210,0,(9:31),R/W,
SML1,rxctrl_en,0x50106214,1,(0:0),R/W,Enable RX Ctrl
SML1,Reserved,0x50106214,0,(1:7),R/W,
SML1,rxctrl_rst,0x50106214,0,(8:8),R/W,Reset of Rx Ctrl
SML1,Reserved,0x50106214,0,(9:31),R/W,
SML1,txctrl_en,0x50106218,1,(0:0),R/W,Enable TX Ctrl
SML1,Reserved,0x50106218,0,(1:7),R/W,
SML1,txctrl_sync_rst,0x50106218,0,(8:8),R/W,Reset of TX Ctrl
SML1,Reserved,0x50106218,0,(9:31),R/W,
SML1,err_handler_en,0x5010621C,1,(0:0),R/W,Enable of Error Handler
SML1,Reserved,0x5010621C,0,(1:7),R/W,
SML1,err_handler_sync_rst,0x5010621C,0,(8:8),R/W,Reset of Error Handler
SML1,Reserved,0x5010621C,0,(9:31),R/W,
SML1,pllctrl_vcocal_mode,0x50106220,0,(0:1),R/W,VCO cal mode 
SML1,pllctrl_vcocal_temp_threshold,0x50106220,0,(2:14),R/W,A threshold that is compared with the  the difference between the sampled temperature and the current tempertature
SML1,pllctrl_vcocal_temp_constant_sign,0x50106220,0,(15:15),R/W,A control signal to be passed the VCO calibration to update the VCO tempertaure compensation contant  either to pass the value of its inverted version
SML1,spare_pllctrl_vcocal_ta,0x50106220,0,(16:31),R/W,
SML1,pllctrl_lmac_bpsk_bypass_check,0x50106224,0,(0:0),R/W,Control to check bpsk bypass
SML1,pllctrl_lmac_iq_bypass_check,0x50106224,0,(1:1),R/W,Control to check iq  bypass
SML1,pllctrl_tdc_hold,0x50106224,0,(2:2),R/W,Control to check if it's required to hold either TDC or not
SML1,spare_pllctrl_tdc_ta,0x50106224,0,(3:31),R/W,
SML1,pllctrl_xo_en,0x50106228,0,(0:0),R/W,
SML1,pllctrl_xo_bypass_en,0x50106228,0,(1:1),R/W,
SML1,pllctrl_xo_bias_en,0x50106228,0,(2:2),R/W,
SML1,pllcctrl_xo_buff_en,0x50106228,0,(3:3),R/W,
SML1,pllctrl_xo_spare,0x50106228,0,(4:31),R/W,
SML1,pllctrl_mode,0x5010622C,0,(0:3),R/W,Define TA mode of operation                                        0000 -> Enable Xosc                                        0001  -> Disable Xosc                                        0010  -> Enable External Clock Request                                        0011  -> Disable External Clock Request                                        0100  -> VCO Cal                                        0101  -> PLL Adj Lk                                        0110  -> Swtich Clock to PLL                                        0111  -> Swtich Clock to LP                                        1000  -> Freq Adjust                                        1001 -> Phase Adjust                                        1010  -> Enable LP Osc                                        1011  -> Disable LP Osc                                        1100  -> Load Sigma delate defualts
SML1,pllctrl_wait,0x5010622C,0,(4:20),R/W,Time Required to wait (up to 5 ms @ 13.56 MHz)
SML1,pllctrl_start_mode,0x5010622C,0,(21:21),R/W,Define which mode of start operation :                                                0 -> RegFile                                                1 -> GPIO
SML1,spare_pllctrl_general_ta,0x5010622C,0,(22:31),R/W,
SML1,pllctrl_start,0x50106230,0,(0:0),R/W,Trigger the Start of operation From RegFile 
SML1,Reserved,0x50106230,0,(1:7),R/W, 
SML1,pllctrl_done_clr,0x50106230,0,(8:8),R/W,Clear Signal to the flag that indicates that PLL Controller operation is complete 
SML1,Reserved,0x50106230,0,(9:15),R/W,
SML1,spare_pllctrl_strt_ta,0x50106230,0,(16:31),R/W,
SML1,pllctrl_done,0x50106234,0,(0:0),R,Flag to indicate that PLL Controller operation is complete
SML1,spare_pllctrl_status_ta1,0x50106234,0,(1:7),R,
SML1,pllctrl_vcocal_error,0x50106234,0,(8:8),R,Error flag for the VCO calibration opeartion to higher layer
SML1,pllctrl_vcocal_exceedlmtflag,0x50106234,0,(9:9),R, Error flag indicated calculated NF value exceed the expected limits to higher layer 
SML1, pllctrl_vcocal_nf_error,0x50106234,0,(10:10),R,Error flag for the NF calculation opeartion to higher laye
SML1,spare_pllctrl_status_ta2,0x50106234,0,(11:15),R,
SML1,pllctrl_tdcint_frqtdcerr,0x50106234,0,(16:16),R, Error flag indicates that the specified trials number has been exceeded without getting succcessful reaading from analog TDC to higher level 
SML1,pllctrl_tdcint_ftdcreadingerrflag,0x50106234,0,(17:17),R,Error flag indicates that the input TDC reading value is incorrect (0 or leads to negative value after adding offset  or leads to integer part > 1 in the divison output) to higher level 
SML1,pllctrl_tdcint_frqtdcexeedlmtflag,0x50106234,0,(18:18),R,Error flag indicates that the calculated delta_f_frqtdc exceeds the specified limit to higher level 
SML1,spare_pllctrl_status_ta3,0x50106234,0,(19:31),R,
SML1,spare_pllctrl_ta1,0x50106238,0,(0:31),R/W,
SML1,spare_pllctrl_ta2,0x5010623C,0,(0:31),R/W,
SML1,spare_rd_pllctrl_ta,0x50106240,0,(0:31),R,
SML1,rxctrl_rfagc_amp_pause_det_mode_en,0x50106244,0,(0:0),R/W,Enable Triggering the Amplitude Pause detector after any TA RF agc apply 
SML1,rxctrl_rfagc_amp_pause_det_wait_before_assert,0x50106244,0,(1:6),R/W,Wait time between De-asserting Amplitude pasued detector apply and asserting(4.4 us @13.56 MHz) 
SML1,rxctrl_rfagc_conf_settling_time,0x50106244,0,(7:12),R/W,Time to wait after setting the modes and other configurations for SML0 blocks(4.4 us @13.56 MHz) 
SML1,rxctrl_rfagc_done_wait_time,0x50106244,0,(13:29),R/W,Time to wait before considering the RFAGC has finished its operation (5ms @13.56)
SML1,spare_rxctrl_rfagc_config,0x50106244,0,(30:31),R/W,1001 1010 1011 1100
SML1,rxctrl_rfagc_mode_pre_mdmdctfrm,0x50106248,0,(0:1),R/W,Mode control (SAR  INC/DEC  Single/Multiple steps)                                                                           00 -> SAR                                                                           01-> INC/DEC                                                                           10-> Single/Multiple steps
SML1,rxctrl_rfagc_stepsize_pre_mdmdctfrm,0x50106248,0,(2:4),R/W,Control of INC/DEC mode step size
SML1,rxctrl_rfagc_maxnsteps_pre_mdmdctfrm,0x50106248,0,(5:6),R/W,Control of INC/DEC mode max number of steps
SML1,rxctrl_rfagc_sync_time,0x50106248,0,(7:9),R/W,Time to wait after setting RF agc confgurations or sampling the Hi/Low flags
SML1,rxctrl_rfagc_mntr_req_en,0x50106248,0,(10:10),R/W,Enable the RF AGC Monitor Requests
SML1,spare_rxctrl_rfagc_setting,0x50106248,0,(11:31),R/W,
SML1,rxctrl_dcoc_conf_settling_time,0x5010624C,0,(0:5),R/W,Time to wait after setting the modes and other configurations for SML0 blocks(4.4 us @13.56 MHz)
SML1,rxctrl_dcoc_rfagc_sync_time,0x5010624C,0,(6:11),R/W,Time to wait after setting RF agc confgurations or sampling the Hi/Low flags
SML1,rxctrl_dcoc_wait_after_apply,0x5010624C,0,(12:28),R/W,Time to wait after DCOC apply (5ms @ 13.56)
SML1,spare_rxctrl_dcoc_config,0x5010624C,0,(29:31),R/W,
SML1,rxctrl_dcoc_mode_pre_mdmdctfrm,0x50106250,0,(0:2),R/W,Mode control                         000 -> SAR-M                        001 -> DWE-S                        010 -> DWE-M                         011 -> GCTA                        100 -> SWA-C                        101 -> SWA-F
SML1,rxctrl_dcoc_rfagc_mntr,0x50106250,0,(3:3),R/W, Enable the RF AGC Monitoring during DCOC
SML1,rxctrl_dcoc_rfagc_mntr_dcoc_order,0x50106250,0,(4:4),R/W,Define whether to start RF AGC monitor first or DCOC                                                                           0 -> RF AGC Monitor first                                                                           1- > DCOC first
SML1,rxctrl_dcoc_rfagc_mntr_dcoc_wait_time,0x50106250,0,(5:10),R/W,Time between applying RF AGC and DCOC or vice versa (4.4 us @13.56 MHz)
SML1,spare_rxctrl_dcoc_setting,0x50106250,0,(11:31),R/W,
SML1,rxctrl_loph_wait_after_apply,0x50106254,0,(0:16),R/W,Time to wait after LOPH apply (5ms @ 13.56)
SML1,spare_rxctrl_loph_config,0x50106254,0,(17:31),R/W,
SML1,rxctrl_bbagc_rst_apply_wait_time,0x50106258,0,(0:5),R/W,Time to wait after asserting reset before de-asserting (4.4 us @13.56 MHz)
SML1,rxctrl_bbagc_wait_after_apply,0x50106258,0,(6:22),R/W,Time to wait after BBAGC apply (5ms @ 13.56)
SML1,spare_rxctrl_bbagc_ld_config,0x50106258,0,(23:31),R/W,
SML1,rxctrl_mode,0x5010625C,0,(0:2),R/W,Define mode of operation                                     000 -> TA RFAGC                                     001  -> TA DCOC                                     010  -> TA TOPH                                     011  -> BBAGC Reset                                     100 -> OD
SML1,spare_rxctrl_mode,0x5010625C,0,(3:31),R/W,
SML1,rxctrl_start,0x50106260,0,(0:0),R/W,Trigger the Start of operation From RegFile
SML1,Reserved,0x50106260,0,(1:7),R/W,
SML1,rxctrl_done_ta_clr,0x50106260,0,(8:8),R/W,Clear the Done signal genrated after TA sequence
SML1,Reserved,0x50106260,0,(9:15),R/W,
SML1,spare_rxctrl_strt,0x50106260,0,(16:31),R/W,
SML1,rxctrl_done_ta,0x50106264,0,(0:0),R,Flag to indicate that RX Ctrl operation is complete in TA mode
SML1,spare_rxctrl_status_1,0x50106264,0,(1:7),R,
SML1,rxctrl_busy_od,0x50106264,0,(8:8),R, Flag to indicate status of RX Ctrl in  OD mode
SML1,spare_rxctrl_status_2,0x50106264,0,(9:15),R,
SML1,rxctrl_failed,0x50106264,0,(16:16),R,Flag to indicate that last RX Ctrl operation failed 
SML1,spare_rxctrl_status_3,0x50106264,0,(17:23),R,
SML1,rxctrl_rfagc_failed_sync,0x50106264,0,(24:24),R, Failed Flag from RF AGC after synchronization
SML1,rxctrl_dcoc_failed,0x50106264,0,(25:25),R,Failed Flag from DCOC
SML1,rxctrl_bbagc_failed,0x50106264,0,(26:26),R,Failed Flag from BBAGC
SML1,rxctrl_loph_failed,0x50106264,0,(27:27),R,Failed Flag from LOPH
SML1,spare_rxctrl_status_4,0x50106264,0,(28:31),R,
SML1,spare_rxctrl_status,0x50106268,0,(0:31),R,
SML1,spare_rxctrl_ta1,0x5010626C,0,(0:31),R/W,
SML1,spare_rxctrl_ta2,0x50106270,0,(0:31),R/W,
SML1,spare_rd_rxctrl_ta,0x50106274,0,(0:31),R,
SML1,txctrl_pactrl_sft_shut_done_mode,0x50106278,0,(0:1),R/W,Define the Done after applying start or shut                                                   0 -> Wait for change done Rising edge  (Required mainly in R/W mode)                                                   1 -> Wait for PA Done to be low (Required mainly in CE mode)                                                   2-> Wait for PA Done to be High (Required when shutting down in both)                                                   3 -> Bypass the done
SML1,txctrl_pactrl_strt_shut_wait,0x50106278,0,(2:18),R/W,Time to wait after starting or shuting the PA controller(5 ms @13.56 MHz)
SML1,spare_txctrl_pactrl_config,0x50106278,0,(19:31),R/W,
SML1,txctrl_txldoctrl_pi_start_order,0x5010627C,0,(0:0),R/W,Required order to start TX LDO & PI                                                                 0 -> TX LDO first                                                                 1 -> PI first
SML1,txctrl_txldoctrl_pi_wait,0x5010627C,0,(1:10),R/W,Time to wait between starting TX LDO and chaning PI word (0 shall trigger both at same time)(75  us @13.56 MHz)
SML1,txctrl_txldoctrl_chk_done,0x5010627C,0,(11:11),R/W, Check the Done signal before going to settling time
SML1,txctrl_txldoctrl_strt_shut_wait,0x5010627C,0,(12:28),R/W, Time to wait after starting or shuting the TX LDO controller(5 ms @13.56 MHz)
SML1,spare_txctrl_txldoctrl_config,0x5010627C,0,(29:31),R/W,
SML1,txctrl_dcdc_strt_shut_wait,0x50106280,0,(0:16),R/W,Time to wait after starting or shuting the DCDC (5 ms @13.56 MHz)
SML1,spare_txctrl_dcdc_config,0x50106280,0,(17:31),R/W,
SML1,txctrl_loop_apply_same_time,0x50106284,0,(0:0),R/W, Apply PA   TXLDO and PI at same time  
SML1,txctrl_loop_apply_pactrl_change,0x50106284,0,(1:1),R/W,Apply PA Change when applying the Loop
SML1,txctrl_loop_update_lut_row_num_en,0x50106284,0,(2:2),R/W, Enable Updating  LUT row number
SML1,txctrl_loop_chk_txldoctrl_done,0x50106284,0,(3:3),R/W,Check the TXLDO ctrl Done signal before going to settling time
SML1,txctrl_loop_chk_pactrl_change_done,0x50106284,0,(4:4),R/W, Check the PA ctrl Change Done signal before going to settling time 
SML1,txctrl_loop_first_order,0x50106284,0,(5:6),R/W,First sequence to be applied                                                     00 ->PI                                                     01 -> TXLDO                                                     01 -> PA                                                     11 -> Reserved
SML1,txctrl_loop_second_order,0x50106284,0,(7:8),R/W,Second sequence to be applied                                                     00 ->PI                                                     01 -> TXLDO                                                     01 -> PA                                                     11 -> Reserved
SML1,txctrl_loop_third_order,0x50106284,0,(9:10),R/W, Third sequence to be applied                                                     00 ->PI                                                     01 -> TXLDO                                                     01 -> PA                                                     11 -> Reserved
SML1,txctrl_loop_pa_pi_txldo_first_wait,0x50106284,0,(11:20),R/W,Time to wait after applying first operation (75 us @13.56 MHz)
SML1,txctrl_loop_pa_pi_txldo_second_wait,0x50106284,0,(21:30),R/W,Time to wait after applying second operation (75 us @13.56 MHz)
SML1,Reserved,0x50106284,0,(31:31),R/W,
SML1,txctrl_current_loop,0x50106288,0,(0:2),R/W,Define the current Loop that the TX ctrl shall capture from 000 -> APC 001 -> LMAC 010 -> MI 011 -> APC OR MI 100 -> APC and MI
SML1,Reserved,0x50106288,0,(3:7),R/W,
SML1,txctrl_loop_wait_after_apply,0x50106288,0,(8:24),R/W,Time to wait after Loop apply (5ms @ 13.56)
SML1,spare_txctrl_loop_apply_config_1,0x50106288,0,(25:31),R/W,
SML1,txctrl_mode,0x5010628C,0,(0:3),R/W,Define mode of operation                                       000 -> PA Enable                                       001 -> PA Disable                                       010 -> TX LDO & PI Enable                                       011 -> TX LDO & PI Disable                                        100 -> DCDC Enable                                       101 -> DCDC Disable                                       110 -> APC/LMAC/MI Apply                                       111 -> OD
SML1,txctrl_start_mode_sel,0x5010628C,0,(4:4),R/W,Select the mode of start whether                                                  0 -> From Regfile                                                  1 -> From GPIO
SML1,txctrl_done_ta_clr_mode_sel,0x5010628C,0,(5:5),R/W,Select the mode of TA Clear whether                                                            0 -> From Regfile                                                            1 -> From GPIO
SML1,Reserved,0x5010628C,0,(6:7),R/W,
SML1,txctrl_gating_value_bfr_opera_en,0x5010628C,0,(8:8),R/W,
SML1,txctrl_gating_value_bfr_opera,0x5010628C,0,(9:9),R/W,
SML1,txctrl_gating_value_aftr_opera_en,0x5010628C,0,(10:10),R/W,
SML1,txctrl_gating_value_aftr_opera,0x5010628C,0,(11:11),R/W,
SML1,spare_txctrl_mode,0x5010628C,0,(12:31),R/W,
SML1,txctrl_start,0x50106290,0,(0:0),R/W,Trigger the Start of operation From RegFile 
SML1,Reserved,0x50106290,0,(1:7),R/W,
SML1,txctrl_done_ta_clr,0x50106290,0,(8:8),R/W,Clear the Done signal genrated after TA sequence
SML1,Reserved,0x50106290,0,(9:15),R/W,
SML1,spare_txctrl_strt,0x50106290,0,(16:31),R/W,
SML1,txctrl_done_ta,0x50106294,0,(0:0),R,Flag to indicate that TX Ctrl operation is complete in TA mode
SML1,spare_txctrl_status_1,0x50106294,0,(1:7),R,
SML1,txctrl_od_busy,0x50106294,0,(8:8),R,Flag to indicate status of TX Ctrl in  OD mode
SML1,spare_txctrl_status_2,0x50106294,0,(9:31),R,
SML1,spare_txctrl_ta1,0x50106298,0,(0:31),R/W,
SML1,spare_txctrl_ta2,0x5010629C,0,(0:31),R/W,
SML1,spare_rd_txctrl_ta,0x501062A0,0,(0:31),R,
SML1,ctrl_od_busy,0x501062A4,0,(0:0),R,
SML1,spare_rd_busy_od,0x501062A4,0,(1:31),R,
SML1,rxctrl_rfagc_od_en,0x501062A8,0,(0:0),R/W,Enable RF AGC during OD mode
SML1,rxctrl_dcoc_od_en,0x501062A8,1,(1:1),R/W,Enable DCOC during OD mode
SML1,rxctrl_bbagc_od_en,0x501062A8,1,(2:2),R/W,Enable BBAGC during OD mode
SML1,rxctrl_txctrl_od_en,0x501062A8,1,(3:3),R/W,Enable TX Ctrl during OD mode
SML1,rxctrl_hold_last_priority_at_od_strt,0x501062A8,0,(4:4),R/W,Hold the priority of the last applied loop instead going to the start priority
SML1,rxctrl_rfagc_chng_confg_after_err,0x501062A8,0,(5:5),R/W,Enable changing the configuration after  detecting an error
SML1,rxctrl_dcoc_chng_confg_after_err,0x501062A8,1,(6:6),R/W,Enable changing DCOC configuration after error
SML1,rxctrl_txctrl_busy_en,0x501062A8,1,(7:7),R/W,Enable sending busy to TX ctrl
SML1,rxctrl_od_strt_op,0x501062A8,0,(8:15),R/W,Start operation in OD mode after every loop 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,rxctrl_rfagc_err_req_first,0x501062A8,1,(16:16),R/W,Check Error without the need a trigger or waiting  the programmable time and modem dead zone
SML1,rxctrl_dcoc_err_req_first,0x501062A8,1,(17:17),R/W,Check Error without the need a trigger or waiting  the programmable time and modem dead zone
SML1,rxctrl_bbagc_err_req_first,0x501062A8,1,(18:18),R/W,Check Error without the need a trigger or waiting  the programmable time and modem dead zone
SML1,Reserved,0x501062A8,0,(19:19),R/W,
SML1,rxctrl_rfagc_err_req_bypass,0x501062A8,0,(20:20),R/W,Bypass the Error as a trigger source for applying RFAGC
SML1,rxctrl_dcoc_err_req_bypass,0x501062A8,0,(21:21),R/W,Bypass the Error as a trigger source for applying DCOC
SML1,rxctrl_bbagc_err_req_bypass,0x501062A8,0,(22:22),R/W,Bypass the Error as a trigger source for applying BBAGC
SML1,Reserved,0x501062A8,0,(23:31),R/W,
SML1,rxctrl_rfagc_cdac_overlaod_mdm_req,0x501062AC,0,(0:1),R/W,RFAGC C-dac overloaded Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_rfagc_hilowflag_mdm_req,0x501062AC,0,(2:3),R/W,High/Low Flags Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_rfagc_err_mdm_req,0x501062AC,0,(4:5),R/W,RFAGC Error request Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_rfagc_bypass_mdm_align_deadzone_en,0x501062AC,0,(6:6),R/W,Enable aligining with the Modem Deadzone when using the Modem bypass RFAGC Handshake mode
SML1,rxctrl_rfagc_bypass_frc_rec_req_en,0x501062AC,0,(7:7),R/W,Enable bypassing Force Received signal from the Modem when using the RFAGC Modem Force mode
SML1,rxctrl_dcoc_urgent_mdm_req,0x501062AC,0,(8:9),R/W,DCOC Urgent request Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_dcoc_normal_mdm_req,0x501062AC,1,(10:11),R/W,DCOC Normal request Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_dcoc_err_mdm_req,0x501062AC,1,(12:13),R/W,DCOC Error request Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_dcoc_bypass_mdm_align_deadzone_en,0x501062AC,0,(14:14),R/W,Enable aligining with the Modem Deadzone when using the Modem bypass DCOC Handshake mode
SML1,rxctrl_dcoc_bypass_frc_rec_req_en,0x501062AC,0,(15:15),R/W,Enable bypassing Force Received signal from the Modem when using the DCOC Modem Force mode
SML1,rxctrl_bbagc_normal_mdm_req,0x501062AC,1,(16:17),R/W,BBAGC Normal request Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_bbagc_err_mdm_req,0x501062AC,1,(18:19),R/W,BBAGC Error request Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_bbagc_bypass_mdm_align_deadzone_en,0x501062AC,0,(20:20),R/W,Enable aligining with the Modem Deadzone when using the Modem bypass BBAGC Handshake mode
SML1,rxctrl_bbagc_bypass_frc_rec_req_en,0x501062AC,0,(21:21),R/W,Enable bypassing Force Received signal from the Modem when using the BBAGC Modem Force mode
SML1,Reserved,0x501062AC,0,(22:23),R/W,
SML1,rxctrl_txctrl_adjust_mdm_req,0x501062AC,1,(24:25),R/W,TX Ctrl Adjustment Mode of Modem Hanshaking  0-> Normal Request 1-> Urgent Request 2-> Bypass Requesting
SML1,rxctrl_txctrl_bypass_mdm_align_deadzone_en,0x501062AC,0,(26:26),R/W,Enable aligining with the Modem Deadzone when using the Modem bypass TXCTRL Handshake mode
SML1,rxctrl_txctrl_bypass_frc_rec_req_en,0x501062AC,0,(27:27),R/W,Enable bypassing Force Received signal from the Modem when using the TXCTRL Modem Force mode
SML1,Reserved,0x501062AC,0,(28:31),R/W,
SML1,rxctrl_rfagc_nxt_op_after_apply,0x501062B0,0,(0:7),R/W,Next operation in OD mode after every RF agc apply 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,rxctrl_dcoc_nxt_op_after_apply,0x501062B0,27,(8:15),R/W,Next operation in OD mode after every DCOC apply 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,rxctrl_bbagc_nxt_op_after_apply,0x501062B0,27,(16:23),R/W,Next operation in OD mode after every BBAGC apply 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,rxctrl_txctrl_nxt_op_after_apply,0x501062B0,27,(24:31),R/W,Next operation in OD mode after every TX ctrl apply 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,rxctrl_rfagc_nxt_op_after_error,0x501062B4,0,(0:7),R/W,Next operation in OD mode after every RF agc error 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,rxctrl_dcoc_nxt_op_after_error,0x501062B4,27,(8:15),R/W,Next operation in OD mode after every DCOC error 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,rxctrl_bbagc_nxt_op_after_error,0x501062B4,27,(16:23),R/W,Next operation in OD mode after every BBAGC error 0 -> RF AGC 1 -> DCOC 2 -> BB AGC 3 -> TX ctrl
SML1,Reserved,0x501062B4,0,(24:31),R/W,
SML1,rxctrl_rfagc_wait_align_op,0x501062B8,10,(0:16),R/W,Wait time after modem hanshaking to align  the RFAGC applying loops with the actual start of deadzone(required to allow all the loops apply after the same number of cycles after the Modem Handshake)
SML1,rxctrl_rfagc_no_of_apply,0x501062B8,0,(17:26),R/W,Required Number of RF AGC apply before blocking in OD mode 0 -> infinite number of apply others -> Limit the apply to required number
SML1,rxctrl_rfagc_chk_mdmset_align_op,0x501062B8,0,(27:27),R/W,
SML1,Reserved,0x501062B8,0,(28:31),R/W,
SML1,rxctrl_dcoc_wait_align_op,0x501062BC,10,(0:16),R/W,Wait time after modem hanshaking to align  the DCOC applying loops with the actual start of deadzone(required to allow all the loops apply after the same number of cycles after the Modem Handshake)
SML1,rxctrl_dcoc_no_of_apply,0x501062BC,0,(17:26),R/W,Required Number of DCOC apply before blocking in OD mode 0 -> infinite number of apply others -> Limit the apply to required number
SML1,rxctrl_dcoc_chk_mdmset_align_op,0x501062BC,0,(27:27),R/W,
SML1,Reserved,0x501062BC,0,(28:31),R/W,
SML1,rxctrl_bbagc_wait_align_op,0x501062C0,0,(0:16),R/W,Wait time after modem hanshaking to align  the BBAGC applying loops with the actual start of deadzone(required to allow all the loops apply after the same number of cycles after the Modem Handshake)
SML1,rxctrl_bbagc_no_of_apply,0x501062C0,0,(17:26),R/W,Required Number of BBAGC apply before blocking in OD mode 0 -> infinite number of apply others -> Limit the apply to required number
SML1,rxctrl_bbagc_chk_mdmset_align_op,0x501062C0,0,(27:27),R/W,
SML1,Reserved,0x501062C0,0,(28:31),R/W,
SML1,rxctrl_txctrl_wait_align_op,0x501062C4,0,(0:16),R/W,Wait time after modem hanshaking to align  the TXCTRL applying loops with the actual start of deadzone(required to allow all the loops apply after the same number of cycles after the Modem Handshake)
SML1,rxctrl_txctrl_no_of_apply,0x501062C4,0,(17:26),R/W,Required Number of TX Ctrl apply before blocking in OD mode 0 -> infinite number of apply others -> Limit the apply to required number
SML1,Reserved,0x501062C4,0,(27:31),R/W,
SML1,rxctrl_rfagc_mode_after_err,0x501062C8,0,(0:1),R/W,Mode control (SAR  INC/DEC  Single/Multiple steps) 00 -> SAR 01-> INC/DEC 10-> Single/Multiple steps
SML1,rxctrl_rfagc_stepsize_after_err,0x501062C8,0,(2:4),R/W,Control of INC/DEC mode step size
SML1,rxctrl_rfagc_maxnsteps_after_err,0x501062C8,0,(5:6),R/W,Control of INC/DEC mode max number of steps
SML1,Reserved,0x501062C8,0,(7:7),R/W,
SML1,rxctrl_rfagc_mode_post_mdmdctfrm,0x501062C8,0,(8:9),R/W,Mode control (SAR  INC/DEC  Single/Multiple steps) 00 -> SAR 01-> INC/DEC 10-> Single/Multiple steps
SML1,rxctrl_rfagc_stepsize_post_mdmdctfrm,0x501062C8,0,(10:12),R/W,Control of INC/DEC mode step size
SML1,rxctrl_rfagc_maxnsteps_post_mdmdctfrm,0x501062C8,0,(13:14),R/W,Control of INC/DEC mode max number of steps
SML1,Reserved,0x501062C8,0,(15:15),R/W,
SML1,rxctrl_dcoc_mode_post_mdmdctfrm,0x501062C8,0,(16:18),R/W,Mode control  000 -> SAR-M 001 -> DWE-S 010 -> DWE-M 011 -> GCTA 100 -> SWA-C 101 -> SWA-F
SML1,Reserved,0x501062C8,0,(19:19),R/W,
SML1,rxctrl_dcoc_mode_after_err,0x501062C8,0,(20:22),R/W,Mode control  000 -> SAR-M 001 -> DWE-S 010 -> DWE-M 011 -> GCTA 100 -> SWA-C 101 -> SWA-F
SML1,Reserved,0x501062C8,0,(23:31),R/W,
SML1,rxctrl_rfagc_time_before_apply,0x501062CC,0,(0:16),R/W,Time to wait before applying RF AGC in the OD  mode when bypassing the RFAGC trigger(5ms @13.56)
SML1,rxctrl_rfagc_mdm_dead_zone_count,0x501062CC,0,(17:26),R/W,Number of Rising edge of Modem Dead zone before applying RF AGC in OD mode when bypassing RFAGC trigger 0 -> bypass Dead Zone Window others -> define number of windows
SML1,Reserved,0x501062CC,0,(27:31),R/W,
SML1,rxctrl_dcoc_time_before_apply,0x501062D0,0,(0:16),R/W,Time to wait before applying DCOC in the OD  mode when bypassing the DCOC trigger(5ms @13.56)
SML1,rxctrl_dcoc_mdm_dead_zone_count,0x501062D0,0,(17:26),R/W,Number of Rising edge of Modem Dead zone before applying DCOC in OD mode when bypassing the DCOC trigger 0 -> bypass Dead Zone Window others -> define number of windows
SML1,Reserved,0x501062D0,0,(27:31),R/W,
SML1,rxctrl_bbagc_time_before_apply,0x501062D4,0,(0:16),R/W,Time to wait before applying BBAGC in the OD  mode when bypassing the BBAGC trigger(5ms @13.56)
SML1,rxctrl_bbagc_mdm_dead_zone_count,0x501062D4,0,(17:26),R/W,Number of Rising edge of Modem Dead zone before applying BBAGC in OD mode when bypassing the BBAGC trigger 0 -> bypass Dead Zone Window others -> define number of windows
SML1,Reserved,0x501062D4,0,(27:31),R/W,
SML1,rxctrl_txctrl_time_before_apply,0x501062D8,0,(0:16),R/W,Time to wait before applying TX Ctrl in the OD  mode when bypassing the TXCTRL trigger(5ms @13.56)
SML1,rxctrl_txctrl_mdm_dead_zone_count,0x501062D8,0,(17:26),R/W,Number of Rising edge of Modem Dead zone before applying TX Ctrl in OD mode  when bypassing the TXCTRL trigger 0 -> bypass Dead Zone Window others -> define number of windows
SML1,Reserved,0x501062D8,0,(27:31),R/W,
SML1,rxctrl_cnt_ctrl_apply_rfagc,0x501062DC,0,(0:15),R/W,Controls of the Apply & deadzone contengincey counters after applying the RFAGC  without error Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,rxctrl_cnt_ctrl_apply_err_rfagc,0x501062DC,0,(16:31),R/W,Controls of the Apply & deadzone contengincey counters after applying the RFAGC  with error Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,rxctrl_cnt_ctrl_apply_dcoc,0x501062E0,0,(0:15),R/W,Controls of the Apply & deadzone contengincey counters after applying the DCOC  without error Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,rxctrl_cnt_ctrl_apply_err_dcoc,0x501062E0,0,(16:31),R/W,Controls of the Apply & deadzone contengincey counters after applying the DCOC  without error Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,rxctrl_cnt_ctrl_apply_bbagc,0x501062E4,0,(0:15),R/W,Controls of the Apply & deadzone contengincey counters after applying the BBAGC  without error Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,rxctrl_cnt_ctrl_apply_err_bbagc,0x501062E4,0,(16:31),R/W,Controls of the Apply & deadzone contengincey counters after applying the BBAGC  without error Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,rxctrl_cnt_ctrl_apply_txctrl,0x501062E8,0,(0:15),R/W,Controls of the Apply & deadzone contengincey counters after applying the TXCTRL  without error Counters have two controls Hold -> Hold the counter counts  reset -> resets the counter RFagc apply counter hold _> bit 0 DCOC apply counter hold _> bit 1 BBagc apply counter hold _> bit 2 TXctrl apply counter hold _> bit 3 RFagc apply counter reset _> bit 4 DCOC apply counter reset _> bit 5 BBagcapply  counter reset _> bit 6 TXctrl applycounter reset _> bit 7 RFagc Decdzone counter hold _> bit 8 DCOC Decdzone counter hold _> bit 9 BBagc Decdzone counter hold _> bit 10 TXctrl Decdzone counter hold _> bit 11 RFagc Decdzone counter reset _> bit 12 DCOC Decdzone counter reset _> bit 13 BBagc Decdzone counter reset _> bit 14 TXctrl Decdzone counter reset _> bit 15
SML1,Reserved,0x501062E8,0,(16:31),R/W,
SML1,txctrl_pactrl_bbws_data_mode,0x501062EC,0,(0:1),R/W,BB Data selection Mode 0 -> BB Data from TX serializer 1 -> BBWS Data from PA controller 2 -> Regfile version of version/GPIO
SML1,txctrl_od_rxctrl_mdmfrmdtctd_en,0x501062EC,0,(2:2),R/W,Enable Blocking the operations when the Modem Detects a frame
SML1,txctrl_od_loop_chk_rxctrl,0x501062EC,0,(3:3),R/W,Required to co-ordinate with RX ctrl
SML1,txctrl_od_loop_fssi_mode,0x501062EC,0,(4:5),R/W,Define FSSI mode  0-> RX FSSI  1 -> TX FSSI  2-> CW  
SML1,txctrl_od_loop_fssi_rx_rstrt_upn_frst_dtct,0x501062EC,0,(6:6),R/W,Restart the operation after first time the Modem had detected a frame
SML1,txctrl_od_loop_fssi_tx_rstrt_upn_frst_dtct,0x501062EC,0,(7:7),R/W,Restart the operation after first time the Data Valid had been detected
SML1,txctrl_od_loop_exit_during_settle,0x501062EC,0,(8:8),R/W,Enable exiting the TX ctrl during settling if the start was de-asserted
SML1,txctrl_od_loop_apply_with_data_fall,0x501062EC,0,(9:9),R/W,Start applying the settings when detecting a data falling edge
SML1,txctrl_od_loop_apply_with_data_rise,0x501062EC,0,(10:10),R/W,Start applying the settings when detecting a data Rising edge
SML1,txctrl_od_loop_apply_with_typev_flag,0x501062EC,0,(11:11),R/W,Start applying the settings when detecting a data Type V rising  edge
SML1,Reserved,0x501062EC,0,(12:31),R/W,
SML1,txctrl_od_loop_cnt_dn_apply,0x501062F0,0,(0:0),R/W,Count the Apply  update window  from a Done independent on the loops
SML1,txctrl_od_loop_cnt_dn_apply_mode,0x501062F0,0,(1:2),R/W,Mode of  counting the Apply update windows from the cnt done instead of loop done 0 -> count from Regfile Done  1- > count from Fssi Done 2-> Count from loop done
SML1,txctrl_od_loop_apply_wait_mode,0x501062F0,0,(3:3),R/W,Loop Apply wait mode 0-> Normal Count 1 -> Numbe of Loops Done
SML1,Reserved,0x501062F0,0,(4:7),R/W,
SML1,txctrl_pactrl_ctrl_tfrws_eof_bypass,0x501062F0,0,(8:8),R/W,Bypass theTfrws Eof settings and switch to Regfile version 0 -> FSM  Version  1 -> Regfile version
SML1,txctrl_pactrl_ctrl_tfrws_eofpsk_mode,0x501062F0,0,(9:10),R/W,Bypass theTfrws PSK mode  0 -> FSM  Version similar to eof 1  -> FSM but from PSK Reg 2 -> Regfile version from Eof 3 -> Regfile version from PSK
SML1,Reserved,0x501062F0,0,(11:31),R/W,
SML1,lpcd_detune_strt,0x501062F4,0,(0:0),R/W,Starts The Operation as a trigger signal
SML1,Reserved,0x501062F4,0,(1:7),R/W,
SML1,lpcd_detune_clear,0x501062F4,0,(8:8),R/W,Clear signal from register file to enable DSP to cllear the done signal
SML1,Reserved,0x501062F4,0,(9:15),R/W,
SML1,lpcd_detune_strt_sel,0x501062F4,0,(16:16),R/W,Selects between the start signal from the register file and the start signal from the DSP through the GPIO
SML1,Reserved,0x501062F4,0,(17:31),R/W,
SML1,lpcd_detune_ph_max,0x501062F8,0,(0:15),R,Functional output
SML1,lpcd_detune_ph_min,0x501062F8,0,(16:31),R,Functional output
SML1,lpcd_detune_ph_avg,0x501062FC,0,(0:31),R,Functional output
SML1,lpcd_detune_txi_max,0x50106300,0,(0:15),R,Functional output
SML1,lpcd_detune_txi_min,0x50106300,0,(16:31),R,Functional output
SML1,lpcd_detune_txi_avg,0x50106304,0,(0:31),R,Functional output
SML1,lpcd_detune_amp_max,0x50106308,0,(0:15),R,Functional output
SML1,lpcd_detune_amp_min,0x50106308,0,(16:31),R,Functional output
SML1,lpcd_detune_amp_avg,0x5010630C,0,(0:31),R,Functional output
SML1,lpcd_detune_done,0x50106310,0,(0:0),R,Functional output
SML1,spare_lpcd_status,0x50106310,0,(1:31),R,
SML1,rfcol_strt,0x50106314,0,(0:0),R/W,Start signal to trigger the block to start its operation
SML1,Reserved,0x50106314,0,(1:7),R/W,
SML1,rfcol_done_clear,0x50106314,0,(8:8),R/W,Clear signal from DSP through register file to clear done flag
SML1,Reserved,0x50106314,0,(9:31),R/W,
SML1,rfcol_op_mode,0x50106318,0,(0:0),R/W,Operating mode  0 -> RX Chain 1 -> Wake Up RX
SML1,rfcol_mode,0x50106318,0,(1:1),R/W,Operating mode  0 -> RF Detection 1 -> RF Collision Avoidance
SML1,rfcol_pa_sft_strt,0x50106318,0,(2:2),R/W,Control Signal to determine wehther the PA Soft start is required or not
SML1,Reserved,0x50106318,0,(3:7),R/W,
SML1,rfcol_wkuprx_wait,0x50106318,1,(8:12),R/W,"Time to wait between the de-asserting  of the wakeuprx start and re-asserting once more Its minimum value is equal to 1 ""can't be equal to zero as wrong behaviour occurs"""
SML1,Reserved,0x50106318,0,(13:15),R/W,
SML1,rfcol_rand_num,0x50106318,0,(16:17),R/W,Rnadom number generated used in calculaing the sense windowin RF Collision avoidance mode and choosing the corresponding settings
SML1,Reserved,0x50106318,0,(18:31),R/W,
SML1,rfcol_done,0x5010631C,0,(0:0),R,Done Signal to indicate that the RF ColAvod / Detection Operation is complete(Registered version for debugging)
SML1,spare_rfcol_status_1,0x5010631C,0,(1:7),R,
SML1,rfcol_failed,0x5010631C,0,(8:8),R,RF Collision Avoidance Failure flag(Registered version for debugging)
SML1,spare_rfcol_status_2,0x5010631C,0,(9:15),R,
SML1,rfcol_rf_exist,0x5010631C,0,(16:16),R,RF Detection Flag(Registered version for debugging)
SML1,spare_rfcol_status_3,0x5010631C,0,(17:31),R,
SML1,fssi_ip_capture_bypass,0x50106320,0,(0:0),R/W,Bypass the FSM input capturing signal and switch to Regfile version
SML1,Reserved,0x50106320,0,(1:15),R/W,
SML1,fssi_ip_capture,0x50106320,0,(16:16),R/W,Enabling capturing the inputs
SML1,Reserved,0x50106320,0,(17:31),R/W,
SML1,fssi_cordic_data_sel,0x50106324,0,(0:0),R/W,
SML1,Reserved,0x50106324,0,(1:7),R/W,
SML1,fssi_cordic_strt_sel,0x50106324,0,(8:8),R/W,
SML1,Reserved,0x50106324,0,(9:15),R/W,
SML1,fssi_cordic_strt,0x50106324,0,(16:16),R/W,
SML1,Reserved,0x50106324,0,(17:31),R/W,
SML1,fssi_cordic_data_i,0x50106328,0,(0:12),R/W,
SML1,Reserved,0x50106328,0,(13:15),R/W,
SML1,fssi_cordic_data_q,0x50106328,0,(16:28),R/W,
SML1,Reserved,0x50106328,0,(29:31),R/W,
SML1,fssi_calculated_field_change_phase,0x5010632C,0,(0:15),R,Change in field strength phase
SML1,fssi_calculated_field_change_amp,0x5010632C,0,(16:31),R,Change in field strength amplitude
SML1,fssi_done,0x50106330,0,(0:0),R,Done Signal to indicate a new calculation from from fssi caluclator is ready
SML1,spare_fssi_status_1,0x50106330,0,(1:7),R,
SML1,fssi_newvalue_toggle,0x50106330,0,(8:8),R,Signal that toggles each time a new calculation from from fssi caluclator is ready
SML1,spare_fssi_status_2,0x50106330,0,(9:31),R,
SML1,fssi_cordic_amp,0x50106334,0,(0:15),R,
SML1,spare_fssi_op_1,0x50106334,0,(16:31),R,
SML1,thermal_protection_strt_sel,0x50106338,0,(0:0),R/W,Selects between the start signal from the register file and the start signal from the DSP through the GPIO
SML1,Reserved,0x50106338,0,(1:7),R/W,
SML1,thermal_protection_ack,0x50106338,0,(8:8),R/W,Acknowledgement signal from register file to de-assert the resets
SML1,Reserved,0x50106338,0,(9:15),R/W,
SML1,thermal_protection_ack_sel,0x50106338,0,(16:16),R/W,Selects between acknowledgement siganl from DSP and register file 
SML1,Reserved,0x50106338,0,(17:31),R/W,
SML1,thermal_protection_strt,0x5010633C,0,(0:0),R/W,Starts to check the error signal input 
SML1,Reserved,0x5010633C,0,(1:31),R/W,
SML1,thermal_protection_error,0x50106340,0,(0:0),R/W,Testing the error signal from the register file
SML1,Reserved,0x50106340,0,(1:7),R/W,
SML1,thermal_protection_error_sel,0x50106340,0,(8:8),R/W,Selects between the error signal from the register file and the error signal from the power management unit  through synchronizer
SML1,Reserved,0x50106340,0,(9:31),R/W,
SML1,thermal_protection_seq1,0x50106344,0,(0:2),R/W,Indicates the first sequence of the resets 
SML1,Reserved,0x50106344,0,(3:7),R/W,
SML1,thermal_protection_seq2,0x50106344,0,(8:10),R/W,Indicates the second  sequence of the resets 
SML1,Reserved,0x50106344,0,(11:15),R/W,
SML1,thermal_protection_seq3,0x50106344,0,(16:18),R/W,Indicates the third sequence of the resets 
SML1,Reserved,0x50106344,0,(19:31),R/W,
SML1,thermal_protection_time1,0x50106348,0,(0:13),R/W,Indicates the waiting time before making the second sequence
SML1,Reserved,0x50106348,0,(14:15),R/W,
SML1,thermal_protection_time2,0x50106348,0,(16:29),R/W,Indicates the waiting time before making the third sequence
SML1,Reserved,0x50106348,0,(30:31),R/W,
SML1,thermal_protection_time3,0x5010634C,0,(0:13),R/W,Indicates the waiting time before intrrupting DSP
SML1,Reserved,0x5010634C,0,(14:31),R/W,
SML1,thermal_protection_dsp_intrupt,0x50106350,0,(0:0),R,Indication signal sent to DSP to inform it that thermal protection block have reset the blocks 
SML1,spare_thermal_status,0x50106350,0,(1:31),R,
SML1,Reserved,0x50106354,0,(0:31),R/W,
SML1,Reserved,0x50106358,0,(0:31),R/W,
SML1,trx_qsmplclk,0x5010635C,0,(0:0),R,
SML1,spare_phaseint_status_1,0x5010635C,0,(1:7),R,
SML1,trx_ismplclk,0x5010635C,0,(8:8),R,
SML1,spare_phaseint_status_2,0x5010635C,0,(9:31),R,
SML1,Reserved,0x50106360,0,(0:31),R,
SML1,Reserved,0x50106364,0,(0:31),R/W,
SML1,pllctrl_xosc_en_bypass,0x50106368,0,(0:0),R/W,Bypass the Xosc enable and switch to Regfile version
SML1,pllctrl_ext_clk_req_en_bypass,0x50106368,0,(1:1),R/W,Bypass the External Clock Request enable and switch to Regfile version
SML1,pllctrl_ext_clk_req_en,0x50106368,0,(2:2),R/W,Enable the External Clock Request  from RegFile
SML1,pllctrl_switch_direction_bypass,0x50106368,0,(3:3),R/W,Bypass the Switch direction and switch to Regfile version
SML1,pllctrl_switch_direction,0x50106368,0,(4:4),R/W,Switch clock direction  from RegFile
SML1,pllctrl_lposc_en_bypass,0x50106368,0,(5:5),R/W,Bypass the LP osc enable and switch to Regfile version
SML1,pllctrl_lposc_en,0x50106368,0,(6:6),R/W,Enable the LP osc  from RegFile
SML1,pllctrl_xo_bypass_en_bypass,0x50106368,0,(7:7),R/W,
SML1,pllctrl_xo_bias_en_bypass,0x50106368,0,(8:8),R/W,
SML1,pllcctrl_xo_buff_en_bypass,0x50106368,0,(9:9),R/W,
SML1,Reserved,0x50106368,0,(10:31),R/W,
SML1,pllctrl_plladjustlk_done_test_sel,0x5010636C,0,(0:0),R/W,
SML1,pllctrl_plladjustlk_done_test,0x5010636C,0,(1:1),R/W,
SML1,pllctrl_vcocal_error_test_sel,0x5010636C,0,(2:2),R/W,
SML1,pllctrl_vcocal_error_test,0x5010636C,0,(3:3),R/W,
SML1,pllctrl_vcocal_exceedlmtflag_test_sel,0x5010636C,0,(4:4),R/W,
SML1,pllctrl_vcocal_exceedlmtflag_test,0x5010636C,0,(5:5),R/W,
SML1,pllctrl_vcocal_nf_error_test_sel,0x5010636C,0,(6:6),R/W,
SML1,pllctrl_vcocal_nf_error_test,0x5010636C,0,(7:7),R/W,
SML1,pllctrl_vcocal_done_test_sel,0x5010636C,0,(8:8),R/W,
SML1,pllctrl_vcocal_done_test,0x5010636C,0,(9:9),R/W,
SML1,pllctrl_tdcint_freqmeaurment_rdy_test_sel,0x5010636C,0,(10:10),R/W,
SML1,pllctrl_tdcint_freqmeaurment_rdy_test,0x5010636C,0,(11:11),R/W,
SML1,pllctrl_tdcint_frqtdcerr_test_sel,0x5010636C,0,(12:12),R/W,
SML1,pllctrl_tdcint_frqtdcerr_test,0x5010636C,0,(13:13),R/W,
SML1,pllctrl_tdcint_ftdcreadingerrflag_test_sel,0x5010636C,0,(14:14),R/W,
SML1,pllctrl_tdcint_ftdcreadingerrflag_test,0x5010636C,0,(15:15),R/W,
SML1,pllctrl_tdcint_frqtdcexeedlmtflag_test_sel,0x5010636C,0,(16:16),R/W,
SML1,pllctrl_tdcint_frqtdcexeedlmtflag_test,0x5010636C,0,(17:17),R/W,
SML1,pllctrl_gpadc_current_temperature_test_sel,0x5010636C,0,(18:18),R/W,
SML1,pllctrl_gpadc_current_temperature_test,0x5010636C,0,(19:31),R/W,
SML1,pllctrl_gpadc_sampled_temperature,0x50106370,0,(0:12),R,
SML1,Reserved,0x50106370,0,(13:31),R,
SML1,Reserved,0x50106374,0,(0:31),R,
SML1,Reserved,0x50106378,0,(0:31),R/W,
SML1,lpcd_detune_fssi_ph_sel,0x5010637C,0,(0:0),R/W,Selects between the fssi phase from the register file and the fssi phase from the fssi calculator
SML1,lpcd_detune_txi_sel,0x5010637C,0,(1:1),R/W,Selects between the txi value from the register file and the txi value from txi
SML1,Reserved,0x5010637C,0,(2:7),R/W,
SML1,lpcd_detune_fssi_ph,0x5010637C,0,(8:16),R/W,Testing the fssi phase comes from the register file
SML1,lpcd_detune_txi,0x5010637C,0,(17:29),R/W,Testing the txi  comes from the register file
SML1,Reserved,0x5010637C,0,(30:31),R/W,
SML1,lpcd_detune_fssi_amp_sel,0x50106380,0,(0:0),R/W,Selects between the fssi amplitude from the register file and the fssi amplitude from the fssi calculator
SML1,Reserved,0x50106380,0,(1:7),R/W,
SML1,lpcd_detune_fssi_amp,0x50106380,0,(8:23),R/W,Testing the fssi amplitude comes from the register file
SML1,Reserved,0x50106380,0,(24:31),R/W,
SML1,Reserved,0x50106384,0,(0:31),R/W,
SML1,lpcd_detune_last8_amp_0,0x50106388,0,(0:15),R,Debug
SML1,lpcd_detune_last8_amp_1,0x50106388,0,(16:31),R,Debug
SML1,lpcd_detune_last8_amp_2,0x5010638C,0,(0:15),R,Debug
SML1,lpcd_detune_last8_amp_3,0x5010638C,0,(16:31),R,Debug
SML1,lpcd_detune_last8_amp_4,0x50106390,0,(0:15),R,Debug
SML1,lpcd_detune_last8_amp_5,0x50106390,0,(16:31),R,Debug
SML1,lpcd_detune_last8_amp_6,0x50106394,0,(0:15),R,Debug
SML1,lpcd_detune_last8_amp_7,0x50106394,0,(16:31),R,Debug
SML1,lpcd_detune_last8_ph_0,0x50106398,0,(0:15),R,Debug
SML1,lpcd_detune_last8_ph_1,0x50106398,0,(16:31),R,Debug
SML1,lpcd_detune_last8_ph_2,0x5010639C,0,(0:15),R,Debug
SML1,lpcd_detune_last8_ph_3,0x5010639C,0,(16:31),R,Debug
SML1,lpcd_detune_last8_ph_4,0x501063A0,0,(0:15),R,Debug
SML1,lpcd_detune_last8_ph_5,0x501063A0,0,(16:31),R,Debug
SML1,lpcd_detune_last8_ph_6,0x501063A4,0,(0:15),R,Debug
SML1,lpcd_detune_last8_ph_7,0x501063A4,0,(16:31),R,Debug
SML1,lpcd_detune_last8_txi_0,0x501063A8,0,(0:15),R,Debug
SML1,lpcd_detune_last8_txi_1,0x501063A8,0,(16:31),R,Debug
SML1,lpcd_detune_last8_txi_2,0x501063AC,0,(0:15),R,Debug
SML1,lpcd_detune_last8_txi_3,0x501063AC,0,(16:31),R,Debug
SML1,lpcd_detune_last8_txi_4,0x501063B0,0,(0:15),R,Debug
SML1,lpcd_detune_last8_txi_5,0x501063B0,0,(16:31),R,Debug
SML1,lpcd_detune_last8_txi_6,0x501063B4,0,(0:15),R,Debug
SML1,lpcd_detune_last8_txi_7,0x501063B4,0,(16:31),R,Debug
SML1,Reserved,0x501063B8,0,(0:31),R,
SML1,rfcol_txctrl_strt,0x501063BC,0,(0:0),R,Start signal for TX ctrl but this is the registered version for debugging.
SML1,Reserved,0x501063BC,0,(1:31),R,
SML1,rfcol_wkuprx_ton_tst,0x501063C0,0,(0:14),R,Testing wakeup reciever ton coming from regfile for debugging
SML1,Reserved,0x501063C0,0,(15:15),R,
SML1,rfcol_wkuprx_toff_tst,0x501063C0,0,(16:30),R,Testing wakeup reciever toff coming from regfile for debugging
SML1,Reserved,0x501063C0,0,(31:31),R,
SML1,rfcol_wkuprx_hithreshold,0x501063C4,0,(0:14),R,Testing wakeup reciever high threshold  (Registered version for debugging)
SML1,Reserved,0x501063C4,0,(15:15),R,
SML1,rfcol_wkuprx_lothreshold,0x501063C4,0,(16:30),R,Testing wakeup reciever low threshold (Registered version for debugging)
SML1,Reserved,0x501063C4,0,(31:31),R/W,
SML1,rfcol_fssi_test,0x501063C8,0,(0:15),R/W,Testing  field strength coming from regfile for debugging
SML1,rfcol_fssi_test_sel,0x501063C8,0,(16:16),R/W,Selects between the calculated field strength from fssi calculator and  testing field strength coming from regfile for debugging 0: Normal calculated  field strength 1: Testing field strength
SML1,Reserved,0x501063C8,0,(17:23),R/W,
SML1,rfcol_wkuprx_rfdetect_test,0x501063C8,0,(24:24),R/W,Testing wakeup reciever rf detect signal coming from regfile for debugging
SML1,rfcol_wkuprx_rfdetect_test_sel,0x501063C8,0,(25:25),R/W,Selects between the wakeup reciever rf detect signal  from wakeup reciever   and  testingwakeup reciever rf detect signal coming from regfile for debugging 0: Normal wakeup reciever rf detect signal 1: Testing wakeup reciever rf detect signal
SML1,rfcol_txctrl_done_test,0x501063C8,0,(26:26),R/W,Testing  txcontroller done  signal coming from regfile for debugging
SML1,rfcol_txctrl_done_test_sel,0x501063C8,0,(27:27),R/W,Selects between the txcontroller done signal from tx controller avoidance and  testing  txcontroller done signal coming from regfile for debugging 0: Normal  txcontroller done signal 1: Testing txcontroller done signal
SML1,rfcol_wkuprx_strt_test,0x501063C8,0,(28:28),R/W,Testing wakeup reciever start signal  coming from regfile for debugging
SML1,rfcol_wkuprx_strt_test_sel,0x501063C8,0,(29:29),R/W,Selects between the wakeup reciever start signal  from RF collision avoidance and  testingwakeup reciever start signal coming from regfile for debugging 0: Normal wakeup reciever start signal  1: Testing wakeup reciever start signal 
SML1,Reserved,0x501063C8,0,(30:31),R/W,
SML1,Reserved,0x501063CC,0,(0:31),R/W,
SML1,Reserved,0x501063D0,0,(0:31),R,
SML1,fssi_idcoc_iadcoutavg_test_sel,0x501063D4,0,(0:0),R/W,Selects between the ADC output average (I chain) from DCOC and  testing ADC output average (I chain)  coming from regfile for debugging 0: Normal  ADC output average (I chain)    from DCOC 1: Testing ADC output average (I chain)
SML1,fssi_idcoc_iadcoutavg_test,0x501063D4,0,(1:12),R/W, Testing ADC output average (I chain)  coming from regfile for debugging
SML1,Reserved,0x501063D4,0,(13:15),R/W,
SML1,fssi_qdcoc_qadcoutavg_test_sel,0x501063D4,0,(16:16),R/W,Selects between the ADC output average (Qchain) from DCOC and  testing ADC output average (Q chain)  coming from regfile for debugging 0: Normal  ADC output average (Q chain)    from DCOC 1: Testing ADC output average (Q chain)
SML1,fssi_qdcoc_qadcoutavg_test,0x501063D4,0,(17:28),R/W, Testing ADC output average (Q chain)  coming from regfile for debugging
SML1,Reserved,0x501063D4,0,(29:31),R/W,
SML1,fssi_idcoc_ifdacin_test_sel,0x501063D8,0,(0:0),R/W,Selects between the F-DAC setting (I chain) from DCOC and  testing F-DAC setting (I chain)  coming from regfile for debugging 0: Normal F-DAC setting (I chain) from DCOC 1: TestingF-DAC setting (I chain)
SML1,fssi_idcoc_ifdacin_test,0x501063D8,0,(1:8),R/W, Testing F-DAC setting (I chain) coming from regfile for debugging
SML1,Reserved,0x501063D8,0,(9:15),R/W,
SML1,fssi_qdcoc_qfdacin_test_sel,0x501063D8,0,(16:16),R/W,Selects between the F-DAC setting (Q chain) from DCOC and  testing F-DAC setting (Q chain)  coming from regfile for debugging 0: Normal  F-DAC setting (Q chain) from DCOC 1: Testing F-DAC setting (Q chain)
SML1,fssi_qdcoc_qfdacin_test,0x501063D8,0,(17:24),R/W, Testing F-DAC setting (Q chain) coming from regfile for debugging
SML1,Reserved,0x501063D8,0,(25:31),R/W,
SML1,fssi_dcoc_ifdac_circuits_test_sel,0x501063DC,0,(0:0),R/W,Selects between the F-DAC Circuit offsets (I chain) from DCOC and  testing F-DAC Circuit offsets (I chain) coming from regfile for debugging 0: Normal  F-DAC Circuit offsets (I chain) from DCOC 1: Testing F-DAC Circuit offsets (I chain)
SML1,fssi_dcoc_ifdac_circuits_test,0x501063DC,0,(1:8),R/W, Testing F-DAC Circuit offsets (I chain)  coming from regfile for debugging
SML1,Reserved,0x501063DC,0,(9:15),R/W,
SML1,fssi_dcoc_qfdac_circuits_test_sel,0x501063DC,0,(16:16),R/W,Selects between the F-DAC Circuit offsets (Q chain)  from DCOC and  testing F-DAC Circuit offsets (Q chain) coming from regfile for debugging 0: Normal  F-DAC Circuit offsets (Q chain) from DCOC 1: Testing F-DAC Circuit offsets (Q chain)
SML1,fssi_dcoc_qfdac_circuits_test,0x501063DC,0,(17:24),R/W, Testing F-DAC Circuit offsets (Q chain)  coming from regfile for debugging
SML1,Reserved,0x501063DC,0,(25:31),R/W,
SML1,fssi_idcoc_icdacin_test_sel,0x501063E0,0,(0:0),R/W,Selects between the C-DAC setting (I chain) from DCOC and  testingC-DAC setting (I chain) coming from regfile for debugging 0: Normal  C-DAC setting (I chain)  from DCOC 1: Testing  C-DAC setting (I chain)
SML1,fssi_idcoc_icdacin_test,0x501063E0,0,(1:10),R/W, Testing C-DAC setting (I chain)   coming from regfile for debugging
SML1,Reserved,0x501063E0,0,(11:15),R/W,
SML1,fssi_qdcoc_qcdacin_test_sel,0x501063E0,0,(16:16),R/W,Selects between the C-DAC setting (Qchain) from DCOC and  testingC-DAC setting (I chain) coming from regfile for debugging 0: Normal  C-DAC setting (Qchain)  from DCOC 1: Testing  C-DAC setting (Q chain)
SML1,fssi_qdcoc_qcdacin_test,0x501063E0,0,(17:26),R/W, Testing C-DAC setting (Q chain)   coming from regfile for debugging
SML1,Reserved,0x501063E0,0,(27:31),R/W,
SML1,fssi_dcoc_icdac_circuits_test_sel,0x501063E4,0,(0:0),R/W,Selects between the C-DAC Circuit offsets (I chain) from DCOC and  testing C-DAC Circuit offsets (I chain) coming from regfile for debugging 0: Normal C-DAC Circuit offsets (I chain)  from DCOC 1: Testing C-DAC Circuit offsets (I chain)
SML1,fssi_dcoc_icdac_circuits_test,0x501063E4,0,(1:10),R/W, Testing C-DAC Circuit offsets (I chain)  coming from regfile for debugging
SML1,Reserved,0x501063E4,0,(11:15),R/W,
SML1,fssi_dcoc_qcdac_circuits_test_sel,0x501063E4,0,(16:16),R/W,Selects between the C-DAC Circuit offsets (Q chain) from DCOC and  testingC-DAC Circuit offsets (Q chain) coming from regfile for debugging 0: Normal  C-DAC Circuit offsets (Q chain)  from DCOC 1: Testing  C-DAC Circuit offsets (Q chain)
SML1,fssi_dcoc_qcdac_circuits_test,0x501063E4,0,(17:26),R/W, Testing C-DAC Circuit offsets (Q chain)  coming from regfile for debugging
SML1,Reserved,0x501063E4,0,(27:31),R/W,
SML1,fssi_dcoc_agmrecilut_test_sel,0x501063E8,0,(0:0),R/W,Selects between the Reciprocal of GM-to-C-DAC Gain from DCOC and  testing Reciprocal of GM-to-C-DAC Gain  coming from regfile for debugging 0: Normal  Reciprocal of GM-to-C-DAC Gain from DCOC 1: Testing Reciprocal of GM-to-C-DAC Gain
SML1,fssi_dcoc_agmrecilut_test,0x501063E8,0,(1:17),R/W, Testing Reciprocal of GM-to-C-DAC Gain  coming from regfile for debugging
SML1,Reserved,0x501063E8,0,(18:31),R/W,
SML1,fssi_idcoc_iadbrrecilut_test_sel,0x501063EC,0,(0:0),R/W,Selects between the Reciprocal of C-DAC to F-DAC Gain  I chain from DCOC and  testing Reciprocal of C-DAC to F-DAC Gain  I chain coming from regfile for debugging 0: Normal  Reciprocal of C-DAC to F-DAC Gain  I chain from DCOC 1: Testing Reciprocal of C-DAC to F-DAC Gain  I chain
SML1,fssi_idcoc_iadbrrecilut_test,0x501063EC,0,(1:24),R/W, Testing Reciprocal of C-DAC to F-DAC Gain  I chain coming from regfile for debugging
SML1,Reserved,0x501063EC,0,(25:31),R/W,
SML1,fssi_qdcoc_qadbrrecilut_test_sel,0x501063F0,0,(0:0),R/W,Selects between the Reciprocal of C-DAC to F-DAC Gain  (Q chain) from DCOC and  testing Reciprocal of C-DAC to F-DAC Gain  (Q chain)   coming from regfile for debugging 0: Normal  Reciprocal of C-DAC to F-DAC Gain  (Q chain)  from DCOC 1: Testing Reciprocal of C-DAC to F-DAC Gain  (Q chain) 
SML1,fssi_qdcoc_qadbrrecilut_test,0x501063F0,0,(1:24),R/W, Testing Reciprocal of C-DAC to F-DAC Gain  (Q chain)   coming from regfile for debugging
SML1,Reserved,0x501063F0,0,(25:31),R/W,
SML1,fssi_idcoc_iadwereci_test_sel,0x501063F4,0,(0:0),R/W,Selects between the Reciprocal  of  F-DAC to ADC output Gain ( I chain ) from DCOC and  testing Reciprocal  of  F-DAC to ADC output Gain ( I chain )  coming from regfile for debugging 0: Normal  Reciprocal  of  F-DAC to ADC output Gain ( I chain )  from DCOC 1: Testing Reciprocal  of  F-DAC to ADC output Gain ( I chain )
SML1,fssi_idcoc_iadwereci_test,0x501063F4,0,(1:23),R/W, Testing Reciprocal  of  F-DAC to ADC output Gain ( I chain )  coming from regfile for debugging
SML1,Reserved,0x501063F4,0,(24:31),R/W,
SML1,fssi_qdcoc_qadwereci_test_sel,0x501063F8,0,(0:0),R/W,Selects between the Reciprocal  of  F-DAC to ADC output Gain ( Q chain) from DCOC and  testing  Reciprocal  of  F-DAC to ADC output Gain ( Q chain) coming from regfile for debugging 0: Normal   Reciprocal  of  F-DAC to ADC output Gain ( Q chain)  from DCOC 1: Testing  Reciprocal  of  F-DAC to ADC output Gain ( Q chain)
SML1,fssi_qdcoc_qadwereci_test,0x501063F8,0,(1:23),R/W, Testing  Reciprocal  of  F-DAC to ADC output Gain ( Q chain) coming from regfile for debugging
SML1,Reserved,0x501063F8,0,(24:31),R/W,
SML1,fssi_rfagc_gain_f_test_sel,0x501063FC,0,(0:0),R/W,Selects between the RF AGC gain from  Rx Ctrl and  testing RF AGC gain coming from regfile for debugging 0: Normal  RF AGC gain from DCOC 1: Testing RF AGC gain
SML1,fssi_rfagc_gain_f_test,0x501063FC,0,(1:6),R/W, Testing RF AGC gain coming from regfile for debugging
SML1,Reserved,0x501063FC,0,(7:31),R/W,
SML1,fssi_cal_cordic_gain_level1,0x50106400,0,(0:31),R,
SML1,fssi_cal_cordic_gain_level2,0x50106404,0,(0:5),R,
SML1,Reserved,0x50106404,0,(6:31),R,
SML1,fssi_cal_cordic_gain_inc_agmrecilut_level1,0x50106408,0,(0:31),R,
SML1,fssi_cal_cordic_gain_inc_agmrecilut_level2,0x5010640C,0,(0:31),R,
SML1,fssi_cal_cordic_gain_inc_agmrecilut_level3,0x50106410,0,(0:3),R,
SML1,Reserved,0x50106410,0,(4:31),R,
SML1,fssi_cal_cordic_input_i,0x50106414,0,(0:12),R,
SML1,Reserved,0x50106414,0,(13:15),R,
SML1,fssi_cal_cordic_input_q,0x50106414,0,(16:28),R,
SML1,Reserved,0x50106414,0,(29:31),R,
SML1,fssi_mul_adcoutavg_adwereci_out_i_level1,0x50106418,0,(0:31),R,
SML1,fssi_mul_adcoutavg_adwereci_out_i_level2,0x5010641C,0,(0:3),R,
SML1,Reserved,0x5010641C,0,(4:31),R,
SML1,fssi_mul_adcoutavg_adwereci_out_truncated_sat_q,0x50106420,0,(0:7),R,
SML1,fssi_mul_adcoutavg_adwereci_out_truncated_sat_i,0x50106420,0,(8:15),R,
SML1,Reserved,0x50106420,0,(16:31),R,
SML1,fssi_mul_adcoutavg_adwereci_out_q_level1,0x50106424,0,(0:31),R,
SML1,fssi_mul_adcoutavg_adwereci_out_q_level2,0x50106428,0,(0:3),R,
SML1,Reserved,0x50106428,0,(4:31),R,
SML1,fssi_idoc_ifdacin_dcoc_ifdac_circuits_sub_out_i,0x5010642C,0,(0:9),R,
SML1,fssi_idoc_ifdacin_dcoc_ifdac_circuits_sub_out_q,0x5010642C,0,(10:19),R,
SML1,Reserved,0x5010642C,0,(20:31),R,
SML1,fssi_add_sat_sub_i,0x50106430,0,(0:10),R,
SML1,fssi_add_sat_sub_q,0x50106430,0,(11:21),R,
SML1,Reserved,0x50106430,0,(22:31),R,
SML1,fssi_add_sat_sub_trunc_i,0x50106434,0,(0:8),R,
SML1,fssi_add_sat_sub_trunc_q,0x50106434,0,(9:17),R,
SML1,Reserved,0x50106434,0,(18:31),R,
SML1,fssi_mul_trunc_adcrrecilut_i_level1,0x50106438,0,(0:31),R,
SML1,fssi_mul_trunc_adcrrecilut_i_level2,0x5010643C,0,(0:1),R,
SML1,Reserved,0x5010643C,0,(2:31),R,
SML1,fssi_mul_trunc_adcrrecilut_q_level1,0x50106440,0,(0:31),R,
SML1,fssi_mul_trunc_adcrrecilut_q_level2,0x50106444,0,(0:1),R,
SML1,Reserved,0x50106444,0,(2:31),R,
SML1,fssi_mul_trunc_adcrrecilut_trunc_sat_i,0x50106448,0,(0:9),R,
SML1,fssi_mul_trunc_adcrrecilut_trunc_sat_q,0x50106448,0,(10:19),R,
SML1,Reserved,0x50106448,0,(20:31),R,
SML1,fssi_sub_icdac_circuits_icdacin_i,0x5010644C,0,(0:11),R,
SML1,fssi_sub_icdac_circuits_icdacin_q,0x5010644C,0,(12:23),R,
SML1,Reserved,0x5010644C,0,(24:31),R,
SML1,fssi_mul_amp_cordic_gain,0x50106450,0,(0:26),R,
SML1,Reserved,0x50106450,0,(27:31),R,
SML1,fssi_mul_amp_after_r_rfagc_gain_level1,0x50106454,0,(0:31),R,
SML1,fssi_mul_amp_after_r_rfagc_gain_level2,0x50106458,0,(0:17),R,
SML1,Reserved,0x50106458,0,(18:31),R,
SML1,Reserved,0x5010645C,0,(0:31),R/W,
SML1,Reserved,0x50106460,0,(0:31),R/W,
SML1,thermal_protection_tx_ldo_rst,0x50106464,0,(0:0),R,Resetting signal for TX LDO according the seqences
SML1,thermal_protection_pa_rst,0x50106464,0,(1:1),R,Resetting signal for PA according the seqences
SML1,thermal_protection_tx_ctrl_rst,0x50106464,0,(2:2),R,Resetting signal for TX controller according the seqences
SML1,Reserved,0x50106464,0,(3:31),R,
SML1,mdm_rxctrl_aprv,0x50106468,0,(0:0),R/W,Modme approval signal from Regfile in the bypass mode
SML1,mdm_rxctrl_frmdtctd_bbagc_infrm,0x50106468,0,(1:1),R/W,Inframe going to BBAGC from Regfile in the bypass mode
SML1,mdm_rxctrl_frmdtctd_dcoc_infrm,0x50106468,0,(2:2),R/W,Inframe going to DCOC from Regfile in the bypass mode
SML1,mdm_rxctrl_frmdtctd_bbagc_od,0x50106468,0,(3:3),R/W,Modem detected frame to block BBAGC from Regfile in the bypass mode
SML1,mdm_rxctrl_frmdtctd_dcoc_od,0x50106468,0,(4:4),R/W,Modem detected frame  to block DCOC from Regfile in the bypass mode
SML1,mdm_rxctrl_frmdtctd_rfagc_od,0x50106468,0,(5:5),R/W,Modem detected frame  to block RFAGC from Regfile in the bypass mode
SML1,mdm_rxctrl_frmdtctd_txctrl,0x50106468,0,(6:6),R/W,Modem detected frame  to block TXCtrl from Regfile in the bypass mode
SML1,mdm_rxctrl_rec_req,0x50106468,0,(7:7),R/W,Modem had Received the Force from Regfile in the bypass mode
SML1,mdm_rxctrl_deadzone,0x50106468,0,(8:8),R/W,Modem Deadzone signal from Regfile in the bypass mode
SML1,rfagc_rxctrl_atten_set,0x50106468,0,(9:14),R/W,RFAGC attenuation setting from Regfile  in the bypass mode
SML1,rfagc_rxctrl_hiflg,0x50106468,0,(15:15),R/W,RFAGC High flag from Regfile in the bypass mode
SML1,rfagc_rxctrl_loflg,0x50106468,0,(16:16),R/W,RFAGC Low flag from Regfile in the bypass mode
SML1,rfagc_rxctrl_done,0x50106468,0,(17:17),R/W,RFAGC Done From Regfile in the bypass mode
SML1,rfagc_rxctrl_failed,0x50106468,0,(18:18),R/W,RFAGC failed from Regfile in the bypass mode
SML1,rxctrl_rfagc_mode,0x50106468,0,(19:20),R/W,Mode to go directly to RFAGC from Regfile in the bypass mode
SML1,rxctrl_rfagc_stepsize,0x50106468,0,(21:23),R/W,Step size to go directly to RFAGC from Regfile in the bypass mode
SML1,rxctrl_rfagc_maxnsteps,0x50106468,0,(24:25),R/W,Max numebr of steps to go directly to RFAGC from Regfile in the bypass mode
SML1,rxctrl_rfagc_montr_en,0x50106468,0,(26:26),R/W,Monitor Enable to go directly to RFAGC from Regfile in the bypass mode
SML1,rxctrl_rfagc_apply,0x50106468,0,(27:27),R/W,Apply to go directly to RFAGC from Regfile in the bypass mode
SML1,dcoc_rxctrl_calcrdy,0x50106468,0,(28:28),R/W,DCOC calcualtion Ready from Regfile in the bypass mode
SML1,dcoc_rxctrl_nrmadj,0x50106468,0,(29:29),R/W,DCOC Normal adjustment request from Regfile in the bypass mode
SML1,dcoc_rxctrl_ovrlod,0x50106468,0,(30:30),R/W,DCOC Overload request from Regfile in the bypass mode
SML1,dcoc_rxctrl_covrlod,0x50106468,0,(31:31),R/W,DCOC Coarse DAC is overlaoded request from Regfile in the bypass mode
SML1,dcoc_rxctrl_done,0x5010646C,0,(0:0),R/W,DCOC Done from Regfile in the bypass mode
SML1,dcoc_rxctrl_failed,0x5010646C,0,(1:1),R/W,DCOC failed from Regfile in the bypass mode
SML1,rxctrl_dcoc_mode_out,0x5010646C,0,(2:4),R/W,Mode to  go directly to DCOC from Regfile in the bypass mode
SML1,rxctrl_dcoc_infrm,0x5010646C,0,(5:5),R/W,Inframe  to  go directly to DCOC from Regfile in the bypass mode
SML1,rxctrl_dcoc_apply,0x5010646C,0,(6:6),R/W,Apply  to  go directly to DCOC from Regfile in the bypass mode
SML1,rxctrl_dcoc_recalc,0x5010646C,0,(7:7),R/W,Recalculate the required offset based on BBAGC gain to  go directly to DCOC from Regfile in the bypass mode
SML1,bbagc_rxctrl_nrmadj,0x5010646C,0,(8:8),R/W,BBAGC noraml adjustment request from Regfile in the bypass mode
SML1,bbagc_rxctrl_done,0x5010646C,0,(9:9),R/W,BBAGC Done from Regfile in the bypass mode
SML1,bbagc_rxctrl_failed,0x5010646C,0,(10:10),R/W,BBAGC failed from Regfile in the bypass mode
SML1,rxctrl_bbagc_load_default,0x5010646C,0,(11:11),R/W,BBAGC Load defaut from Regfile in the bypass mode
SML1,rxctrl_bbagc_infrm,0x5010646C,0,(12:12),R/W,Inframe to go directly to BBAGC from Regfile in the bypass mode
SML1,rxctrl_bbagc_apply,0x5010646C,0,(13:13),R/W,Apply to go directly to BBAGC from Regfile in the bypass mode
SML1,trgtphopt_rxctrl_done,0x5010646C,0,(14:14),R/W,Target Phase Optimization Done from Regfile in the bypass mode
SML1,trgtphopt_rxctrl_failed,0x5010646C,0,(15:15),R/W,Target Phase Optimization failed from Regfile in the bypass mode
SML1,rxctrl_trgtphopt_apply,0x5010646C,0,(16:16),R/W,Target Phase Optimization Apply from Regfile in the bypass mode
SML1,txctrl_rxctrl_adjreq,0x5010646C,0,(17:17),R/W,TX Ctrl adjust request from Regfile in the bypass mode
SML1,txctrl_rxctrl_busyreq,0x5010646C,0,(18:18),R/W,TX Ctrl Busy request from Regfile in the bypass mode
SML1,txserializer_rxctrl_block,0x5010646C,0,(19:19),R/W,TX serilaier Block from Regfile in the bypass mode
SML1,rxctrl_amp_pause_det_apply,0x5010646C,0,(20:20),R/W,enable to go directly Amplitude pause detector  in the bypass mode
SML1,mdm_rxctrl_aprv_bypass,0x5010646C,0,(21:21),R/W,Bypass Modem approval  and switch to Regfile version
SML1,mdm_rxctrl_frmdtctd_bbagc_infrm_bypass,0x5010646C,0,(22:22),R/W,Bypass Inframe going to BBAGC  and switch to Regfile version
SML1,mdm_rxctrl_frmdtctd_dcoc_infrm_bypass,0x5010646C,0,(23:23),R/W,Bypass Inframe going to DCOC   and switch to Regfile version
SML1,mdm_rxctrl_frmdtctd_bbagc_od_bypass,0x5010646C,0,(24:24),R/W,Bypass Modem detected frame to block BBAGC and switch to Regfile version
SML1,mdm_rxctrl_frmdtctd_dcoc_od_bypass,0x5010646C,0,(25:25),R/W,Bypass Modem detected frame to block DCOC and switch to Regfile version
SML1,mdm_rxctrl_frmdtctd_rfagc_od_bypass,0x5010646C,0,(26:26),R/W,Bypass Modem detected frame to block RFAGC and switch to Regfile version
SML1,mdm_rxctrl_frmdtctd_txctrl_bypass,0x5010646C,0,(27:27),R/W,Bypass Modem detected frame to block TXCTRL and switch to Regfile version
SML1,mdm_rxctrl_rec_req_bypass,0x5010646C,0,(28:28),R/W,Bypass Modem Received force and switch to Regfile version
SML1,mdm_rxctrl_deadzone_bypass,0x5010646C,0,(29:29),R/W,Bypass Modem Deadzone and switch to Regfile version
SML1,rfagc_rxctrl_atten_set_bypass,0x5010646C,0,(30:30),R/W,BypassRFAGC attenuation settings and switch to Regfile version
SML1,rfagc_rxctrl_hiflg_bypass,0x5010646C,0,(31:31),R/W,Bypass RFAGC High flag and switch to Regfile version
SML1,rfagc_rxctrl_loflg_bypass,0x50106470,0,(0:0),R/W,Bypass RFAGC Low flag and switch to Regfile version
SML1,rfagc_rxctrl_done_bypass,0x50106470,0,(1:1),R/W,Bypass RFAGC Done and switch to Regfile version
SML1,rfagc_rxctrl_failed_bypass,0x50106470,0,(2:2),R/W,Bypass RFAGC Failed and switch to Regfile version
SML1,rxctrl_rfagc_mode_bypass,0x50106470,0,(3:3),R/W,Switch to send the RFAGC mode directly Regfile version
SML1,rxctrl_rfagc_stepsize_bypass,0x50106470,0,(4:4),R/W,Switch to send the RFAGC Step size directly Regfile version
SML1,rxctrl_rfagc_maxnsteps_bypass,0x50106470,0,(5:5),R/W,Switch to send the RFAGC Max number of steps directly Regfile version
SML1,rxctrl_rfagc_montr_en_bypass,0x50106470,0,(6:6),R/W,Switch to send the RFAGC Monitor enable directly Regfile version
SML1,rxctrl_rfagc_apply_bypass,0x50106470,0,(7:7),R/W,Switch to send the RFAGC Apply directly Regfile version
SML1,dcoc_rxctrl_calcrdy_bypass,0x50106470,0,(8:8),R/W,Bypass DCOC calculation of the offset based on BBAGC gain is ready  and switch to Regfile version
SML1,dcoc_rxctrl_nrmadj_bypass,0x50106470,0,(9:9),R/W,Bypass DCOC normal adjust request and switch to Regfile version
SML1,dcoc_rxctrl_ovrlod_bypass,0x50106470,0,(10:10),R/W,Bypass DCOC Overloaded request and switch to Regfile version
SML1,dcoc_rxctrl_covrlod_bypass,0x50106470,0,(11:11),R/W,Bypass DCOC Coarse DAC overloaded request and switch to Regfile version
SML1,dcoc_rxctrl_done_bypass,0x50106470,0,(12:12),R/W,Bypass DCOC done and switch to Regfile version
SML1,dcoc_rxctrl_failed_bypass,0x50106470,0,(13:13),R/W,Bypass DCOC failed and switch to Regfile version
SML1,rxctrl_dcoc_mode_out_bypass,0x50106470,0,(14:14),R/W,Switch to send the DCOC mode directly Regfile version
SML1,rxctrl_dcoc_infrm_bypass,0x50106470,0,(15:15),R/W,Switch to send the DCOC Inframe directly Regfile version
SML1,rxctrl_dcoc_apply_bypass,0x50106470,0,(16:16),R/W,Switch to send the DCOC Apply directly Regfile version
SML1,rxctrl_dcoc_recalc_bypass,0x50106470,0,(17:17),R/W,Switch to send the DCOC Reclauate offset based on BBAGC gain directly Regfile version
SML1,bbagc_rxctrl_nrmadj_bypass,0x50106470,0,(18:18),R/W,Bypass BBAGC normal adjust request and switch to Regfile version
SML1,bbagc_rxctrl_done_bypass,0x50106470,0,(19:19),R/W,Bypass BBAGC Done and switch to Regfile version
SML1,bbagc_rxctrl_failed_bypass,0x50106470,0,(20:20),R/W,Bypass BBAGC Failed and switch to Regfile version
SML1,rxctrl_bbagc_load_default_bypass,0x50106470,0,(21:21),R/W,Bypass BBAGC load defaults and switch to Regfile version
SML1,rxctrl_bbagc_infrm_bypass,0x50106470,0,(22:22),R/W,Switch to send the BBAGC Inframe  directly Regfile version
SML1,rxctrl_bbagc_apply_bypass,0x50106470,0,(23:23),R/W,Switch to send the BBAGC apply directly Regfile version
SML1,trgtphopt_rxctrl_done_bypass,0x50106470,0,(24:24),R/W,Bypass Phase Target Optimization done and switch to Regfile version
SML1,trgtphopt_rxctrl_failed_bypass,0x50106470,0,(25:25),R/W,Bypass Phase Target Optimization failed and switch to Regfile version
SML1,rxctrl_trgtphopt_apply_bypass,0x50106470,0,(26:26),R/W,Switch to send the Target Phase Optimization apply directly Regfile version
SML1,txctrl_rxctrl_adjreq_bypass,0x50106470,0,(27:27),R/W,Bypass Modem approval from FSM and switch to Regfile version
SML1,txctrl_rxctrl_busyreq_bypass,0x50106470,0,(28:28),R/W,Bypass Modem approval from FSM and switch to Regfile version
SML1,txserializer_rxctrl_block_bypass,0x50106470,0,(29:29),R/W,Bypass TX serilaizer Block and switch to Regfile version
SML1,rxctrl_amp_pause_det_apply_bypass,0x50106470,0,(30:30),R/W,Switch to send theAmplitude Pause detector enable directly Regfile version
SML1,rxctrl_bbagc_busy,0x50106470,0,(31:31),R/W,RXCTRL is busy in adjusting other loops going directly to BBAGC from Regfile
SML1,rxctrl_bbagc_busy_bypass,0x50106474,0,(0:0),R/W,Bypass BBAGC busy  and switch to Regfile version
SML1,rxctrl_rfagc_force_protection,0x50106474,0,(1:1),R/W,
SML1,rxctrl_rfagc_force_protection_bypass,0x50106474,0,(2:2),R/W,
SML1,Reserved,0x50106474,0,(3:31),R/W,
SML1,mdm_rxctrl_aprv_sel_gpio,0x50106478,0,(0:0),R/W,Select the mode of Modem Approval whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_frmdtctd_bbagc_infrm_sel_gpio,0x50106478,0,(1:1),R/W,Select the mode of Inframe going to BBAGC whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_frmdtctd_dcoc_infrm_sel_gpio,0x50106478,0,(2:2),R/W,Select the mode of Inframe going to DCOC whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_frmdtctd_bbagc_od_sel_gpio,0x50106478,0,(3:3),R/W,Select the mode of Modem detected frame to block BBAGC whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_frmdtctd_dcoc_od_sel_gpio,0x50106478,0,(4:4),R/W,Select the mode of Modem detected frame  to block DCOC whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_frmdtctd_rfagc_od_sel_gpio,0x50106478,0,(5:5),R/W,Select the mode of Modem detected frame  to block RFAGC whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_frmdtctd_txctrl_sel_gpio,0x50106478,0,(6:6),R/W,Select the mode of Modem detected frame  to block TXCtrl whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_rec_req_sel_gpio,0x50106478,0,(7:7),R/W,Select the mode of Modem had Received the Force whether 0 -> From Regfile 1 -> From GPIO
SML1,mdm_rxctrl_deadzone_sel_gpio,0x50106478,0,(8:8),R/W,Select the mode of Modem Deadzone signal whether 0 -> From Regfile 1 -> From GPIO
SML1,Reserved,0x50106478,0,(9:31),R/W,
SML1,Reserved,0x5010647C,0,(0:31),R/W,
SML1,Reserved,0x50106480,0,(0:31),R/W,
SML1,Reserved,0x50106484,0,(0:31),R/W,
SML1,rxctrl_od_sampled_req,0x50106488,0,(0:7),R,Sampled Request registers used within the OD mode
SML1,rxctrl_mdm_aprv,0x50106488,0,(8:8),R,Modem approval for request
SML1,rxctrl_mdm_rec,0x50106488,0,(9:9),R,Modem Received Request
SML1,rxctrl_mdm_deadzone,0x50106488,0,(10:10),R,Modom dead zone
SML1,rxctrl_hiflg,0x50106488,0,(11:11),R,RF AGC High Flag sampled internally
SML1,rxctrl_lwflg,0x50106488,0,(12:12),R,RF AGC LOW Flag sampled internally
SML1,rxctrl_global_err,0x50106488,0,(13:13),R,Global error that triggers error sequences
SML1,rxctrl_lst_op_flag,0x50106488,0,(14:14),R,Last operation flag
SML1,rxctrl_mdm_frmdtctd_bbagc_infrm,0x50106488,0,(15:15),R,Modem  had detected a frame for BBAGC In frame
SML1,rxctrl_mdm_frmdtctd_dcoc_infrm,0x50106488,0,(16:16),R,Modem  had detected a frame for DCOC In frame
SML1,rxctrl_mdm_frmdtctd_bbagc_od,0x50106488,0,(17:17),R,Modem  had detected a frame for BBAGC OD
SML1,rxctrl_mdm_frmdtctd_dcoc_od,0x50106488,0,(18:18),R,Modem  had detected a frame for DCOC OD
SML1,rxctrl_mdm_frmdtctd_rfagc_od,0x50106488,0,(19:19),R,Modem  had detected a frame for RF AGC OD
SML1,rxctrl_mdm_frmdtctd_txctrl_od,0x50106488,0,(20:20),R,Modem  had detected a frame for TX Ctrl OD
SML1,rxctrl_rfagc_done_sync,0x50106488,0,(21:21),R,Done signal from RF AGC after synchronization
SML1,rxctrl_rfagc_cdac_overload_req,0x50106488,0,(22:22),R,C DAC overloaded Request
SML1,rxctrl_rfagc_hiflag_req_sync,0x50106488,0,(23:23),R,High Flag Request after synchronization
SML1,rxctrl_rfagc_lowflag_req_sync,0x50106488,0,(24:24),R,Low Flag Request after synchronization
SML1,rxctrl_rfagc_atten_set_sync,0x50106488,0,(25:30),R,Attenuator settings after synchronization
SML1,rxctrl_rfagc_trx_startup_debug,0x50106488,0,(31:31),R,
SML1,rfagc_force_protection_sync,0x5010648C,0,(0:0),R,
SML1,Reserved,0x5010648C,0,(1:31),R,
SML1,rxctrl_rfagc_no_of_apply_o,0x50106490,0,(0:9),R,Number of RF AGC applied in OD mode
SML1,Reserved,0x50106490,0,(10:15),R,
SML1,rxctrl_rfagc_no_of_err,0x50106490,0,(16:20),R,Number of RF AGC errors in OD mode
SML1,Reserved,0x50106490,0,(21:23),R,
SML1,rxctrl_dcoc_done,0x50106490,0,(24:24),R,Done signal from DCOC
SML1,rxctrl_dcoc_calcrdy,0x50106490,0,(25:25),R,Calc Ready from DCOC
SML1,rxctrl_dcoc_urgent_req,0x50106490,0,(26:26),R,DCOC urgent Request
SML1,rxctrl_dcoc_normal_req,0x50106490,0,(27:27),R,DCOC Normal Request
SML1,Reserved,0x50106490,0,(28:31),R,
SML1,rxctrl_dcoc_no_of_apply_o,0x50106494,0,(0:9),R,Number of DCOC applied in OD mode
SML1,Reserved,0x50106494,0,(10:15),R,
SML1,rxctrl_dcoc_no_of_err,0x50106494,0,(16:20),R,Number of DCOC errors in OD mode
SML1,Reserved,0x50106494,0,(21:23),R,
SML1,rxctrl_bbagc_done,0x50106494,0,(24:24),R,Done signal from BBAGC
SML1,rxctrl_bbagc_normal_req,0x50106494,0,(25:25),R,BBAGC Normal Request
SML1,Reserved,0x50106494,0,(26:31),R,
SML1,rxctrl_bbagc_no_of_apply_o,0x50106498,0,(0:9),R,Number of BBAGC applied in OD mode
SML1,Reserved,0x50106498,0,(10:15),R,
SML1,rxctrl_bbagc_no_of_err,0x50106498,0,(16:20),R,Number of BBAGC errors in OD mode
SML1,Reserved,0x50106498,0,(21:23),R,
SML1,rxctrl_busy_from_txctrl,0x50106498,0,(24:24),R,TX ctrl busy signal
SML1,txctrl_adjust_req,0x50106498,0,(25:25),R,Tx ctrl adjustment Request
SML1,rxctrl_loph_done,0x50106498,0,(26:26),R,Done signal from LOPH
SML1,Reserved,0x50106498,0,(27:31),R,
SML1,rxctrl_txctrl_no_of_apply_o,0x5010649C,0,(0:9),R,Number of Tx Ctrl applied in OD mode
SML1,Reserved,0x5010649C,0,(10:31),R,
SML1,Reserved,0x501064A0,0,(0:31),R,
SML1,txctrl_pactrl_done_mode_sel,0x501064A4,0,(0:0),R/W,Select thePA Done whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_pactrl_done,0x501064A4,0,(1:1),R/W,Regfile done signal From PA controller
SML1,txctrl_pactrl_done_bypass,0x501064A4,0,(2:2),R/W,Bypass the Done and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_pactrl_change_done_mode_sel,0x501064A4,0,(3:3),R/W,Select thePA Change Done whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_pactrl_change_done,0x501064A4,0,(4:4),R/W,Regfile Change done signal From PA controller
SML1,txctrl_pactrl_change_done_bypass,0x501064A4,0,(5:5),R/W,Bypass the Change Done and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_pactrl_ack_mode_sel,0x501064A4,0,(6:6),R/W,Select thePA ACK  Done whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_pactrl_ack,0x501064A4,0,(7:7),R/W,Regfile ACK done signal From PA controller
SML1,txctrl_pactrl_ack_bypass,0x501064A4,0,(8:8),R/W,Bypass the Done and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_pactrl_data_bbws_data_mode_sel,0x501064A4,0,(9:9),R/W,Select thePA bb_data whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_pactrl_bbws_data,0x501064A4,0,(10:10),R/W,Regfile BB data
SML1,txctrl_txlodctrl_done_mode_sel,0x501064A4,0,(11:11),R/W,Select the txldo Done whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_txldoctrl_done,0x501064A4,0,(12:12),R/W,Regfile Done signal to indicate the TX LDO had finished and returned back to Idle
SML1,txctrl_txldoctrl_done_bypass,0x501064A4,0,(13:13),R/W,Bypass the Done and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_txlodctrl_ack_mode_sel,0x501064A4,0,(14:14),R/W,Select the txldo Ack  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_txldoctrl_ack,0x501064A4,0,(15:15),R/W,Regfile Ack used to handshake with TX LDO to ensure that the new settings had been received and  started to be applied
SML1,txctrl_txldoctrl_ack_bypass,0x501064A4,0,(16:16),R/W,Bypass the Ack and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO/GPIO
SML1,txctrl_od_rxctrl_aprv_mode_sel,0x501064A4,0,(17:17),R/W,Select the  Approval whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_od_rxctrl_aprv,0x501064A4,0,(18:18),R/W,Regfile Enable APC/LMAC/MI adjustment to apply new TX settings
SML1,txctrl_od_rxctrl_aprv_bypass,0x501064A4,0,(19:19),R/W,Bypass the RX ctrl approval and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_od_rxctrl_mdmfrmdtctd_mode_sel,0x501064A4,0,(20:20),R/W,Select the   Modem  had detected a frame  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_od_rxctrl_mdmfrmdtctd,0x501064A4,0,(21:21),R/W,Enable Blocking the operations when the Modem Detects a frame
SML1,txctrl_od_rxctrl_mdmfrmdtctd_bypass,0x501064A4,0,(22:22),R/W,Bypass the RX ctrl Modem had detetcted a frame and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_od_rxctrl_busy_mode_sel,0x501064A4,0,(23:23),R/W,Select the Busy  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_od_rxctrl_busy,0x501064A4,0,(24:24),R/W,Regfile RX ctrl busy is adjusting another loop
SML1,txctrl_od_rxctrl_busy_bypass,0x501064A4,0,(25:25),R/W,Bypass the RX ctrl busy and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_txserializer_datavalid_mode_sel,0x501064A4,0,(26:26),R/W,Select the Data valid  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_txserializer_datavalid,0x501064A4,0,(27:27),R/W,Regfile Data Valid to indicate the start of transmitting data 
SML1,txctrl_txserializer_datavalid_bypass,0x501064A4,0,(28:28),R/W,Bypass the  Data valid  and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_txserializer_block_mode_sel,0x501064A4,0,(29:29),R/W,Select the Block  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_txserializer_block,0x501064A4,0,(30:30),R/W,Regfile Block the TX ctrl from operating 120 us before end of transmission
SML1,txctrl_txserializer_block_bypass,0x501064A4,0,(31:31),R/W,Bypass the Block and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_txserializer_type_v_apply_mode_sel,0x501064A8,0,(0:0),R/W,Select the Apply TypeV  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_txserializer_type_v_apply,0x501064A8,0,(1:1),R/W,Regfile TX ctlr apply with if the high part of the encoded Type V data is more than 150 us us
SML1,txctrl_txserializer_type_v_apply_bypass,0x501064A8,0,(2:2),R/W,Bypass the Apply Type V and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_rfcolavd_strt_mode_sel,0x501064A8,0,(3:3),R/W,Select the start  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_rfcolavd_strt,0x501064A8,0,(4:4),R/W,Regfile start RF collison avoidance PA soft start
SML1,txctrl_rfcolavd_strt_bypass,0x501064A8,0,(5:5),R/W,Bypass the start and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_pactrl_start_bypass,0x501064A8,0,(6:6),R/W,Bypass the Start and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_pactrl_start_mode_sel,0x501064A8,0,(7:7),R/W,Select thePA start  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_pactrl_start,0x501064A8,0,(8:8),R/W,Regfile start PA controller
SML1,txctrl_pactrl_shut_bypass,0x501064A8,0,(9:9),R/W,Bypass the shut and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_pactrl_shut_mode_sel,0x501064A8,0,(10:10),R/W,Select thePA  shut  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_pactrl_shut,0x501064A8,0,(11:11),R/W,Regfile shut PA controller
SML1,txctrl_pactrl_change_bypass,0x501064A8,0,(12:12),R/W,Bypass the change and switch to Regfile version 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_pactrl_change_mode_sel,0x501064A8,0,(13:13),R/W,Select the PA  change  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_pactrl_change,0x501064A8,0,(14:14),R/W,Regfile change PA controller
SML1,txctrl_txldoctrl_newsetapplied_bypass,0x501064A8,0,(15:15),R/W,Bypass the Apply from FSM  and switch to Regfile version 0 -> FSM  1 -> Regfile version
SML1,txctrl_txldoctrl_newsetapplied_mode_sel,0x501064A8,0,(16:16),R/W,Select the New Set applied  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_txldoctrl_newsetapplied,0x501064A8,0,(17:17),R/W,Regfile Apply the new set of control word 
SML1,txctrl_txldoctrl_mode_bypass,0x501064A8,0,(18:18),R/W,Bypass the Mode from FSM  and switch to Regfile version 0 -> FSM  1 -> Regfile version
SML1,txctrl_txldoctrl_mode,0x501064A8,0,(19:20),R/W,Regfile Mode of TX LDO controller
SML1,txctrl_dcdc_operate_bypass,0x501064A8,0,(21:21),R/W,Define the Done after applying start or shut 0 -> Wait for change done Rising edge  (Required mainly in R/W mode) 1 -> Wait for PA Done to be low (Required mainly in CE mode) 2-> Wait for PA Done to be High (Required when shutting down in both) 3 -> Bypass the done
SML1,txctrl_dcdc_operate_mode_sel,0x501064A8,0,(22:22),R/W,Select the DCDC operate whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_dcdc_operate,0x501064A8,0,(23:23),R/W,Bypass the DCDC generated signal to  go out directly from Regfile
SML1,txctrl_od_rxctrl_adjreq_bypass,0x501064A8,0,(24:24),R/W,Bypass the Adjrequest and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_od_rxctrl_adjreq_mode_sel,0x501064A8,0,(25:25),R/W,Select the Adjust Request  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_od_rxctrl_adjreq,0x501064A8,0,(26:26),R/W,Regfile Request APC/LMAC/MI  adjustment 
SML1,txctrl_od_rxctrl_busyreq_bypass,0x501064A8,0,(27:27),R/W,Bypass the Adjrequest and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_od_rxctrl_busyreq_mode_sel,0x501064A8,0,(28:28),R/W,Select the Adjust Request  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_od_rxctrl_busyreq,0x501064A8,0,(29:29),R/W,Regfile Tx Controller request
SML1,txctrl_fssi_start_hold_bypass,0x501064A8,0,(30:30),R/W,Bypass the start and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_fssi_start_hold_mode_sel,0x501064A8,0,(31:31),R/W,Select the start  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_fssi_start_hold,0x501064AC,0,(0:0),R/W,Regfile Hold the FSSI operation when the TX Ctrl is busy in executig a loop
SML1,txctrl_rfcolavd_done_bypass,0x501064AC,0,(1:1),R/W,Bypass the Done and switch to Regfile 0 -> Normal Done  1 -> Regfile version/GPIO
SML1,txctrl_rfcolavd_done_mode_sel,0x501064AC,0,(2:2),R/W,Select the start  whether 0 -> From Regfile 1 -> From GPIO
SML1,txctrl_rfcolavd_done,0x501064AC,0,(3:3),R/W,Regfile for TX ctrl done going to RF collision Avodiance
SML1,Reserved,0x501064AC,0,(4:31),R/W,
SML1,Reserved,0x501064B0,0,(0:31),R/W,
SML1,txctrl_pactrl_rcvd_done,0x501064B4,0,(0:0),R,Indicate the end of PA operation (1 -> as long as PA is idle   0 -> Pa is working)
SML1,txctrl_pactrl_change_rcvd_done,0x501064B4,0,(1:1),R,Indicate the done for changing the PA settings (1 -> PA is not changing any setting  0 -> PA is operating in changing the settings)
SML1,txctrl_pactrl_data_rcvd_done,0x501064B4,0,(2:2),R,Indicate PA controller is in the Data transmission phase ( 1 -> PA is not transmitting any Data  0 -> PA is transmitting Data)
SML1,txctrl_pactrl_rcvd_ack,0x501064B4,0,(3:3),R,Ack that the Control signal is received (used in complete handshaking due to frequency difference in the clocks)
SML1,txctrl_pactrl_bbws_rcvd_data,0x501064B4,0,(4:4),R,BB Data after wave shaping from PA controller
SML1,txctrl_txldoctrl_rcvd_done,0x501064B4,0,(5:5),R,Done signal to indicate the TX LDO had finished and returned back to Idle
SML1,txctrl_txldoctrl_rcvd_ack,0x501064B4,0,(6:6),R,Ack used to handshake with TX LDO to ensure that the new settings had been received and started to be applied
SML1,txctrl_od_rcvd_rxctrl_aprv,0x501064B4,0,(7:7),R,Enable APC/LMAC/MI adjustment to apply new TX settings
SML1,txctrl_od_rcvd_rxctrl_mdmfrmdtctd,0x501064B4,0,(8:8),R,Modem  had detected a frame to hold any operation if required
SML1,txctrl_od_rcvd_rxctrl_busy,0x501064B4,0,(9:9),R,Regfile RX ctrl busy is adjusting another loop
SML1,txctrl_txserializer_rcvd_datavalid,0x501064B4,0,(10:10),R,Received Data Valid to indicate the start of transmitting data 
SML1,txctrl_txserializer_rcvd_block,0x501064B4,0,(11:11),R,Received Block the TX ctrl from operating 120 us before end of transmission
SML1,txctrl_txserializer_rcvd_type_v_apply,0x501064B4,0,(12:12),R,Received TX ctlr apply with if the high part of the encoded Type V data is more than 150 us us
SML1,txctrl_rfcolavd_rcvd_strt,0x501064B4,0,(13:13),R,start RF collison avoidance PA soft start
SML1,txctrl_od_rxctrl_busy_dtctd,0x501064B4,0,(14:14),R,TX Ctrl had detected RX ctrl busy while waiting for the approval
SML1,txctrl_od_first_rxctrl_mdmfrmdtctd,0x501064B4,0,(15:15),R,First time the TX ctrl capture that the Modem had detected a frame
SML1,txctrl_od_first_txserializer_dtctd,0x501064B4,0,(16:16),R,First time the TX ctrl capture that theTX serializer had started transmitting data
SML1,Reserved,0x501064B4,0,(17:31),R,
SML1,Reserved,0x501064B8,0,(0:31),R,
SML1,txctrl_apc_done_mode_sel,0x501064BC,0,(0:0),R/W,Select the APC Done whether 0 -> From Regfile 1 -> From GPIO
SML1,Reserved,0x501064BC,0,(1:7),R/W,
SML1,txctrl_apc_done,0x501064BC,0,(8:8),R/W,Flag to indicate a new reading is available  
SML1,Reserved,0x501064BC,0,(9:15),R/W,
SML1,txctrl_apc_settled,0x501064BC,0,(16:16),R/W,Flag to indicate no new iterations are required as the APC had settled
SML1,Reserved,0x501064BC,0,(17:23),R/W,
SML1,txctrl_apc_newapplied_lut_row_num,0x501064BC,0,(24:28),R/W,Applied APC LUT row number
SML1,Reserved,0x501064BC,0,(29:31),R/W,
SML1,txctrl_lmac_done_mode_sel,0x501064C0,0,(0:0),R/W,Select the LMAC Done whether 0 -> From Regfile 1 -> From GPIO
SML1,Reserved,0x501064C0,0,(1:7),R/W,
SML1,txctrl_lmac_done,0x501064C0,0,(8:8),R/W,Flag to indicate a new reading is available  
SML1,Reserved,0x501064C0,0,(9:15),R/W,
SML1,txctrl_lmac_settled,0x501064C0,0,(16:16),R/W,Flag to indicate no new iterations are required as the LAMC  had settled
SML1,Reserved,0x501064C0,0,(17:23),R/W,
SML1,pllctrl_lmac_bpsk,0x501064C0,0,(24:24),R/W,LMAC BPSK enable 
SML1,pllctrl_lmac_iq,0x501064C0,0,(25:25),R/W, LMAC I/Q enable
SML1,Reserved,0x501064C0,0,(26:31),R/W,
SML1,txctrl_mi_done_mode_sel,0x501064C4,0,(0:0),R/W,Select the MI Done whether 0 -> From Regfile 1 -> From GPIO
SML1,Reserved,0x501064C4,0,(1:7),R/W,
SML1,txctrl_mi_done,0x501064C4,0,(8:8),R/W,Flag to indicate a new reading is available  
SML1,Reserved,0x501064C4,0,(9:15),R/W,
SML1,txctrl_mi_settled,0x501064C4,0,(16:16),R/W,Flag to indicate no new iterations are required as the MI  had settled
SML1,Reserved,0x501064C4,0,(17:31),R/W,
SML1,txctrl_apc_applied_lut_row_num,0x501064C8,0,(0:4),R,Applied TX Ctrl LUT row number which can differ from the last APC sent LUT number
SML1,spare_apc_lut_num,0x501064C8,0,(5:31),R,
SML1,txctrl_pactrl_ctrl_onhilo_bypass,0x501064CC,0,(0:0),R/W,Bypass the On Hi /Lo and switch to Regfile version 0 -> FSM  Version  1 -> Regfile version
SML1,Reserved,0x501064CC,0,(1:7),R/W,
SML1,txctrl_pactrl_ctrl_trws_bypass,0x501064CC,0,(8:8),R/W,Bypass theTrws settings and switch to Regfile version 0 -> FSM  Version  1 -> Regfile version
SML1,Reserved,0x501064CC,0,(9:15),R/W,
SML1,txctrl_pactrl_ctrl_tfws_bypass,0x501064CC,0,(16:16),R/W,Bypass theTfws settings and switch to Regfile version 0 -> FSM  Version  1 -> Regfile version
SML1,Reserved,0x501064CC,0,(17:23),R/W,
SML1,spare_pa_strength_trfws_bypass,0x501064CC,0,(24:31),R/W,
SML1,txctrl_txldoctrl_word_bypass,0x501064D0,0,(0:0),R/W,Bypass the Word from FSM  and switch to Regfile version 0 -> FSM  1 -> Regfile version
SML1,Reserved,0x501064D0,0,(1:7),R/W,
SML1,txctrl_pi_cntrl_word_bypass,0x501064D0,0,(8:8),R/W,Bypass the Control word and switch to Regfile 0 -> Normal Word  1 -> Regfile version/GPIO
SML1,Reserved,0x501064D0,0,(9:15),R/W,
SML1,spare_txldoctrl_pi_word_bypass,0x501064D0,0,(16:31),R/W,Bypass the Word from FSM  and switch to Regfile version 0 -> FSM  1 -> Regfile version
SML1,Reserved,0x501064D4,0,(0:31),R/W,
SML1,txctrl_fsm_sync_rst,0x501064D8,0,(0:0),R/W,
SML1,Reserved,0x501064D8,0,(1:7),R/W,
SML1,rxctrl_state_clr,0x501064D8,0,(8:8),R/W,
SML1,Reserved,0x501064D8,0,(9:15),R/W,
SML1,pllctrl_fsm_rst,0x501064D8,0,(16:16),R/W,
SML1,Reserved,0x501064D8,0,(17:31),R/W,
SML1,rxctrl_rfagc_trx_startup_bypass,0x501064DC,0,(0:0),R/W,
SML1,rxctrl_rfagc_trx_startup,0x501064DC,0,(1:1),R/W,
SML1,spare_rxctrl_bypass6,0x501064DC,0,(2:31),R/W,
SML1,pllctrl_state_debug,0x501064E0,0,(0:7),R,
SML1,txctrl_state_debug,0x501064E0,0,(8:15),R,
SML1,rxctrl_state,0x501064E0,0,(16:23),R,
SML1,spare_states_1,0x501064E0,0,(24:31),R,
SML1,rfcol_cu,0x501064E4,0,(0:7),R,
SML1,fssi_cu,0x501064E4,0,(8:15),R,
SML1,lpcd_detune_cu,0x501064E4,0,(16:23),R,
SML1,thermal_protection_cu,0x501064E4,0,(24:31),R,
SML1,rfcol_rnd_num_period_mul,0x501064E8,0,(0:14),R,
SML1,rfcol_window_r,0x501064E8,0,(15:30),R,
SML1,rfcol_cnt_wndw_r,0x501064EC,0,(0:15),R,
SML1,rfcol_cnt_tssi_r,0x501064EC,0,(16:25),R,
SML1,rfcol_wkuprx_wait_cnt_r,0x501064EC,0,(26:30),R,
SML1,rfcol_threshold_exceed_cnt_r,0x501064F0,0,(0:14),R,
SML1,spare_rfcolavd_debug_1,0x501064F0,0,(15:16),R,
SML1,rfcol_cnt_hithreshold_r,0x501064F0,0,(17:31),R,
SML1,spare_rfcolavd_debug_2,0x501064F4,0,(0:0),R,
SML1,rfcol_cnt_lothreshold_r,0x501064F4,0,(1:15),R,
SML1,spare_rfcolavd_debug_3,0x501064F4,0,(16:16),R,
SML1,rfcol_hi_field_threshold_r,0x501064F8,0,(0:15),R,
SML1,spare_rfcolavd_debug_4,0x501064F8,0,(16:31),R,
SML1,lpcd_detune_samples_count_r,0x501064FC,0,(0:9),R,
SML1,lpcd_detune_edges_count_r,0x501064FC,0,(10:24),R,
SML1,lpcd_detune_done_r,0x501064FC,0,(25:25),R,
SML1,spare_lpcd_debug,0x501064FC,0,(26:31),R,
SML1,thermal_protection_time_count_r,0x50106500,0,(0:13),R,
SML1,thermal_protection_error_sync,0x50106500,0,(14:14),R,
SML1,spare_thermal_debug,0x50106500,0,(15:31),R,
SML1,fssi_idcoc_iadcoutavg_sampled,0x50106504,0,(0:15),R,
SML1,fssi_qdcoc_qadcoutavg_sampled,0x50106504,0,(16:31),R,
SML1,fssi_idcoc_iadbrrecilut_sampled,0x50106508,0,(0:31),R,
SML1,fssi_qdcoc_qadbrrecilut_sampled,0x5010650C,0,(0:31),R,
SML1,fssi_idcoc_iadwereci_sampled,0x50106510,0,(0:31),R,
SML1,fssi_qdcoc_qadwereci_sampled,0x50106514,0,(0:31),R,
SML1,fssi_rfagc_gain_f_sampled,0x50106518,0,(0:7),R,
SML1,fssi_dcoc_agmrecilut_sampled,0x50106518,0,(8:31),R,
SML1,fssi_idcoc_ifdacin_sampled,0x5010651C,0,(0:7),R,
SML1,fssi_qdcoc_qfdacin_sampled,0x5010651C,0,(8:15),R,
SML1,fssi_dcoc_ifdac_circuits_sampled,0x5010651C,0,(16:23),R,
SML1,fssi_dcoc_qfdac_circuits_sampled,0x5010651C,0,(24:31),R,
SML1,fssi_idcoc_ifdacin_mag_sampled,0x50106520,0,(0:7),R,
SML1,fssi_idcoc_ifdacin_sign_sampled,0x50106520,0,(8:15),R,
SML1,fssi_qdcoc_qfdacin_mag_sampled,0x50106520,0,(16:23),R,
SML1,fssi_qdcoc_qfdacin_sign_sampled,0x50106520,0,(24:31),R,
SML1,fssi_dcoc_ifdac_circuits_mag_sampled,0x50106524,0,(0:7),R,
SML1,fssi_dcoc_ifdac_circuits_sign_sampled,0x50106524,0,(8:15),R,
SML1,fssi_dcoc_qfdac_circuits_mag_sampled,0x50106524,0,(16:23),R,
SML1,fssi_dcoc_qfdac_circuits_sign_sampled,0x50106524,0,(24:31),R,
SML1,fssi_idcoc_ifdacin_conv_sampled,0x50106528,0,(0:7),R,
SML1,fssi_qdcoc_qfdacin_conv_sampled,0x50106528,0,(8:15),R,
SML1,fssi_dcoc_ifdac_circuits_conv_sampled,0x50106528,0,(16:23),R,
SML1,fssi_dcoc_qfdac_circuits_conv_sampled,0x50106528,0,(24:31),R,
SML1,fssi_idcoc_icdacin_sampled,0x5010652C,0,(0:15),R,
SML1,fssi_qdcoc_qcdacin_sampled,0x5010652C,0,(16:31),R,
SML1,fssi_dcoc_icdac_circuits_sampled,0x50106530,0,(0:15),R,
SML1,fssi_dcoc_qcdac_circuits_sampled,0x50106530,0,(16:31),R,
SML1,fssi_idcoc_icdacin_mag_sampled,0x50106534,0,(0:15),R,
SML1,fssi_idcoc_icdacin_sign_sampled,0x50106534,0,(16:31),R,
SML1,fssi_qdcoc_qcdacin_mag_sampled,0x50106538,0,(0:15),R,
SML1,fssi_qdcoc_qcdacin_sign_sampled,0x50106538,0,(16:31),R,
SML1,fssi_dcoc_icdac_circuits_mag_sampled,0x5010653C,0,(0:15),R,
SML1,fssi_dcoc_icdac_circuits_sign_sampled,0x5010653C,0,(16:31),R,
SML1,fssi_dcoc_qcdac_circuits_mag_sampled,0x50106540,0,(0:15),R,
SML1,fssi_dcoc_qcdac_circuits_sign_sampled,0x50106540,0,(16:31),R,
SML1,fssi_idcoc_icdacin_conv_sampled,0x50106544,0,(0:15),R,
SML1,fssi_qdcoc_qcdacin_conv_sampled,0x50106544,0,(16:31),R,
SML1,fssi_dcoc_icdac_circuits_conv_sampled,0x50106548,0,(0:15),R,
SML1,fssi_dcoc_qcdac_circuits_conv_sampled,0x50106548,0,(16:31),R,
SML1,fssi_idcoc_iadcoutavg,0x5010654C,0,(0:15),R,
SML1,fssi_qdcoc_qadcoutavg,0x5010654C,0,(16:31),R,
SML1,fssi_idcoc_iadbrrecilut,0x50106550,0,(0:31),R,
SML1,fssi_qdcoc_qadbrrecilut,0x50106554,0,(0:31),R,
SML1,fssi_idcoc_iadwereci,0x50106558,0,(0:31),R,
SML1,fssi_qdcoc_qadwereci,0x5010655C,0,(0:31),R,
SML1,fssi_rfagc_gain_f,0x50106560,0,(0:7),R,
SML1,fssi_dcoc_agmrecilut,0x50106560,0,(8:31),R,
SML1,fssi_idcoc_ifdacin,0x50106564,0,(0:7),R,
SML1,fssi_qdcoc_qfdacin,0x50106564,0,(8:15),R,
SML1,fssi_dcoc_ifdac_circuits,0x50106564,0,(16:23),R,
SML1,fssi_dcoc_qfdac_circuits,0x50106564,0,(24:31),R,
SML1,fssi_idcoc_ifdacin_mag,0x50106568,0,(0:7),R,
SML1,fssi_idcoc_ifdacin_sign,0x50106568,0,(8:15),R,
SML1,fssi_qdcoc_qfdacin_mag,0x50106568,0,(16:23),R,
SML1,fssi_qdcoc_qfdacin_sign,0x50106568,0,(24:31),R,
SML1,fssi_dcoc_ifdac_circuits_mag,0x5010656C,0,(0:7),R,
SML1,fssi_dcoc_ifdac_circuits_sign,0x5010656C,0,(8:15),R,
SML1,fssi_dcoc_qfdac_circuits_mag,0x5010656C,0,(16:23),R,
SML1,fssi_dcoc_qfdac_circuits_sign,0x5010656C,0,(24:31),R,
SML1,fssi_idcoc_ifdacin_conv,0x50106570,0,(0:7),R,
SML1,fssi_qdcoc_qfdacin_conv,0x50106570,0,(8:15),R,
SML1,fssi_dcoc_ifdac_circuits_conv,0x50106570,0,(16:23),R,
SML1,fssi_dcoc_qfdac_circuits_conv,0x50106570,0,(24:31),R,
SML1,fssi_idcoc_icdacin,0x50106574,0,(0:15),R,
SML1,fssi_qdcoc_qcdacin,0x50106574,0,(16:31),R,
SML1,fssi_dcoc_icdac_circuits,0x50106578,0,(0:15),R,
SML1,fssi_dcoc_qcdac_circuits,0x50106578,0,(16:31),R,
SML1,fssi_idcoc_icdacin_mag,0x5010657C,0,(0:15),R,
SML1,fssi_idcoc_icdacin_sign,0x5010657C,0,(16:31),R,
SML1,fssi_qdcoc_qcdacin_mag,0x50106580,0,(0:15),R,
SML1,fssi_qdcoc_qcdacin_sign,0x50106580,0,(16:31),R,
SML1,fssi_dcoc_icdac_circuits_mag,0x50106584,0,(0:15),R,
SML1,fssi_dcoc_icdac_circuits_sign,0x50106584,0,(16:31),R,
SML1,fssi_dcoc_qcdac_circuits_mag,0x50106588,0,(0:15),R,
SML1,fssi_dcoc_qcdac_circuits_sign,0x50106588,0,(16:31),R,
SML1,fssi_idcoc_icdacin_conv,0x5010658C,0,(0:15),R,
SML1,fssi_qdcoc_qcdacin_conv,0x5010658C,0,(16:31),R,
SML1,fssi_dcoc_icdac_circuits_conv,0x50106590,0,(0:15),R,
SML1,fssi_dcoc_qcdac_circuits_conv,0x50106590,0,(16:31),R,
SML1,fssi_dcoc_agmrecilut_full_range,0x50106594,0,(0:23),R,
SML1,spare_fssi_live,0x50106594,0,(24:31),R,
SML1,fssi_idcoc_iadwereci_full_range,0x50106598,0,(0:15),R,
SML1,fssi_qdcoc_qadwereci_full_range,0x50106598,0,(16:31),R,
SML1,err_handler_pll_settle_clr,0x5010659C,0,(0:0),R/W,
SML1,Reserved,0x5010659C,0,(1:7),R/W,
SML1,err_handler_pll_lockdet_clr,0x5010659C,0,(8:8),R/W,
SML1,Reserved,0x5010659C,0,(9:15),R/W,
SML1,err_handler_pmu_thrmprtout_clr,0x5010659C,0,(16:16),R/W,
SML1,Reserved,0x5010659C,0,(17:31),R/W,
SML1,err_handler_vcocal_error_clr,0x501065A0,0,(0:0),R/W,
SML1,err_handler_vcocal_exceedlmtflag_clr,0x501065A0,0,(1:1),R/W,
SML1,err_handler_vcocal_nf_error_clr,0x501065A0,0,(2:2),R/W,
SML1,Reserved,0x501065A0,0,(3:7),R/W,
SML1,err_handler_tdcint_frqtdcerr_clr,0x501065A0,0,(8:8),R/W,
SML1,err_handler_tdcint_ftdcreadingerrflag_clr,0x501065A0,0,(9:9),R/W,
SML1,err_handler_tdcint_frqtdcexeedlmtflag_clr,0x501065A0,0,(10:10),R/W,
SML1,Reserved,0x501065A0,0,(11:15),R/W,
SML1,err_handler_tdc_dlytdcexeedlmtflag_clr,0x501065A0,0,(16:16),R/W,
SML1,err_handler_tdc_dlytdcreadingerrflag_clr,0x501065A0,0,(17:17),R/W,
SML1,Reserved,0x501065A0,0,(18:31),R/W,
SML1,err_handler_vbattmonhigh_clr,0x501065A4,0,(0:0),R/W,
SML1,Reserved,0x501065A4,0,(1:7),R/W,
SML1,err_handler_pmu_txldodropoutflag_clr,0x501065A4,0,(8:8),R/W,
SML1,Reserved,0x501065A4,0,(9:15),R/W,
SML1,err_handler_vddhiomonlow_clr,0x501065A4,0,(16:16),R/W,
SML1,err_handler_vddhiomonhigh_clr,0x501065A4,0,(17:17),R/W,
SML1,err_handler_iooff_vdhio_domain_clr,0x501065A4,0,(18:18),R/W,
SML1,Reserved,0x501065A4,0,(19:23),R/W,
SML1,err_handler_vddtxinmonout_clr,0x501065A4,0,(24:24),R/W,
SML1,Reserved,0x501065A4,0,(25:31),R/W,
SML1,err_handler_rxctrl_rfagc_failed_sync_clr,0x501065A8,0,(0:0),R/W,
SML1,Reserved,0x501065A8,0,(1:7),R/W,
SML1,err_handler_dcoc_rxctrl_failed_clr,0x501065A8,0,(8:8),R/W,
SML1,Reserved,0x501065A8,0,(9:15),R/W,
SML1,err_handler_bbagc_rxctrl_failed_clr,0x501065A8,0,(16:16),R/W,
SML1,Reserved,0x501065A8,0,(17:23),R/W,
SML1,err_handler_trgtphopt_rxctrl_failed_clr,0x501065A8,0,(24:24),R/W,
SML1,Reserved,0x501065A8,0,(25:31),R/W,
SML1,err_handler_pll_pbpdpause_clr,0x501065AC,0,(0:0),R/W,
SML1,err_handler_trx_abpdpause_clr,0x501065AC,0,(1:1),R/W,
SML1,err_handler_digctrl_pll_pause_clr,0x501065AC,0,(2:2),R/W,
SML1,Reserved,0x501065AC,0,(3:7),R/W,
SML1,err_handler_aux_adc_doneb_clr,0x501065AC,0,(8:8),R/W,
SML1,Reserved,0x501065AC,0,(9:15),R/W,
SML1,err_handler_rfagc_force_protection_clr,0x501065AC,0,(16:16),R/W,
SML1,Reserved,0x501065AC,0,(17:31),R/W,
SML1,err_handler_ch_1_abs_clr_flag_1,0x501065B0,0,(0:0),R/W,
SML1,err_handler_ch_1_range_clr_flag_1,0x501065B0,0,(1:1),R/W,
SML1,Reserved,0x501065B0,0,(2:7),R/W,
SML1,err_handler_ch_1_abs_clr_flag_2,0x501065B0,0,(8:8),R/W,
SML1,err_handler_ch_1_range_clr_flag_2,0x501065B0,0,(9:9),R/W,
SML1,Reserved,0x501065B0,0,(10:15),R/W,
SML1,err_handler_ch_1_abs_clr_flag_3,0x501065B0,0,(16:16),R/W,
SML1,err_handler_ch_1_range_clr_flag_3,0x501065B0,0,(17:17),R/W,
SML1,Reserved,0x501065B0,0,(18:23),R/W,
SML1,err_handler_ch_1_abs_clr_flag_4,0x501065B0,0,(24:24),R/W,
SML1,err_handler_ch_1_range_clr_flag_4,0x501065B0,0,(25:25),R/W,
SML1,Reserved,0x501065B0,0,(26:31),R/W,
SML1,err_handler_ch_2_abs_clr_flag_1,0x501065B4,0,(0:0),R/W,
SML1,err_handler_ch_2_range_clr_flag_1,0x501065B4,0,(1:1),R/W,
SML1,Reserved,0x501065B4,0,(2:7),R/W,
SML1,err_handler_ch_2_abs_clr_flag_2,0x501065B4,0,(8:8),R/W,
SML1,err_handler_ch_2_range_clr_flag_2,0x501065B4,0,(9:9),R/W,
SML1,Reserved,0x501065B4,0,(10:15),R/W,
SML1,err_handler_ch_2_abs_clr_flag_3,0x501065B4,0,(16:16),R/W,
SML1,err_handler_ch_2_range_clr_flag_3,0x501065B4,0,(17:17),R/W,
SML1,Reserved,0x501065B4,0,(18:23),R/W,
SML1,err_handler_ch_2_abs_clr_flag_4,0x501065B4,0,(24:24),R/W,
SML1,err_handler_ch_2_range_clr_flag_4,0x501065B4,0,(25:25),R/W,
SML1,Reserved,0x501065B4,0,(26:31),R/W,
SML1,err_handler_ch_3_abs_clr_flag_1,0x501065B8,0,(0:0),R/W,
SML1,err_handler_ch_3_range_clr_flag_1,0x501065B8,0,(1:1),R/W,
SML1,Reserved,0x501065B8,0,(2:7),R/W,
SML1,err_handler_ch_3_abs_clr_flag_2,0x501065B8,0,(8:8),R/W,
SML1,err_handler_ch_3_range_clr_flag_2,0x501065B8,0,(9:9),R/W,
SML1,Reserved,0x501065B8,0,(10:15),R/W,
SML1,err_handler_ch_3_abs_clr_flag_3,0x501065B8,0,(16:16),R/W,
SML1,err_handler_ch_3_range_clr_flag_3,0x501065B8,0,(17:17),R/W,
SML1,Reserved,0x501065B8,0,(18:23),R/W,
SML1,err_handler_ch_3_abs_clr_flag_4,0x501065B8,0,(24:24),R/W,
SML1,err_handler_ch_3_range_clr_flag_4,0x501065B8,0,(25:25),R/W,
SML1,Reserved,0x501065B8,0,(26:31),R/W,
SML1,err_handler_all_sel_clr,0x501065BC,0,(0:31),R/W,
SML1,err_handler_all_ch_sel_clr,0x501065C0,0,(0:31),R/W,
SML1,err_handler_all_clr,0x501065C4,0,(0:0),R/W,
SML1,Reserved,0x501065C4,0,(1:31),R/W,
SML1,err_handler_pll_settle_sel,0x501065C8,0,(0:1),R/W,
SML1,err_handler_pll_lockdet_sel,0x501065C8,0,(2:3),R/W,
SML1,err_handler_vcocal_error_sel,0x501065C8,0,(4:5),R/W,
SML1,err_handler_vcocal_exceedlmtflag_sel,0x501065C8,0,(6:7),R/W,
SML1,err_handler_vcocal_nf_error_sel,0x501065C8,0,(8:9),R/W,
SML1,err_handler_tdcint_frqtdcerr_sel,0x501065C8,0,(10:11),R/W,
SML1,err_handler_tdcint_ftdcreadingerrflag_sel,0x501065C8,0,(12:13),R/W,
SML1,err_handler_tdcint_frqtdcexeedlmtflag_sel,0x501065C8,0,(14:15),R/W,
SML1,err_handler_tdc_dlytdcexeedlmtflag_sel,0x501065C8,0,(16:17),R/W,
SML1,err_handler_tdc_dlytdcreadingerrflag_sel,0x501065C8,0,(18:19),R/W,
SML1,err_handler_vbattmonhigh_sel,0x501065C8,0,(20:21),R/W,
SML1,err_handler_pmu_txldodropoutflag_sel,0x501065C8,0,(22:23),R/W,
SML1,err_handler_pmu_thrmprtout_sel,0x501065C8,0,(24:25),R/W,
SML1,err_handler_vddhiomonlow_sel,0x501065C8,0,(26:27),R/W,
SML1,err_handler_vddhiomonhigh_sel,0x501065C8,0,(28:29),R/W,
SML1,err_handler_iooff_vdhio_domain_sel,0x501065C8,0,(30:31),R/W,
SML1,err_handler_vddtxinmonout_sel,0x501065CC,0,(0:1),R/W,
SML1,err_handler_rxctrl_rfagc_failed_sync_sel,0x501065CC,0,(2:3),R/W,
SML1,err_handler_dcoc_rxctrl_failed_sel,0x501065CC,0,(4:5),R/W,
SML1,err_handler_bbagc_rxctrl_failed_sel,0x501065CC,0,(6:7),R/W,
SML1,err_handler_trgtphopt_rxctrl_failed_sel,0x501065CC,0,(8:9),R/W,
SML1,err_handler_pll_pbpdpause_sel,0x501065CC,0,(10:11),R/W,
SML1,err_handler_trx_abpdpause_sel,0x501065CC,0,(12:13),R/W,
SML1,err_handler_digctrl_pll_pause_sel,0x501065CC,0,(14:15),R/W,
SML1,err_handler_aux_adc_doneb_sel,0x501065CC,0,(16:17),R/W,
SML1,err_handler_rfagc_force_protection_sel,0x501065CC,0,(18:19),R/W,
SML1,spare_error_select,0x501065CC,0,(20:31),R/W,
SML1,err_handler_ch_1_offset_flag_1,0x501065D0,0,(0:12),R/W,
SML1,Reserved,0x501065D0,0,(13:15),R/W,
SML1,err_handler_ch_1_abs_threshold_flag_1,0x501065D0,0,(16:28),R/W,
SML1,Reserved,0x501065D0,0,(29:31),R/W,
SML1,err_handler_ch_1_high_threshold_flag_1,0x501065D4,0,(0:12),R/W,
SML1,Reserved,0x501065D4,0,(13:15),R/W,
SML1,err_handler_ch_1_low_threshold_flag_1,0x501065D4,0,(16:28),R/W,
SML1,Reserved,0x501065D4,0,(29:31),R/W,
SML1,err_handler_ch_1_offset_flag_2,0x501065D8,0,(0:12),R/W,
SML1,Reserved,0x501065D8,0,(13:15),R/W,
SML1,err_handler_ch_1_abs_threshold_flag_2,0x501065D8,0,(16:28),R/W,
SML1,Reserved,0x501065D8,0,(29:31),R/W,
SML1,err_handler_ch_1_high_threshold_flag_2,0x501065DC,0,(0:12),R/W,
SML1,Reserved,0x501065DC,0,(13:15),R/W,
SML1,err_handler_ch_1_low_threshold_flag_2,0x501065DC,0,(16:28),R/W,
SML1,Reserved,0x501065DC,0,(29:31),R/W,
SML1,err_handler_ch_1_offset_flag_3,0x501065E0,0,(0:12),R/W,
SML1,Reserved,0x501065E0,0,(13:15),R/W,
SML1,err_handler_ch_1_abs_threshold_flag_3,0x501065E0,0,(16:28),R/W,
SML1,Reserved,0x501065E0,0,(29:31),R/W,
SML1,err_handler_ch_1_high_threshold_flag_3,0x501065E4,0,(0:12),R/W,
SML1,Reserved,0x501065E4,0,(13:15),R/W,
SML1,err_handler_ch_1_low_threshold_flag_3,0x501065E4,0,(16:28),R/W,
SML1,Reserved,0x501065E4,0,(29:31),R/W,
SML1,err_handler_ch_1_offset_flag_4,0x501065E8,0,(0:12),R/W,
SML1,Reserved,0x501065E8,0,(13:15),R/W,
SML1,err_handler_ch_1_abs_threshold_flag_4,0x501065E8,0,(16:28),R/W,
SML1,Reserved,0x501065E8,0,(29:31),R/W,
SML1,err_handler_ch_1_high_threshold_flag_4,0x501065EC,0,(0:12),R/W,
SML1,Reserved,0x501065EC,0,(13:15),R/W,
SML1,err_handler_ch_1_low_threshold_flag_4,0x501065EC,0,(16:28),R/W,
SML1,Reserved,0x501065EC,0,(29:31),R/W,
SML1,err_handler_ch_2_offset_flag_1,0x501065F0,0,(0:12),R/W,
SML1,Reserved,0x501065F0,0,(13:15),R/W,
SML1,err_handler_ch_2_abs_threshold_flag_1,0x501065F0,0,(16:28),R/W,
SML1,Reserved,0x501065F0,0,(29:31),R/W,
SML1,err_handler_ch_2_high_threshold_flag_1,0x501065F4,0,(0:12),R/W,
SML1,Reserved,0x501065F4,0,(13:15),R/W,
SML1,err_handler_ch_2_low_threshold_flag_1,0x501065F4,0,(16:28),R/W,
SML1,Reserved,0x501065F4,0,(29:31),R/W,
SML1,err_handler_ch_2_offset_flag_2,0x501065F8,0,(0:12),R/W,
SML1,Reserved,0x501065F8,0,(13:15),R/W,
SML1,err_handler_ch_2_abs_threshold_flag_2,0x501065F8,0,(16:28),R/W,
SML1,Reserved,0x501065F8,0,(29:31),R/W,
SML1,err_handler_ch_2_high_threshold_flag_2,0x501065FC,0,(0:12),R/W,
SML1,Reserved,0x501065FC,0,(13:15),R/W,
SML1,err_handler_ch_2_low_threshold_flag_2,0x501065FC,0,(16:28),R/W,
SML1,Reserved,0x501065FC,0,(29:31),R/W,
SML1,err_handler_ch_2_offset_flag_3,0x50106600,0,(0:12),R/W,
SML1,Reserved,0x50106600,0,(13:15),R/W,
SML1,err_handler_ch_2_abs_threshold_flag_3,0x50106600,0,(16:28),R/W,
SML1,Reserved,0x50106600,0,(29:31),R/W,
SML1,err_handler_ch_2_high_threshold_flag_3,0x50106604,0,(0:12),R/W,
SML1,Reserved,0x50106604,0,(13:15),R/W,
SML1,err_handler_ch_2_low_threshold_flag_3,0x50106604,0,(16:28),R/W,
SML1,Reserved,0x50106604,0,(29:31),R/W,
SML1,err_handler_ch_2_offset_flag_4,0x50106608,0,(0:12),R/W,
SML1,Reserved,0x50106608,0,(13:15),R/W,
SML1,err_handler_ch_2_abs_threshold_flag_4,0x50106608,0,(16:28),R/W,
SML1,Reserved,0x50106608,0,(29:31),R/W,
SML1,err_handler_ch_2_high_threshold_flag_4,0x5010660C,0,(0:12),R/W,
SML1,Reserved,0x5010660C,0,(13:15),R/W,
SML1,err_handler_ch_2_low_threshold_flag_4,0x5010660C,0,(16:28),R/W,
SML1,Reserved,0x5010660C,0,(29:31),R/W,
SML1,err_handler_ch_3_offset_flag_1,0x50106610,0,(0:12),R/W,
SML1,Reserved,0x50106610,0,(13:15),R/W,
SML1,err_handler_ch_3_abs_threshold_flag_1,0x50106610,0,(16:28),R/W,
SML1,Reserved,0x50106610,0,(29:31),R/W,
SML1,err_handler_ch_3_high_threshold_flag_1,0x50106614,0,(0:12),R/W,
SML1,Reserved,0x50106614,0,(13:15),R/W,
SML1,err_handler_ch_3_low_threshold_flag_1,0x50106614,0,(16:28),R/W,
SML1,Reserved,0x50106614,0,(29:31),R/W,
SML1,err_handler_ch_3_offset_flag_2,0x50106618,0,(0:12),R/W,
SML1,Reserved,0x50106618,0,(13:15),R/W,
SML1,err_handler_ch_3_abs_threshold_flag_2,0x50106618,0,(16:28),R/W,
SML1,Reserved,0x50106618,0,(29:31),R/W,
SML1,err_handler_ch_3_high_threshold_flag_2,0x5010661C,0,(0:12),R/W,
SML1,Reserved,0x5010661C,0,(13:15),R/W,
SML1,err_handler_ch_3_low_threshold_flag_2,0x5010661C,0,(16:28),R/W,
SML1,Reserved,0x5010661C,0,(29:31),R/W,
SML1,err_handler_ch_3_offset_flag_3,0x50106620,0,(0:12),R/W,
SML1,Reserved,0x50106620,0,(13:15),R/W,
SML1,err_handler_ch_3_abs_threshold_flag_3,0x50106620,0,(16:28),R/W,
SML1,Reserved,0x50106620,0,(29:31),R/W,
SML1,err_handler_ch_3_high_threshold_flag_3,0x50106624,0,(0:12),R/W,
SML1,Reserved,0x50106624,0,(13:15),R/W,
SML1,err_handler_ch_3_low_threshold_flag_3,0x50106624,0,(16:28),R/W,
SML1,Reserved,0x50106624,0,(29:31),R/W,
SML1,err_handler_ch_3_offset_flag_4,0x50106628,0,(0:12),R/W,
SML1,Reserved,0x50106628,0,(13:15),R/W,
SML1,err_handler_ch_3_abs_threshold_flag_4,0x50106628,0,(16:28),R/W,
SML1,Reserved,0x50106628,0,(29:31),R/W,
SML1,err_handler_ch_3_high_threshold_flag_4,0x5010662C,0,(0:12),R/W,
SML1,Reserved,0x5010662C,0,(13:15),R/W,
SML1,err_handler_ch_3_low_threshold_flag_4,0x5010662C,0,(16:28),R/W,
SML1,Reserved,0x5010662C,0,(29:31),R/W,
SML1,err_handler_pll_settledonedig,0x50106630,0,(0:0),R,
SML1,spare_error_status_1,0x50106630,0,(1:7),R,
SML1,err_handler_pll_lockdet,0x50106630,0,(8:8),R,
SML1,spare_error_status_2,0x50106630,0,(9:15),R,
SML1,err_handler_pmu_thrmprtout,0x50106630,0,(16:16),R,
SML1,spare_error_status_3,0x50106630,0,(17:31),R,
SML1,err_handler_vcocal_error,0x50106634,0,(0:0),R,
SML1,err_handler_vcocal_exceedlmtflag,0x50106634,0,(1:1),R,
SML1,err_handler_vcocal_nf_error,0x50106634,0,(2:2),R,
SML1,spare_error_status_4,0x50106634,0,(3:7),R,
SML1,err_handler_tdcint_frqtdcerr,0x50106634,0,(8:8),R,
SML1,err_handler_tdcint_ftdcreadingerrflag,0x50106634,0,(9:9),R,
SML1,err_handler_tdcint_frqtdcexeedlmtflag,0x50106634,0,(10:10),R,
SML1,spare_error_status_5,0x50106634,0,(11:15),R,
SML1,err_handler_tdc_dlytdcexeedlmtflag,0x50106634,0,(16:16),R,
SML1,err_handler_tdc_dlytdcreadingerrflag,0x50106634,0,(17:17),R,
SML1,spare_error_status_6,0x50106634,0,(18:31),R,
SML1,err_handler_vbattmonhigh,0x50106638,0,(0:0),R,
SML1,spare_error_status_7,0x50106638,0,(1:7),R,
SML1,err_handler_pmu_txldodropoutflag,0x50106638,0,(8:8),R,
SML1,spare_error_status_8,0x50106638,0,(9:15),R,
SML1,err_handler_vddhiomonlow,0x50106638,0,(16:16),R,
SML1,err_handler_vddhiomonhigh,0x50106638,0,(17:17),R,
SML1,err_handler_iooff_vdhio_domain,0x50106638,0,(18:18),R,
SML1,spare_error_status_9,0x50106638,0,(19:23),R,
SML1,err_handler_vddtxinmonout,0x50106638,0,(24:24),R,
SML1,spare_error_status_10,0x50106638,0,(25:31),R,
SML1,err_handler_rxctrl_rfagc_failed_sync,0x5010663C,0,(0:0),R,
SML1,spare_error_status_11,0x5010663C,0,(1:7),R,
SML1,err_handler_dcoc_rxctrl_failed,0x5010663C,0,(8:8),R,
SML1,spare_error_status_12,0x5010663C,0,(9:15),R,
SML1,err_handler_bbagc_rxctrl_failed,0x5010663C,0,(16:16),R,
SML1,spare_error_status_13,0x5010663C,0,(17:23),R,
SML1,err_handler_trgtphopt_rxctrl_failed,0x5010663C,0,(24:24),R,
SML1,spare_error_status_14,0x5010663C,0,(25:31),R,
SML1,err_handler_pll_pbpdpause,0x50106640,0,(0:0),R,
SML1,spare_error_status_15,0x50106640,0,(1:7),R,
SML1,err_handler_trx_abpdpause,0x50106640,0,(8:8),R,
SML1,spare_error_status_16,0x50106640,0,(9:15),R,
SML1,err_handler_digctrl_pll_pause,0x50106640,0,(16:16),R,
SML1,spare_error_status_17,0x50106640,0,(17:31),R,
SML1,err_handler_aux_adc_doneb,0x50106644,0,(0:0),R,
SML1,spare_error_status_18,0x50106644,0,(1:7),R,
SML1,err_handler_rfagc_force_protection,0x50106644,0,(8:8),R,
SML1,spare_error_status_19,0x50106644,0,(9:31),R,
SML1,err_handler_all,0x50106648,0,(0:31),R,
SML1,err_handler_all_or,0x5010664C,0,(0:31),R,
SML1,err_handler_ch_1_abs_flag_1,0x50106650,0,(0:0),R,
SML1,err_handler_ch_1_range_flag_1,0x50106650,0,(1:1),R,
SML1,spare_error_ch_1_status_1,0x50106650,0,(2:7),R,
SML1,err_handler_ch_1_abs_flag_2,0x50106650,0,(8:8),R,
SML1,err_handler_ch_1_range_flag_2,0x50106650,0,(9:9),R,
SML1,spare_error_ch_1_status_2,0x50106650,0,(10:15),R,
SML1,err_handler_ch_1_abs_flag_3,0x50106650,0,(16:16),R,
SML1,err_handler_ch_1_range_flag_3,0x50106650,0,(17:17),R,
SML1,spare_error_ch_1_status_3,0x50106650,0,(18:23),R,
SML1,err_handler_ch_1_abs_flag_4,0x50106650,0,(24:24),R,
SML1,err_handler_ch_1_range_flag_4,0x50106650,0,(25:25),R,
SML1,spare_error_ch_1_status_4,0x50106650,0,(26:31),R,
SML1,err_handler_ch_2_abs_flag_1,0x50106654,0,(0:0),R,
SML1,err_handler_ch_2_range_flag_1,0x50106654,0,(1:1),R,
SML1,spare_error_ch_2_status_1,0x50106654,0,(2:7),R,
SML1,err_handler_ch_2_abs_flag_2,0x50106654,0,(8:8),R,
SML1,err_handler_ch_2_range_flag_2,0x50106654,0,(9:9),R,
SML1,spare_error_ch_2_status_2,0x50106654,0,(10:15),R,
SML1,err_handler_ch_2_abs_flag_3,0x50106654,0,(16:16),R,
SML1,err_handler_ch_2_range_flag_3,0x50106654,0,(17:17),R,
SML1,spare_error_ch_2_status_3,0x50106654,0,(18:23),R,
SML1,err_handler_ch_2_abs_flag_4,0x50106654,0,(24:24),R,
SML1,err_handler_ch_2_range_flag_4,0x50106654,0,(25:25),R,
SML1,spare_error_ch_2_status_4,0x50106654,0,(26:31),R,
SML1,err_handler_ch_3_abs_flag_1,0x50106658,0,(0:0),R,
SML1,err_handler_ch_3_range_flag_1,0x50106658,0,(1:1),R,
SML1,spare_error_ch_3_status_1,0x50106658,0,(2:7),R,
SML1,err_handler_ch_3_abs_flag_2,0x50106658,0,(8:8),R,
SML1,err_handler_ch_3_range_flag_2,0x50106658,0,(9:9),R,
SML1,spare_error_ch_3_status_2,0x50106658,0,(10:15),R,
SML1,err_handler_ch_3_abs_flag_3,0x50106658,0,(16:16),R,
SML1,err_handler_ch_3_range_flag_3,0x50106658,0,(17:17),R,
SML1,spare_error_ch_3_status_3,0x50106658,0,(18:23),R,
SML1,err_handler_ch_3_abs_flag_4,0x50106658,0,(24:24),R,
SML1,err_handler_ch_3_range_flag_4,0x50106658,0,(25:25),R,
SML1,spare_error_ch_3_status_4,0x50106658,0,(26:31),R,
SML1,err_handler_all_ch,0x5010665C,0,(0:31),R,
SML1,err_handler_all_ch_or,0x50106660,0,(0:31),R,
SML1,err_handler_ch_1,0x50106664,0,(0:15),R,
SML1,err_handler_ch_2,0x50106664,0,(16:31),R,
SML1,err_handler_ch_3,0x50106668,0,(0:15),R,
SML1,spare_error_ch,0x50106668,0,(16:31),R,
SML1,sml1_gpadc_ch_reading,0x5010666C,0,(0:12),R/W,
SML1,Reserved,0x5010666C,0,(13:31),R/W,
SML1,sml1_gpo_mux_sel_0,0x50106670,0,(0:31),R/W,
SML1,sml1_gpo_mux_sel_1,0x50106674,0,(0:31),R/W,
SML1,sml1_gpo_mux_sel_2,0x50106678,0,(0:31),R/W,
SML1,sml1_gpo_mux_sel_3,0x5010667C,0,(0:31),R/W,
SML1,sml1_gpo_mux_sel_4,0x50106680,0,(0:31),R/W,
SML1,sml1_gpo_mux_sel_5,0x50106684,0,(0:31),R/W,
SML1,sml1_gpo_mux_sel_6,0x50106688,0,(0:31),R/W,
SML1,sml1_gpi_mux_sel,0x5010668C,0,(0:8),R/W,
SML1,Reserved,0x5010668C,0,(9:15),R/W,
SML1,rxctrl_start_reg_gpio_sel,0x5010668C,0,(16:16),R/W,
SML1,rxctrl_done_ta_clr_reg_gpio_sel,0x5010668C,0,(17:17),R/W,
SML1,rxctrl_amp_pause_det_apply_reg_gpio_sel,0x5010668C,0,(18:18),R/W,
SML1,lpcd_detune_clear_reg_gpio_sel,0x5010668C,0,(19:19),R/W,
SML1,pllctrl_done_clr_reg_gpio_sel,0x5010668C,0,(20:20),R/W,
SML1,rfcol_strt_reg_gpio_sel,0x5010668C,0,(21:21),R/W,
SML1,rfcol_done_clear_reg_gpio_sel,0x5010668C,0,(22:22),R/W,
SML1,irq1_clr_generic_reg_gpio_sel,0x5010668C,0,(23:23),R/W,
SML1,err_all_clr_reg_gpio_sel,0x5010668C,0,(24:24),R/W,
SML1,Reserved,0x5010668C,0,(25:31),R/W,
SML1,irq1_clr_generic,0x50106690,0,(0:0),R/W,
SML1,Reserved,0x50106690,0,(1:31),R/W,
SML1,irq1_clr,0x50106694,0,(0:31),R/W,
SML1,irq4_clr,0x50106698,0,(0:31),R/W,
SML1,irq1_dsp_en,0x5010669C,0,(0:31),R/W,
SML1,irq1_mcu_en,0x501066A0,0,(0:31),R/W,
SML1,irq2_mcu_en,0x501066A4,0,(0:31),R/W,
SML1,irq2_dsp_en,0x501066A8,0,(0:31),R/W,
SML1,irq3_mcu_en,0x501066AC,0,(0:31),R/W,
SML1,irq3_dsp_en,0x501066B0,0,(0:31),R/W,
SML1,irq4_dsp_en,0x501066B4,0,(0:31),R/W,
SML1,irq4_mcu_en,0x501066B8,0,(0:31),R/W,
SML1,irq5_mcu_en,0x501066BC,0,(0:31),R/W,
SML1,irq5_dsp_en,0x501066C0,0,(0:31),R/W,
SML1,irq6_mcu_en,0x501066C4,0,(0:31),R/W,
SML1,irq6_dsp_en,0x501066C8,0,(0:31),R/W,
SML1,irq7_mcu_en,0x501066CC,0,(0:31),R/W,
SML1,irq7_dsp_en,0x501066D0,0,(0:31),R/W,
SML1,irq1_vect_edg_sel,0x501066D4,65343,(0:31),R/W,
SML1,irq4_vect_edg_sel,0x501066D8,65535,(0:31),R/W,
SML1,irq1_mcu_state,0x501066DC,0,(0:31),R,
SML1,irq2_mcu_state,0x501066E0,0,(0:31),R,
SML1,irq3_mcu_state,0x501066E4,0,(0:31),R,
SML1,irq4_mcu_state,0x501066E8,0,(0:31),R,
SML1,irq5_mcu_state,0x501066EC,0,(0:31),R,
SML1,irq6_mcu_state,0x501066F0,0,(0:31),R,
SML1,irq7_mcu_state,0x501066F4,0,(0:31),R,
SML1,irq1_src,0x501066F8,0,(0:31),R,
SML1,irq2_src,0x501066FC,0,(0:31),R,
SML1,irq3_src,0x50106700,0,(0:31),R,
SML1,irq4_src,0x50106704,0,(0:31),R,
SML1,irq5_src,0x50106708,0,(0:31),R,
SML1,irq6_src,0x5010670C,0,(0:31),R,
SML1,irq7_src,0x50106710,0,(0:31),R,
SML1,irq1_dsp_state,0x50106714,0,(0:31),R,
SML1,irq2_dsp_state,0x50106718,0,(0:31),R,
SML1,irq3_dsp_state,0x5010671C,0,(0:31),R,
SML1,irq4_dsp_state,0x50106720,0,(0:31),R,
SML1,irq5_dsp_state,0x50106724,0,(0:31),R,
SML1,irq6_dsp_state,0x50106728,0,(0:31),R,
SML1,irq7_dsp_state,0x5010672C,0,(0:31),R,
SML1,sml1_idmux_rfseq_line_0,0x50106730,0,(0:2),R/W,
SML1,Reserved,0x50106730,0,(3:3),R/W,
SML1,sml1_idmux_rfseq_line_1,0x50106730,0,(4:6),R/W,
SML1,Reserved,0x50106730,0,(7:7),R/W,
SML1,sml1_idmux_rfseq_line_2,0x50106730,0,(8:10),R/W,
SML1,Reserved,0x50106730,0,(11:11),R/W,
SML1,sml1_idmux_rfseq_line_3,0x50106730,0,(12:14),R/W,
SML1,Reserved,0x50106730,0,(15:15),R/W,
SML1,sml1_dma_mode,0x50106730,0,(16:23),R/W,
SML1,Reserved,0x50106730,0,(24:31),R/W,
SML1,sml1_idmux_sel0,0x50106734,0,(0:1),R/W,
SML1,sml1_idmux_sel1,0x50106734,0,(2:3),R/W,
SML1,sml1_idmux_sel2,0x50106734,0,(4:5),R/W,
SML1,sml1_idmux_sel3,0x50106734,0,(6:7),R/W,
SML1,sml1_idmux_sel4,0x50106734,0,(8:9),R/W,
SML1,sml1_idmux_sel5,0x50106734,0,(10:11),R/W,
SML1,sml1_idmux_sel6,0x50106734,0,(12:13),R/W,
SML1,sml1_idmux_sel7,0x50106734,0,(14:15),R/W,
SML1,sml1_idmux_sel8,0x50106734,0,(16:17),R/W,
SML1,sml1_idmux_sel9,0x50106734,0,(18:19),R/W,
SML1,sml1_idmux_sel10,0x50106734,0,(20:21),R/W,
SML1,sml1_idmux_sel11,0x50106734,0,(22:23),R/W,
SML1,sml1_idmux_sel12,0x50106734,0,(24:25),R/W,
SML1,sml1_idmux_sel13,0x50106734,0,(26:27),R/W,
SML1,sml1_idmux_sel14,0x50106734,0,(28:29),R/W,
SML1,sml1_idmux_sel15,0x50106734,0,(30:31),R/W,
SML1,sml1_idmux_sel16,0x50106738,0,(0:1),R/W,
SML1,sml1_idmux_sel17,0x50106738,0,(2:3),R/W,
SML1,sml1_idmux_sel18,0x50106738,0,(4:5),R/W,
SML1,sml1_idmux_sel19,0x50106738,0,(6:7),R/W,
SML1,sml1_idmux_sel20,0x50106738,0,(8:9),R/W,
SML1,sml1_idmux_sel21,0x50106738,0,(10:11),R/W,
SML1,sml1_idmux_sel22,0x50106738,0,(12:13),R/W,
SML1,sml1_idmux_sel23,0x50106738,0,(14:15),R/W,
SML1,sml1_idmux_sel24,0x50106738,0,(16:17),R/W,
SML1,sml1_idmux_sel25,0x50106738,0,(18:19),R/W,
SML1,sml1_idmux_sel26,0x50106738,0,(20:21),R/W,
SML1,sml1_idmux_sel27,0x50106738,0,(22:23),R/W,
SML1,sml1_idmux_sel28,0x50106738,0,(24:25),R/W,
SML1,sml1_idmux_sel29,0x50106738,0,(26:27),R/W,
SML1,sml1_idmux_sel30,0x50106738,0,(28:29),R/W,
SML1,sml1_idmux_sel31,0x50106738,0,(30:31),R/W,
SML1,sml1_idmux_sel32,0x5010673C,0,(0:1),R/W,
SML1,sml1_idmux_sel33,0x5010673C,0,(2:3),R/W,
SML1,sml1_idmux_sel34,0x5010673C,0,(4:5),R/W,
SML1,sml1_idmux_sel35,0x5010673C,0,(6:7),R/W,
SML1,sml1_idmux_sel36,0x5010673C,0,(8:9),R/W,
SML1,sml1_idmux_sel37,0x5010673C,0,(10:11),R/W,
SML1,sml1_idmux_sel38,0x5010673C,0,(12:13),R/W,
SML1,sml1_idmux_sel39,0x5010673C,0,(14:15),R/W,
SML1,sml1_idmux_sel40,0x5010673C,0,(16:17),R/W,
SML1,sml1_idmux_sel41,0x5010673C,0,(18:19),R/W,
SML1,sml1_idmux_sel42,0x5010673C,0,(20:21),R/W,
SML1,sml1_idmux_sel43,0x5010673C,0,(22:23),R/W,
SML1,sml1_idmux_sel44,0x5010673C,0,(24:25),R/W,
SML1,sml1_idmux_sel45,0x5010673C,0,(26:27),R/W,
SML1,sml1_idmux_sel46,0x5010673C,0,(28:29),R/W,
SML1,sml1_idmux_sel47,0x5010673C,0,(30:31),R/W,
SML1,sml1_idmux_sel48,0x50106740,0,(0:1),R/W,
SML1,sml1_idmux_sel49,0x50106740,0,(2:3),R/W,
SML1,sml1_idmux_sel50,0x50106740,0,(4:5),R/W,
SML1,sml1_idmux_sel51,0x50106740,0,(6:7),R/W,
SML1,sml1_idmux_sel52,0x50106740,0,(8:9),R/W,
SML1,sml1_idmux_sel53,0x50106740,0,(10:11),R/W,
SML1,sml1_idmux_sel54,0x50106740,0,(12:13),R/W,
SML1,sml1_idmux_sel55,0x50106740,0,(14:15),R/W,
SML1,sml1_idmux_sel56,0x50106740,0,(16:17),R/W,
SML1,sml1_idmux_sel57,0x50106740,0,(18:19),R/W,
SML1,sml1_idmux_sel58,0x50106740,0,(20:21),R/W,
SML1,sml1_idmux_sel59,0x50106740,0,(22:23),R/W,
SML1,sml1_idmux_sel60,0x50106740,0,(24:25),R/W,
SML1,sml1_idmux_sel61,0x50106740,0,(26:27),R/W,
SML1,sml1_idmux_sel62,0x50106740,0,(28:29),R/W,
SML1,sml1_idmux_sel63,0x50106740,0,(30:31),R/W,
SML1,sml1_idmux_sel64,0x50106744,0,(0:1),R/W,
SML1,sml1_idmux_sel65,0x50106744,0,(2:3),R/W,
SML1,sml1_idmux_sel66,0x50106744,0,(4:5),R/W,
SML1,sml1_idmux_sel67,0x50106744,0,(6:7),R/W,
SML1,sml1_idmux_sel68,0x50106744,0,(8:9),R/W,
SML1,sml1_idmux_sel69,0x50106744,0,(10:11),R/W,
SML1,sml1_idmux_sel70,0x50106744,0,(12:13),R/W,
SML1,sml1_idmux_sel71,0x50106744,0,(14:15),R/W,
SML1,sml1_idmux_sel72,0x50106744,0,(16:17),R/W,
SML1,sml1_idmux_sel73,0x50106744,0,(18:19),R/W,
SML1,sml1_idmux_sel74,0x50106744,0,(20:21),R/W,
SML1,sml1_idmux_sel75,0x50106744,0,(22:23),R/W,
SML1,sml1_idmux_sel76,0x50106744,0,(24:25),R/W,
SML1,sml1_idmux_sel77,0x50106744,0,(26:27),R/W,
SML1,sml1_idmux_sel78,0x50106744,0,(28:29),R/W,
SML1,sml1_idmux_sel79,0x50106744,0,(30:31),R/W,
SML1,sml1_idmux_sel80,0x50106748,0,(0:1),R/W,
SML1,sml1_idmux_sel81,0x50106748,0,(2:3),R/W,
SML1,sml1_idmux_sel82,0x50106748,0,(4:5),R/W,
SML1,sml1_idmux_sel83,0x50106748,0,(6:7),R/W,
SML1,sml1_idmux_sel84,0x50106748,0,(8:9),R/W,
SML1,sml1_idmux_sel85,0x50106748,0,(10:11),R/W,
SML1,sml1_idmux_sel86,0x50106748,0,(12:13),R/W,
SML1,sml1_idmux_sel87,0x50106748,0,(14:15),R/W,
SML1,sml1_idmux_sel88,0x50106748,0,(16:17),R/W,
SML1,sml1_idmux_sel89,0x50106748,0,(18:19),R/W,
SML1,sml1_idmux_sel90,0x50106748,0,(20:21),R/W,
SML1,sml1_idmux_sel91,0x50106748,0,(22:23),R/W,
SML1,sml1_idmux_sel92,0x50106748,0,(24:25),R/W,
SML1,sml1_idmux_sel93,0x50106748,0,(26:27),R/W,
SML1,sml1_idmux_sel94,0x50106748,0,(28:29),R/W,
SML1,sml1_idmux_sel95,0x50106748,0,(30:31),R/W,
SML1,sml1_idmux_sel96,0x5010674C,0,(0:1),R/W,
SML1,sml1_idmux_sel97,0x5010674C,0,(2:3),R/W,
SML1,sml1_idmux_sel98,0x5010674C,0,(4:5),R/W,
SML1,sml1_idmux_sel99,0x5010674C,0,(6:7),R/W,
SML1,sml1_idmux_sel100,0x5010674C,0,(8:9),R/W,
SML1,sml1_idmux_sel101,0x5010674C,0,(10:11),R/W,
SML1,sml1_idmux_sel102,0x5010674C,0,(12:13),R/W,
SML1,sml1_idmux_sel103,0x5010674C,0,(14:15),R/W,
SML1,sml1_idmux_sel104,0x5010674C,0,(16:17),R/W,
SML1,sml1_idmux_sel105,0x5010674C,0,(18:19),R/W,
SML1,sml1_idmux_sel106,0x5010674C,0,(20:21),R/W,
SML1,sml1_idmux_sel107,0x5010674C,0,(22:23),R/W,
SML1,sml1_idmux_sel108,0x5010674C,0,(24:25),R/W,
SML1,sml1_idmux_sel109,0x5010674C,0,(26:27),R/W,
SML1,sml1_idmux_sel110,0x5010674C,0,(28:29),R/W,
SML1,sml1_idmux_sel111,0x5010674C,0,(30:31),R/W,
SML1,sml1_idmux_sel112,0x50106750,0,(0:1),R/W,
SML1,sml1_idmux_sel113,0x50106750,0,(2:3),R/W,
SML1,sml1_idmux_sel114,0x50106750,0,(4:5),R/W,
SML1,sml1_idmux_sel115,0x50106750,0,(6:7),R/W,
SML1,sml1_idmux_sel116,0x50106750,0,(8:9),R/W,
SML1,sml1_idmux_sel117,0x50106750,0,(10:11),R/W,
SML1,sml1_idmux_sel118,0x50106750,0,(12:13),R/W,
SML1,sml1_idmux_sel119,0x50106750,0,(14:15),R/W,
SML1,sml1_idmux_sel120,0x50106750,0,(16:17),R/W,
SML1,sml1_idmux_sel121,0x50106750,0,(18:19),R/W,
SML1,sml1_idmux_sel122,0x50106750,0,(20:21),R/W,
SML1,sml1_idmux_sel123,0x50106750,0,(22:23),R/W,
SML1,sml1_idmux_sel124,0x50106750,0,(24:25),R/W,
SML1,sml1_idmux_sel125,0x50106750,0,(26:27),R/W,
SML1,sml1_idmux_sel126,0x50106750,0,(28:29),R/W,
SML1,sml1_idmux_sel127,0x50106750,0,(30:31),R/W,
SML1,sml1_idmux_en_0,0x50106754,0,(0:31),R/W,
SML1,sml1_idmux_en_1,0x50106758,0,(0:31),R/W,
SML1,sml1_idmux_en_2,0x5010675C,0,(0:31),R/W,
SML1,sml1_idmux_en_3,0x50106760,0,(0:31),R/W,
SML1,sml1_odmux_out1_sel,0x50106764,0,(0:9),R/W,
SML1,sml1_odmux_out2_sel,0x50106764,0,(10:19),R/W,
SML1,sml1_odmux_out3_sel,0x50106764,0,(20:29),R/W,
SML1,Reserved,0x50106764,0,(30:31),R/W,
SML1,sml1_odmux_out4_sel,0x50106768,0,(0:9),R/W,
SML1,Reserved,0x50106768,0,(10:31),R/W,
SML1,spare_sml1_reg1,0x5010676C,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg2,0x50106770,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg3,0x50106774,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg4,0x50106778,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg5,0x5010677C,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg6,0x50106780,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg7,0x50106784,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg8,0x50106788,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg9,0x5010678C,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg10,0x50106790,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg11,0x50106794,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg12,0x50106798,65535,(0:31),R/W,Spare
SML1,spare_sml1_reg13,0x5010679C,65535,(0:31),R/W,Spare
SML1,Reserved,0x501067A0,0,(0:31),R/W,
SML1,Reserved,0x501067A4,0,(0:31),R/W,
SML1,Reserved,0x501067A8,0,(0:31),R/W,
SML1,Reserved,0x501067AC,0,(0:31),R/W,
SML1,spare_sml1_rdreg0,0x501067B0,0,(0:31),R,Spare
SML1,spare_sml1_rdreg1,0x501067B4,0,(0:31),R,Spare
SML1,spare_sml1_rdreg2,0x501067B8,0,(0:31),R,Spare
SML1,spare_sml1_rdreg3,0x501067BC,0,(0:31),R,Spare
SML1,spare_sml1_rdreg4,0x501067C0,0,(0:31),R,Spare
SML1,spare_sml1_rdreg5,0x501067C4,0,(0:31),R,Spare
SML1,spare_sml1_rdreg6,0x501067C8,0,(0:31),R,Spare
SML1,spare_sml1_rdreg7,0x501067CC,0,(0:31),R,Spare
SML1,spare_sml1_rdreg8,0x501067D0,0,(0:31),R,Spare
SML1,spare_sml1_rdreg9,0x501067D4,0,(0:31),R,Spare
SML1,spare_sml1_rdreg10,0x501067D8,0,(0:31),R,Spare
SML1,spare_sml1_rdreg11,0x501067DC,0,(0:31),R,Spare
SML1,spare_sml1_rdreg12,0x501067E0,0,(0:31),R,Spare
SML1,spare_sml1_rdreg13,0x501067E4,0,(0:31),R,Spare
SML1,spare_sml1_rdreg14,0x501067E8,0,(0:31),R,Spare
SML1,spare_sml1_rdreg15,0x501067EC,0,(0:31),R,Spare
SML1,Reserved,0x501067F0,0,(0:31),R,
SML1,Reserved,0x501067F4,0,(0:31),R,
